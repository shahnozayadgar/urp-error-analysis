SELECT COUNT( * ) FROM head WHERE head.age > 56	department_management
SELECT head.name , head.born_state , head.age FROM head ORDER BY head.age ASC	department_management
SELECT department.creation , department.name , department.budget_in_billions FROM department	department_management
SELECT MAX( department.budget_in_billions ) , MIN( department.budget_in_billions ) FROM department	department_management
SELECT AVG( department.num_employees ) FROM department WHERE department.ranking BETWEEN 10 and 15	department_management
SELECT head.name FROM head WHERE head.born_state != 'California'	department_management
SELECT DISTINCT department.creation FROM department JOIN management ON department.department_id = management.department_id JOIN head ON management.head_id = head.head_id WHERE head.born_state = 'Alabama'	department_management
SELECT head.born_state FROM head GROUP BY head.born_state HAVING COUNT( * ) >= 3	department_management
SELECT department.creation FROM department GROUP BY department.creation ORDER BY COUNT( * ) DESC LIMIT 1	department_management
SELECT department.name , department.num_employees FROM department JOIN management ON department.department_id = management.department_id WHERE management.temporary_acting = 'yes'	department_management
SELECT COUNT( DISTINCT management.temporary_acting ) FROM management	department_management
SELECT COUNT( * ) FROM department WHERE department.department_id NOT IN (SELECT management.department_id FROM management)	department_management
SELECT DISTINCT head.age FROM head JOIN management ON head.head_id = management.head_id WHERE management.temporary_acting = 'yes'	department_management
SELECT head.born_state FROM department JOIN management ON department.department_id = management.department_id JOIN head ON management.head_id = head.head_id WHERE department.name = 'Treasury' INTERSECT SELECT head.born_state FROM department JOIN management ON department.department_id = management.department_id JOIN head ON management.head_id = head.head_id WHERE department.name = 'Homeland Security'	department_management
SELECT department.department_id , department.name , COUNT( * ) FROM management JOIN department ON management.department_id = department.department_id HAVING COUNT( * ) > 1	department_management
SELECT head.head_id , head.name FROM head WHERE head.name LIKE '%Ha%'	department_management
SELECT COUNT( * ) FROM farm	farm
SELECT COUNT( * ) FROM farm	farm
SELECT farm.total_horses FROM farm ORDER BY farm.total_horses ASC	farm
SELECT farm.total_horses FROM farm ORDER BY farm.total_horses ASC	farm
SELECT farm_competition.hosts FROM farm_competition WHERE farm_competition.theme != 'Aliens'	farm
SELECT farm_competition.hosts FROM farm_competition WHERE farm_competition.theme != 'Aliens'	farm
SELECT farm_competition.theme FROM farm_competition ORDER BY farm_competition.year ASC	farm
SELECT farm_competition.theme FROM farm_competition ORDER BY farm_competition.year ASC	farm
SELECT AVG( farm.working_horses ) FROM farm WHERE farm.total_horses > 5000	farm
SELECT AVG( farm.working_horses ) FROM farm WHERE farm.total_horses > 5000	farm
SELECT MAX( farm.cows ) , MIN( farm.cows ) FROM farm	farm
SELECT MAX( farm.cows ) , MIN( farm.cows ) FROM farm	farm
SELECT COUNT( DISTINCT city.status ) FROM city	farm
SELECT COUNT( DISTINCT city.status ) FROM city	farm
SELECT city.official_name FROM city ORDER BY city.population DESC	farm
SELECT city.official_name FROM city ORDER BY city.population DESC	farm
SELECT city.official_name , city.status FROM city ORDER BY city.population DESC LIMIT 1	farm
SELECT city.official_name , city.status FROM city ORDER BY city.population DESC LIMIT 1	farm
SELECT farm_competition.year , city.official_name FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id	farm
SELECT farm_competition.year , city.official_name FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id	farm
SELECT city.official_name FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id GROUP BY farm_competition.host_city_id HAVING COUNT( * ) > 1	farm
SELECT city.official_name FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id GROUP BY farm_competition.host_city_id HAVING COUNT( * ) > 1	farm
SELECT city.status FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id GROUP BY farm_competition.host_city_id ORDER BY COUNT( * ) DESC LIMIT 1	farm
SELECT city.status FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id GROUP BY farm_competition.host_city_id ORDER BY COUNT( * ) DESC LIMIT 1	farm
SELECT farm_competition.theme FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id WHERE city.population > 1000	farm
SELECT farm_competition.theme FROM city JOIN farm_competition ON city.city_id = farm_competition.host_city_id WHERE city.population > 1000	farm
SELECT city.status , AVG( city.population ) FROM city GROUP BY city.status	farm
SELECT city.status , AVG( city.population ) FROM city GROUP BY city.status	farm
SELECT city.status FROM city GROUP BY city.status ORDER BY COUNT( * ) ASC	farm
SELECT city.status FROM city GROUP BY city.status ORDER BY COUNT( * ) ASC	farm
SELECT city.status FROM city GROUP BY city.status ORDER BY COUNT( * ) DESC LIMIT 1	farm
SELECT city.status FROM city GROUP BY city.status ORDER BY COUNT( * ) DESC LIMIT 1	farm
SELECT city.official_name FROM city WHERE city.city_id NOT IN (SELECT farm_competition.host_city_id FROM farm_competition)	farm
SELECT city.official_name FROM city WHERE city.city_id NOT IN (SELECT farm_competition.host_city_id FROM farm_competition)	farm
SELECT city.status FROM city WHERE city.population > 1500 INTERSECT SELECT city.status FROM city WHERE city.population<500	farm
SELECT city.status FROM city WHERE city.population > 1500 INTERSECT SELECT city.status FROM city WHERE city.population<500	farm
SELECT city.official_name FROM city WHERE city.population > 1500 OR city.population<500	farm
SELECT city.official_name FROM city WHERE city.population > 1500 OR city.population<500	farm
SELECT city.census_ranking FROM city WHERE city.status != 'Village'	farm
SELECT city.census_ranking FROM city WHERE city.status != 'Village'	farm
SELECT courses.course_name FROM courses JOIN student_course_registrations ON courses.course_id = student_course_registrations.course_id GROUP BY courses.course_id ORDER BY COUNT( * ) DESC LIMIT 1	student_assessment
SELECT courses.course_name FROM courses JOIN student_course_registrations ON courses.course_id = student_course_registrations.course_id GROUP BY courses.course_id ORDER BY COUNT( * ) DESC LIMIT 1	student_assessment
SELECT student_course_registrations.student_id FROM student_course_registrations GROUP BY student_course_registrations.student_id ORDER BY COUNT( * ) ASC LIMIT 1	student_assessment
SELECT student_course_registrations.student_id FROM student_course_registrations GROUP BY student_course_registrations.student_id ORDER BY COUNT( * ) ASC LIMIT 1	student_assessment
SELECT people.first_name , people.last_name FROM candidates JOIN people ON candidates.candidate_id = people.person_id	student_assessment
SELECT people.first_name , people.last_name FROM candidates JOIN people ON candidates.candidate_id = people.person_id	student_assessment
SELECT students.student_id FROM students WHERE students.student_id NOT IN (SELECT student_course_attendance.student_id FROM student_course_attendance)	student_assessment
SELECT students.student_id FROM students WHERE students.student_id NOT IN (SELECT student_course_attendance.student_id FROM student_course_attendance)	student_assessment
SELECT student_course_attendance.student_id FROM student_course_attendance	student_assessment
SELECT student_course_attendance.student_id FROM student_course_attendance	student_assessment
SELECT student_course_registrations.student_id , courses.course_name FROM student_course_registrations JOIN courses ON student_course_registrations.course_id = courses.course_id	student_assessment
SELECT students.student_details FROM student_course_registrations JOIN students ON student_course_registrations.student_id = students.student_id ORDER BY student_course_registrations.registration_date DESC LIMIT 1	student_assessment
SELECT students.student_details FROM student_course_registrations JOIN students ON student_course_registrations.student_id = students.student_id ORDER BY student_course_registrations.registration_date DESC LIMIT 1	student_assessment
SELECT COUNT( * ) FROM courses JOIN student_course_attendance ON courses.course_id = student_course_attendance.course_id WHERE courses.course_name = 'English'	student_assessment
SELECT COUNT( * ) FROM courses JOIN student_course_attendance ON courses.course_id = student_course_attendance.course_id WHERE courses.course_name = 'English'	student_assessment
SELECT COUNT( * ) FROM courses JOIN student_course_attendance ON courses.course_id = student_course_attendance.course_id WHERE student_course_attendance.student_id = 171	student_assessment
SELECT COUNT( * ) FROM courses JOIN student_course_attendance ON courses.course_id = student_course_attendance.course_id WHERE student_course_attendance.student_id = 171	student_assessment
SELECT candidates.candidate_id FROM people JOIN candidates ON people.person_id = candidates.candidate_id WHERE people.email_address = 'stanley.monahan@example.org'	student_assessment
SELECT candidates.candidate_id FROM people JOIN candidates ON people.person_id = candidates.candidate_id WHERE people.email_address = 'stanley.monahan@example.org'	student_assessment
SELECT candidate_assessments.candidate_id FROM candidate_assessments ORDER BY candidate_assessments.assessment_date DESC LIMIT 1	student_assessment
SELECT candidate_assessments.candidate_id FROM candidate_assessments ORDER BY candidate_assessments.assessment_date DESC LIMIT 1	student_assessment
SELECT students.student_details FROM students JOIN student_course_registrations ON students.student_id = student_course_registrations.student_id GROUP BY students.student_id ORDER BY COUNT( * ) DESC LIMIT 1	student_assessment
SELECT students.student_details FROM students JOIN student_course_registrations ON students.student_id = student_course_registrations.student_id GROUP BY students.student_id ORDER BY COUNT( * ) DESC LIMIT 1	student_assessment
SELECT students.student_id , COUNT( * ) FROM students JOIN student_course_registrations ON students.student_id = student_course_registrations.student_id GROUP BY students.student_id	student_assessment
SELECT students.student_id , COUNT( * ) FROM students JOIN student_course_registrations ON students.student_id = student_course_registrations.student_id GROUP BY students.student_id	student_assessment
SELECT courses.course_name , COUNT( * ) FROM students JOIN student_course_registrations ON students.student_id = student_course_registrations.student_id JOIN courses ON student_course_registrations.course_id = courses.course_id GROUP BY student_course_registrations.course_id	student_assessment
SELECT courses.course_name , COUNT( * ) FROM students JOIN student_course_registrations ON students.student_id = student_course_registrations.student_id JOIN courses ON student_course_registrations.course_id = courses.course_id GROUP BY student_course_registrations.course_id	student_assessment
SELECT candidate_assessments.candidate_id FROM candidate_assessments WHERE candidate_assessments.asessment_outcome_code = 'Pass'	student_assessment
SELECT candidate_assessments.candidate_id FROM candidate_assessments WHERE candidate_assessments.asessment_outcome_code = 'Pass'	student_assessment
SELECT people.cell_mobile_number FROM candidates JOIN candidate_assessments ON candidates.candidate_id = candidate_assessments.candidate_id JOIN people ON candidates.candidate_id = people.person_id WHERE candidate_assessments.asessment_outcome_code = 'Fail'	student_assessment
SELECT people.cell_mobile_number FROM candidates JOIN candidate_assessments ON candidates.candidate_id = candidate_assessments.candidate_id JOIN people ON candidates.candidate_id = people.person_id WHERE candidate_assessments.asessment_outcome_code = 'Fail'	student_assessment
SELECT student_course_attendance.student_id FROM student_course_attendance WHERE student_course_attendance.course_id = 301	student_assessment
SELECT student_course_attendance.student_id FROM student_course_attendance WHERE student_course_attendance.course_id = 301	student_assessment
SELECT student_course_attendance.student_id FROM student_course_attendance WHERE student_course_attendance.course_id = 301 ORDER BY student_course_attendance.date_of_attendance DESC LIMIT 1	student_assessment
SELECT student_course_attendance.student_id FROM student_course_attendance WHERE student_course_attendance.course_id = 301 ORDER BY student_course_attendance.date_of_attendance DESC LIMIT 1	student_assessment
SELECT DISTINCT addresses.city FROM addresses JOIN people_addresses ON addresses.address_id = people_addresses.address_id	student_assessment
SELECT DISTINCT addresses.city FROM addresses JOIN people_addresses ON addresses.address_id = people_addresses.address_id	student_assessment
SELECT DISTINCT addresses.city FROM addresses JOIN people_addresses ON addresses.address_id = people_addresses.address_id JOIN students ON people_addresses.person_id = students.student_id	student_assessment
SELECT DISTINCT addresses.city FROM addresses JOIN people_addresses ON addresses.address_id = people_addresses.address_id JOIN students ON people_addresses.person_id = students.student_id	student_assessment
SELECT courses.course_name FROM courses ORDER BY courses.course_name ASC	student_assessment
SELECT courses.course_name FROM courses ORDER BY courses.course_name ASC	student_assessment
SELECT people.first_name FROM people ORDER BY people.first_name ASC	student_assessment
SELECT people.first_name FROM people ORDER BY people.first_name ASC	student_assessment
SELECT student_course_registrations.student_id FROM student_course_registrations UNION SELECT student_course_attendance.student_id FROM student_course_attendance	student_assessment
SELECT student_course_registrations.student_id FROM student_course_registrations UNION SELECT student_course_attendance.student_id FROM student_course_attendance	student_assessment
SELECT student_course_registrations.course_id FROM student_course_registrations WHERE student_course_registrations.student_id = 121 UNION SELECT student_course_attendance.course_id FROM student_course_attendance WHERE student_course_attendance.student_id = 121	student_assessment
SELECT student_course_registrations.course_id FROM student_course_registrations WHERE student_course_registrations.student_id = 121 UNION SELECT student_course_attendance.course_id FROM student_course_attendance WHERE student_course_attendance.student_id = 121	student_assessment
SELECT * FROM student_course_registrations WHERE student_course_registrations.student_id NOT IN (SELECT student_course_attendance.student_id FROM student_course_attendance)	student_assessment
SELECT * FROM student_course_registrations WHERE student_course_registrations.student_id NOT IN (SELECT student_course_attendance.student_id FROM student_course_attendance)	student_assessment
SELECT student_course_registrations.student_id FROM courses JOIN student_course_registrations ON courses.course_id = student_course_registrations.course_id WHERE courses.course_name = 'statistics' ORDER BY student_course_registrations.registration_date ASC	student_assessment
SELECT student_course_registrations.student_id FROM courses JOIN student_course_registrations ON courses.course_id = student_course_registrations.course_id WHERE courses.course_name = 'statistics' ORDER BY student_course_registrations.registration_date ASC	student_assessment
SELECT student_course_attendance.student_id FROM courses JOIN student_course_attendance ON courses.course_id = student_course_attendance.course_id WHERE courses.course_name = 'statistics' ORDER BY student_course_attendance.date_of_attendance ASC	student_assessment
SELECT student_course_attendance.student_id FROM courses JOIN student_course_attendance ON courses.course_id = student_course_attendance.course_id WHERE courses.course_name = 'statistics' ORDER BY student_course_attendance.date_of_attendance ASC	student_assessment
SELECT weather.date FROM weather WHERE weather.max_temperature_f > 85	bike_1
SELECT weather.date FROM weather WHERE weather.max_temperature_f > 85	bike_1
SELECT station.name FROM station WHERE station.lat<37.5	bike_1
SELECT station.name FROM station WHERE station.lat<37.5	bike_1
SELECT station.city , MAX( station.lat ) FROM station GROUP BY station.city	bike_1
SELECT station.city , MAX( station.lat ) FROM station GROUP BY station.city	bike_1
SELECT trip.start_station_name , trip.end_station_name FROM trip ORDER BY trip.id ASC LIMIT 3	bike_1
SELECT trip.start_station_name , trip.end_station_name FROM trip ORDER BY trip.id ASC LIMIT 3	bike_1
SELECT AVG( station.lat ) , AVG( station.long ) FROM station WHERE station.city = 'San Jose'	bike_1
SELECT AVG( station.lat ) , AVG( station.long ) FROM station WHERE station.city = 'San Jose'	bike_1
SELECT trip.id FROM trip ORDER BY trip.duration ASC LIMIT 1	bike_1
SELECT trip.id FROM trip ORDER BY trip.duration ASC LIMIT 1	bike_1
SELECT SUM( trip.duration ) , MAX( trip.duration ) FROM trip WHERE trip.bike_id = 636	bike_1
SELECT SUM( trip.duration ) , MAX( trip.duration ) FROM trip WHERE trip.bike_id = 636	bike_1
SELECT weather.zip_code , AVG( weather.mean_temperature_f ) FROM weather WHERE weather.date = 'y' GROUP BY weather.zip_code	bike_1
SELECT weather.zip_code , AVG( weather.mean_temperature_f ) FROM weather WHERE weather.date LIKE '%8%' GROUP BY weather.zip_code	bike_1
SELECT COUNT( DISTINCT trip.bike_id ) FROM trip	bike_1
SELECT COUNT( DISTINCT trip.bike_id ) FROM trip	bike_1
SELECT COUNT( DISTINCT station.city ) FROM station	bike_1
SELECT COUNT( DISTINCT station.city ) FROM station	bike_1
SELECT COUNT( * ) FROM station WHERE station.city = 'Mountain View'	bike_1
SELECT COUNT( * ) FROM station WHERE station.city = 'Mountain View'	bike_1
SELECT DISTINCT station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available = 7	bike_1
SELECT DISTINCT station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available = 7	bike_1
station , trip	bike_1
SELECT trip.start_station_name , trip.start_station_id FROM trip WHERE trip.start_date = (SELECT trip.start_date FROM trip ORDER BY trip.start_date ASC LIMIT 1) GROUP BY trip.start_station_name ORDER BY COUNT( * ) DESC	bike_1
SELECT trip.bike_id FROM trip WHERE trip.zip_code = 94002 GROUP BY trip.bike_id ORDER BY COUNT( * ) DESC LIMIT 1	bike_1
SELECT trip.bike_id FROM trip WHERE trip.zip_code = 94002 GROUP BY trip.bike_id ORDER BY COUNT( * ) DESC LIMIT 1	bike_1
SELECT COUNT( * ) FROM weather WHERE weather.mean_humidity > 50 AND weather.mean_visibility_miles > 8	bike_1
SELECT COUNT( * ) FROM weather WHERE weather.mean_humidity > 50 AND weather.mean_visibility_miles > 8	bike_1
SELECT station.lat , station.long , station.city FROM station JOIN trip ON station.id = trip.start_station_id ORDER BY trip.duration ASC LIMIT 1	bike_1
SELECT station.lat , station.long , station.city FROM station JOIN trip ON station.id = trip.start_station_id ORDER BY trip.duration ASC LIMIT 1	bike_1
SELECT station.id FROM station WHERE station.city = 'San Francisco' INTERSECT SELECT status.station_id FROM status GROUP BY status.station_id HAVING AVG( status.bikes_available ) > 10	bike_1
SELECT station.id FROM station WHERE station.city = 'San Francisco' INTERSECT SELECT status.station_id FROM status GROUP BY status.station_id HAVING AVG( status.bikes_available ) > 10	bike_1
SELECT station.name , station.id FROM station JOIN status ON station.id = status.station_id HAVING AVG( status.bikes_available ) > 14 EXCEPT SELECT station.name , station.id FROM station JOIN status ON station.id = status.station_id HAVING AVG( status.bikes_available ) > 14	bike_1
station , status	bike_1
SELECT weather.cloud_cover FROM weather WHERE weather.zip_code = 94107 GROUP BY weather.cloud_cover ORDER BY COUNT( * ) DESC LIMIT 3	bike_1
SELECT weather.cloud_cover FROM weather WHERE weather.zip_code = 94107 GROUP BY weather.cloud_cover ORDER BY COUNT( * ) DESC LIMIT 3	bike_1
SELECT weather.zip_code FROM weather GROUP BY weather.zip_code ORDER BY AVG( weather.mean_sea_level_pressure_inches ) ASC LIMIT 1	bike_1
SELECT weather.zip_code FROM weather GROUP BY weather.zip_code ORDER BY AVG( weather.mean_sea_level_pressure_inches ) ASC LIMIT 1	bike_1
SELECT AVG( status.bikes_available ) FROM status WHERE status.station_id NOT IN (SELECT station.id FROM station WHERE station.city = 'Palo Alto')	bike_1
SELECT AVG( status.bikes_available ) FROM status WHERE status.station_id NOT IN (SELECT station.id FROM station WHERE station.city = 'Palo Alto')	bike_1
SELECT AVG( station.long ) FROM station WHERE station.id NOT IN (SELECT status.station_id FROM status GROUP BY status.station_id HAVING MAX( status.bikes_available ) > 10)	bike_1
SELECT AVG( station.long ) FROM station WHERE station.id NOT IN (SELECT status.station_id FROM status GROUP BY status.station_id HAVING MAX( status.bikes_available ) > 10)	bike_1
SELECT weather.date , weather.zip_code FROM weather WHERE weather.max_temperature_f >= 80	bike_1
SELECT weather.date , weather.zip_code FROM weather WHERE weather.max_temperature_f >= 80	bike_1
SELECT trip.id FROM trip JOIN weather ON trip.zip_code = weather.zip_code GROUP BY weather.zip_code HAVING AVG( weather.mean_temperature_f ) > 60	bike_1
SELECT trip.id FROM trip JOIN weather ON trip.zip_code = weather.zip_code GROUP BY weather.zip_code HAVING AVG( weather.mean_temperature_f ) > 60	bike_1
SELECT weather.zip_code , COUNT( * ) FROM weather WHERE weather.max_wind_speed_mph >= 25 GROUP BY weather.zip_code	bike_1
SELECT weather.zip_code , COUNT( * ) FROM weather WHERE weather.max_wind_speed_mph >= 25 GROUP BY weather.zip_code	bike_1
SELECT weather.date , weather.zip_code FROM weather WHERE weather.min_dew_point_f<(SELECT MIN( weather.min_dew_point_f ) FROM weather WHERE weather.zip_code = 94107)	bike_1
SELECT weather.date , weather.zip_code FROM weather WHERE weather.min_dew_point_f<(SELECT MIN( weather.min_dew_point_f ) FROM weather WHERE weather.zip_code = 94107)	bike_1
SELECT trip.id , station.installation_date FROM trip JOIN station ON trip.end_station_id = station.id	bike_1
SELECT trip.id , station.installation_date FROM trip JOIN station ON trip.end_station_id = station.id	bike_1
SELECT trip.id FROM trip JOIN station ON trip.start_station_id = station.id ORDER BY station.dock_count DESC LIMIT 1	bike_1
SELECT trip.id FROM trip JOIN station ON trip.start_station_id = station.id ORDER BY station.dock_count DESC LIMIT 1	bike_1
SELECT COUNT( * ) FROM trip JOIN station ON trip.end_station_id = station.id WHERE station.city != 'San Francisco'	bike_1
SELECT COUNT( * ) FROM trip JOIN station ON trip.end_station_id = station.id WHERE station.city != 'San Francisco'	bike_1
SELECT weather.date FROM weather JOIN 94107, ON weather.zip_code = 94107, WHERE weather.events != 'Fog' AND weather.events != 'Rain'	bike_1
SELECT weather.date FROM weather WHERE weather.zip_code = 94107 AND weather.zip_code = 94107 AND weather.events != 'fog'	bike_1
SELECT station.id FROM station WHERE station.lat > 37.4 EXCEPT SELECT status.station_id FROM status GROUP BY status.station_id HAVING MIN( status.bikes_available )<7	bike_1
SELECT station.id FROM station WHERE station.lat > 37.4 EXCEPT SELECT status.station_id FROM status GROUP BY status.station_id HAVING MIN( status.bikes_available )<7	bike_1
SELECT station.name FROM station JOIN status ON station.id = status.station_id GROUP BY status.station_id HAVING AVG( status.bikes_available ) > 10 EXCEPT SELECT station.name FROM station WHERE station.city = 'San Jose'	bike_1
SELECT station.name FROM station WHERE station.city = 'San Jose' EXCEPT SELECT station.name FROM station WHERE station.city = 'San Jose'	bike_1
SELECT station.name , station.lat , station.city FROM station ORDER BY station.lat ASC LIMIT 1	bike_1
SELECT station.name , station.lat , station.city FROM station ORDER BY station.lat ASC LIMIT 1	bike_1
SELECT weather.date , weather.mean_temperature_f , weather.mean_humidity FROM weather ORDER BY weather.max_gust_speed_mph DESC LIMIT 3	bike_1
SELECT weather.date , weather.mean_temperature_f , weather.mean_humidity FROM weather ORDER BY weather.max_gust_speed_mph DESC LIMIT 3	bike_1
SELECT station.city , COUNT( * ) FROM station GROUP BY station.city HAVING COUNT( * ) >= 15	bike_1
SELECT station.city , COUNT( * ) FROM station GROUP BY station.city HAVING COUNT( * ) >= 15	bike_1
SELECT trip.start_station_id , trip.start_station_name FROM trip GROUP BY trip.start_station_name HAVING COUNT( * ) >= 200	bike_1
SELECT trip.start_station_id , trip.start_station_name FROM trip GROUP BY trip.start_station_name HAVING COUNT( * ) >= 200	bike_1
SELECT weather.zip_code FROM weather GROUP BY weather.zip_code HAVING AVG( weather.mean_visibility_miles )<10	bike_1
SELECT weather.zip_code FROM weather GROUP BY weather.zip_code HAVING AVG( weather.mean_visibility_miles )<10	bike_1
SELECT station.city FROM station GROUP BY station.city ORDER BY MAX( station.lat ) DESC	bike_1
SELECT station.city FROM station GROUP BY station.city ORDER BY MAX( station.lat ) DESC	bike_1
SELECT weather.date , weather.cloud_cover FROM weather ORDER BY weather.cloud_cover DESC LIMIT 5	bike_1
SELECT weather.date , weather.cloud_cover FROM weather ORDER BY weather.cloud_cover DESC LIMIT 5	bike_1
SELECT trip.id , trip.duration FROM trip ORDER BY trip.duration DESC LIMIT 3	bike_1
SELECT trip.id , trip.duration FROM trip ORDER BY trip.duration DESC LIMIT 3	bike_1
SELECT station.name , station.long , AVG( trip.duration ) FROM station JOIN trip ON station.id = trip.start_station_id GROUP BY trip.start_station_id	bike_1
SELECT station.name , station.long , AVG( trip.duration ) FROM station JOIN trip ON station.id = trip.start_station_id GROUP BY trip.start_station_id	bike_1
SELECT station.name , station.lat , MIN( trip.duration ) FROM station JOIN trip ON station.id = trip.end_station_id GROUP BY trip.end_station_id	bike_1
SELECT station.name , station.lat , MIN( trip.duration ) FROM station JOIN trip ON station.id = trip.end_station_id GROUP BY trip.end_station_id	bike_1
SELECT DISTINCT trip.start_station_name FROM trip WHERE trip.duration<100	bike_1
SELECT DISTINCT trip.start_station_name FROM trip WHERE trip.duration<100	bike_1
SELECT DISTINCT weather.zip_code FROM weather EXCEPT SELECT DISTINCT weather.zip_code FROM weather WHERE weather.max_dew_point_f >= 70	bike_1
SELECT DISTINCT weather.zip_code FROM weather EXCEPT SELECT DISTINCT weather.zip_code FROM weather WHERE weather.max_dew_point_f >= 70	bike_1
SELECT trip.id FROM trip WHERE trip.duration >= (SELECT AVG( trip.duration ) FROM trip WHERE trip.zip_code = 94103)	bike_1
SELECT trip.id FROM trip WHERE trip.duration >= (SELECT AVG( trip.duration ) FROM trip WHERE trip.zip_code = 94103)	bike_1
SELECT weather.date FROM weather WHERE weather.mean_sea_level_pressure_inches >= 30.3 AND weather.mean_sea_level_pressure_inches <= 31	bike_1
SELECT weather.date FROM weather WHERE weather.mean_sea_level_pressure_inches >= 30.3 AND weather.mean_sea_level_pressure_inches <= 31	bike_1
SELECT weather.date , weather.min_temperature_f FROM weather ORDER BY weather.min_temperature_f ASC LIMIT 1	bike_1
SELECT weather.date , weather.mean_temperature_f FROM weather ORDER BY weather.mean_temperature_f ASC LIMIT 3	bike_1
SELECT DISTINCT station.id , station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available > 12	bike_1
SELECT DISTINCT station.id , station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available > 12	bike_1
SELECT weather.zip_code FROM weather GROUP BY weather.zip_code HAVING AVG( weather.mean_humidity )<70 INTERSECT SELECT trip.zip_code FROM trip GROUP BY trip.zip_code HAVING COUNT( * ) >= 100	bike_1
SELECT weather.zip_code FROM weather GROUP BY weather.zip_code HAVING AVG( weather.mean_humidity )<70 INTERSECT SELECT trip.zip_code FROM trip GROUP BY trip.zip_code HAVING COUNT( * ) >= 100	bike_1
SELECT station.name FROM station WHERE station.city = 'Palo Alto' EXCEPT SELECT trip.end_station_name FROM trip GROUP BY trip.end_station_name HAVING COUNT( * ) > 100	bike_1
SELECT station.name FROM station WHERE station.city = 'Palo Alto' EXCEPT SELECT trip.end_station_name FROM trip WHERE station.city = 'Palo Alto'	bike_1
SELECT COUNT( * ) FROM station JOIN trip ON station.id = trip.start_station_id JOIN station ON station.id = trip.end_station_id WHERE station.city = 'Mountain View' AND station.city = 'Palo Alto'	bike_1
SELECT COUNT( * ) FROM station JOIN trip ON station.id = trip.start_station_id JOIN trip ON trip.id = trip.start_station_id JOIN station ON trip.end_station_id = station.id WHERE station.city = 'Mountain View' AND station.city = 'Palo Alto'	bike_1
SELECT AVG( station.lat ) , AVG( station.long ) FROM station JOIN trip ON station.id = trip.start_station_id	bike_1
SELECT AVG( station.lat ) , AVG( station.long ) FROM station JOIN trip ON station.id = trip.start_station_id	bike_1
SELECT COUNT( * ) FROM book	book_2
SELECT book.writer FROM book ORDER BY book.writer ASC	book_2
SELECT book.title FROM book ORDER BY book.issues ASC	book_2
SELECT book.title FROM book WHERE book.writer != 'Elaine Lee'	book_2
SELECT book.title , book.issues FROM book	book_2
SELECT publication.publication_date FROM publication ORDER BY publication.price DESC	book_2
SELECT DISTINCT publication.publisher FROM publication WHERE publication.price > 5000000	book_2
SELECT publication.publisher FROM publication ORDER BY publication.price DESC LIMIT 1	book_2
SELECT publication.publication_date FROM publication ORDER BY publication.price ASC LIMIT 3	book_2
SELECT book.title , publication.publication_date FROM book JOIN publication ON book.book_id = publication.book_id	book_2
SELECT book.writer FROM book JOIN publication ON book.book_id = publication.book_id WHERE publication.price > 4000000	book_2
SELECT book.title FROM book JOIN publication ON book.book_id = publication.book_id ORDER BY publication.price DESC	book_2
SELECT publication.publisher FROM publication GROUP BY publication.publisher HAVING COUNT( * ) > 1	book_2
SELECT publication.publisher , COUNT( * ) FROM publication GROUP BY publication.publisher	book_2
SELECT publication.publication_date FROM publication GROUP BY publication.publication_date ORDER BY COUNT( * ) DESC LIMIT 1	book_2
SELECT book.writer FROM book GROUP BY book.writer HAVING COUNT( * ) > 1	book_2
SELECT book.title FROM book WHERE book.book_id NOT IN (SELECT publication.book_id FROM publication)	book_2
SELECT publication.publisher FROM publication WHERE publication.price > 10000000 INTERSECT SELECT publication.publisher FROM publication WHERE publication.price<5000000	book_2
SELECT COUNT( DISTINCT publication.publication_date ) FROM publication	book_2
SELECT COUNT( DISTINCT publication.publication_date ) FROM publication	book_2
SELECT publication.price FROM publication WHERE publication.publisher = 'Person' OR publication.publisher = 'Wiley'	book_2
SELECT COUNT( * ) FROM actor	musical
SELECT COUNT( * ) FROM actor	musical
SELECT actor.name FROM actor ORDER BY actor.name ASC	musical
SELECT actor.name FROM actor ORDER BY actor.name ASC	musical
SELECT actor.character , actor.duration FROM actor	musical
SELECT actor.character , actor.duration FROM actor	musical
SELECT actor.name FROM actor WHERE actor.age != 20	musical
SELECT actor.name FROM actor WHERE actor.age != 20	musical
SELECT actor.character FROM actor ORDER BY actor.age DESC	musical
SELECT actor.character FROM actor ORDER BY actor.age DESC	musical
SELECT actor.duration FROM actor ORDER BY actor.age DESC LIMIT 1	musical
SELECT actor.duration FROM actor ORDER BY actor.age DESC LIMIT 1	musical
SELECT musical.name FROM musical WHERE musical.nominee = 'Bob Fosse'	musical
SELECT musical.name FROM musical WHERE musical.nominee = 'Bob Fosse'	musical
SELECT DISTINCT musical.nominee FROM musical WHERE musical.award != 'Tony Award'	musical
SELECT DISTINCT musical.nominee FROM musical WHERE musical.award != 'Tony Award'	musical
SELECT actor.name , musical.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id	musical
SELECT actor.name , musical.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id	musical
SELECT actor.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id WHERE musical.name = 'The Phantom of the Opera'	musical
SELECT actor.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id WHERE musical.name = 'The Phantom of the Opera'	musical
SELECT actor.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id ORDER BY musical.year DESC	musical
SELECT actor.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id ORDER BY musical.year DESC	musical
SELECT musical.name , COUNT( * ) FROM actor JOIN musical ON actor.musical_id = musical.musical_id GROUP BY actor.musical_id	musical
SELECT musical.name , COUNT( * ) FROM actor JOIN musical ON actor.musical_id = musical.musical_id GROUP BY actor.musical_id	musical
SELECT musical.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id GROUP BY actor.musical_id HAVING COUNT( * ) >= 3	musical
SELECT musical.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id GROUP BY actor.musical_id HAVING COUNT( * ) >= 3	musical
SELECT musical.nominee , COUNT( * ) FROM musical GROUP BY musical.nominee	musical
SELECT musical.nominee , COUNT( * ) FROM musical GROUP BY musical.nominee	musical
SELECT musical.nominee FROM musical GROUP BY musical.nominee ORDER BY COUNT( * ) DESC LIMIT 1	musical
SELECT musical.nominee FROM musical GROUP BY musical.nominee ORDER BY COUNT( * ) DESC LIMIT 1	musical
SELECT musical.result FROM musical GROUP BY musical.result ORDER BY COUNT( * ) DESC LIMIT 1	musical
SELECT musical.result FROM musical GROUP BY musical.result ORDER BY COUNT( * ) DESC LIMIT 1	musical
SELECT musical.nominee FROM musical GROUP BY musical.nominee HAVING COUNT( * ) > 2	musical
SELECT musical.nominee FROM musical GROUP BY musical.nominee HAVING COUNT( * ) > 2	musical
SELECT musical.name FROM musical WHERE musical.musical_id NOT IN (SELECT actor.musical_id FROM actor)	musical
SELECT musical.name FROM musical WHERE musical.musical_id NOT IN (SELECT actor.musical_id FROM actor)	musical
SELECT musical.nominee FROM musical WHERE musical.award = 'Tony Award' INTERSECT SELECT musical.nominee FROM musical WHERE musical.award = 'Drama Desk Award'	musical
SELECT musical.nominee FROM musical WHERE musical.award = 'Tony Award' INTERSECT SELECT musical.nominee FROM musical WHERE musical.award = 'Drama Desk Award'	musical
SELECT musical.nominee FROM musical WHERE musical.award = 'Bob Fosse' OR musical.award = 'Cleavant Derricks'	musical
SELECT musical.nominee FROM musical WHERE musical.award NOT IN (SELECT AVG( musical.award ) FROM musical)	musical
SELECT user_profiles.email FROM user_profiles WHERE user_profiles.name = 'Mary'	twitter_1
SELECT user_profiles.partitionid FROM user_profiles WHERE user_profiles.name = 'Iron Man'	twitter_1
SELECT COUNT( * ) FROM user_profiles	twitter_1
SELECT COUNT( * ) FROM follows	twitter_1
SELECT COUNT( * ) FROM follows	twitter_1
SELECT COUNT( * ) FROM tweets	twitter_1
SELECT COUNT( DISTINCT tweets.uid ) FROM tweets	twitter_1
SELECT user_profiles.name , user_profiles.email FROM user_profiles WHERE user_profiles.name LIKE '%Swift%'	twitter_1
SELECT user_profiles.name FROM user_profiles WHERE user_profiles.email LIKE '%superstar%' OR user_profiles.email LIKE '%edu%'	twitter_1
SELECT tweets.text FROM tweets WHERE tweets.text LIKE '%intern%'	twitter_1
SELECT user_profiles.name , user_profiles.email FROM user_profiles WHERE user_profiles.followers > 1000	twitter_1
follows , user_profiles	twitter_1
SELECT user_profiles.name , user_profiles.email FROM user_profiles JOIN follows ON user_profiles.uid = follows.f1 GROUP BY follows.f1 HAVING COUNT( * ) > 1	twitter_1
SELECT user_profiles.name FROM user_profiles JOIN tweets ON user_profiles.uid = tweets.uid GROUP BY tweets.uid HAVING COUNT( * ) > 1	twitter_1
SELECT follows.f1 FROM user_profiles JOIN follows ON user_profiles.uid = follows.f2 WHERE user_profiles.name = 'Mary' INTERSECT SELECT follows.f1 FROM user_profiles JOIN follows ON user_profiles.uid = follows.f2 WHERE user_profiles.name = 'Susan'	twitter_1
SELECT follows.f1 FROM user_profiles JOIN follows ON user_profiles.uid = follows.f2 WHERE user_profiles.name = 'Mary' OR user_profiles.name = 'Susan'	twitter_1
SELECT user_profiles.name FROM user_profiles ORDER BY user_profiles.followers DESC LIMIT 1	twitter_1
SELECT user_profiles.name , user_profiles.email FROM user_profiles ORDER BY user_profiles.followers ASC LIMIT 1	twitter_1
SELECT user_profiles.name , user_profiles.followers FROM user_profiles ORDER BY user_profiles.followers DESC	twitter_1
SELECT user_profiles.name FROM user_profiles ORDER BY user_profiles.followers DESC LIMIT 5	twitter_1
SELECT tweets.text FROM tweets ORDER BY tweets.createdate ASC	twitter_1
SELECT user_profiles.name , COUNT( * ) FROM user_profiles JOIN tweets ON user_profiles.uid = tweets.uid GROUP BY tweets.uid	twitter_1
SELECT user_profiles.name , user_profiles.partitionid FROM user_profiles JOIN tweets ON user_profiles.uid = tweets.uid GROUP BY tweets.uid HAVING COUNT( * )<2	twitter_1
SELECT user_profiles.name , COUNT( * ) FROM user_profiles JOIN tweets ON user_profiles.uid = tweets.uid GROUP BY tweets.uid HAVING COUNT( * ) > 1	twitter_1
SELECT AVG( user_profiles.followers ) FROM user_profiles WHERE user_profiles.uid NOT IN (SELECT tweets.uid FROM tweets)	twitter_1
SELECT AVG( user_profiles.followers ) FROM user_profiles WHERE user_profiles.uid IN (SELECT tweets.uid FROM tweets)	twitter_1
SELECT MAX( user_profiles.followers ) , SUM( user_profiles.followers ) FROM user_profiles	twitter_1
SELECT DISTINCT catalog_contents.catalog_entry_name FROM catalog_contents	product_catalog
SELECT DISTINCT catalog_contents.catalog_entry_name FROM catalog_contents	product_catalog
SELECT attribute_definitions.attribute_data_type FROM attribute_definitions GROUP BY attribute_definitions.attribute_data_type HAVING COUNT( * ) > 3	product_catalog
SELECT attribute_definitions.attribute_data_type FROM attribute_definitions GROUP BY attribute_definitions.attribute_data_type HAVING COUNT( * ) > 3	product_catalog
SELECT attribute_definitions.attribute_data_type FROM attribute_definitions WHERE attribute_definitions.attribute_name = 'Green'	product_catalog
SELECT attribute_definitions.attribute_data_type FROM attribute_definitions WHERE attribute_definitions.attribute_name = 'Green'	product_catalog
SELECT catalog_structure.catalog_level_name , catalog_structure.catalog_level_number FROM catalog_structure WHERE catalog_structure.catalog_level_number BETWEEN 5 and 10	product_catalog
SELECT catalog_structure.catalog_level_name , catalog_structure.catalog_level_number FROM catalog_structure WHERE catalog_structure.catalog_level_number BETWEEN 5 and 10	product_catalog
SELECT DISTINCT catalogs.catalog_publisher FROM catalogs WHERE catalogs.catalog_publisher LIKE '%Murray%'	product_catalog
SELECT DISTINCT catalogs.catalog_publisher FROM catalogs WHERE catalogs.catalog_publisher LIKE '%Murray%'	product_catalog
SELECT catalogs.catalog_publisher FROM catalogs GROUP BY catalogs.catalog_publisher ORDER BY COUNT( * ) DESC LIMIT 1	product_catalog
SELECT catalogs.catalog_publisher FROM catalogs GROUP BY catalogs.catalog_publisher ORDER BY COUNT( * ) DESC LIMIT 1	product_catalog
SELECT catalogs.catalog_name , catalogs.date_of_publication FROM catalogs JOIN catalog_structure ON catalogs.catalog_id = catalog_structure.catalog_id WHERE catalog_structure.catalog_level_number > 5	product_catalog
SELECT catalogs.catalog_name , catalogs.date_of_publication FROM catalogs JOIN catalog_structure ON catalogs.catalog_id = catalog_structure.catalog_id WHERE catalog_structure.catalog_level_number > 5	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents JOIN catalog_contents_additional_attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.attribute_value = (SELECT catalog_contents_additional_attributes.attribute_value FROM catalog_contents_additional_attributes GROUP BY catalog_contents_additional_attributes.attribute_value ORDER BY COUNT( * ) DESC LIMIT 1)	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents JOIN catalog_contents_additional_attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.attribute_value = (SELECT catalog_contents_additional_attributes.attribute_value FROM catalog_contents_additional_attributes GROUP BY catalog_contents_additional_attributes.attribute_value ORDER BY COUNT( * ) DESC LIMIT 1)	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents ORDER BY catalog_contents.price_in_dollars DESC LIMIT 1	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents ORDER BY catalog_contents.price_in_dollars DESC LIMIT 1	product_catalog
SELECT catalog_structure.catalog_level_name FROM catalog_contents JOIN catalog_structure ON catalog_contents.catalog_level_number = catalog_structure.catalog_level_number ORDER BY catalog_contents.price_in_dollars ASC LIMIT 1	product_catalog
SELECT catalog_structure.catalog_level_name FROM catalog_contents JOIN catalog_structure ON catalog_contents.catalog_level_number = catalog_structure.catalog_level_number ORDER BY catalog_contents.price_in_dollars ASC LIMIT 1	product_catalog
SELECT AVG( catalog_contents.price_in_euros ) , MIN( catalog_contents.price_in_euros ) FROM catalog_contents	product_catalog
SELECT AVG( catalog_contents.price_in_euros ) , MIN( catalog_contents.price_in_euros ) FROM catalog_contents	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents ORDER BY catalog_contents.height DESC LIMIT 1	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents ORDER BY catalog_contents.height DESC LIMIT 1	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents ORDER BY catalog_contents.capacity ASC LIMIT 1	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents ORDER BY catalog_contents.capacity ASC LIMIT 1	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.product_stock_number LIKE '%2%'	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.product_stock_number LIKE '%2%'	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents JOIN catalog_contents_additional_attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.catalog_level_number = '8'	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents JOIN catalog_contents_additional_attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.catalog_level_number = '8'	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.length<3 OR catalog_contents.width > 5	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.length<3 OR catalog_contents.width > 5	product_catalog
SELECT attribute_definitions.attribute_name , attribute_definitions.attribute_id FROM attribute_definitions JOIN catalog_contents_additional_attributes ON attribute_definitions.attribute_id = catalog_contents_additional_attributes.attribute_id WHERE catalog_contents_additional_attributes.attribute_value = 0	product_catalog
SELECT attribute_definitions.attribute_name , attribute_definitions.attribute_id FROM attribute_definitions JOIN catalog_contents_additional_attributes ON attribute_definitions.attribute_id = catalog_contents_additional_attributes.attribute_id WHERE catalog_contents_additional_attributes.attribute_value = 0	product_catalog
SELECT catalog_contents.catalog_entry_name , catalog_contents.capacity FROM catalog_contents WHERE catalog_contents.price_in_dollars > 700	product_catalog
SELECT catalog_contents.catalog_entry_name , catalog_contents.capacity FROM catalog_contents WHERE catalog_contents.price_in_dollars > 700	product_catalog
SELECT catalogs.date_of_latest_revision FROM catalogs GROUP BY catalogs.date_of_latest_revision HAVING COUNT( * ) > 1	product_catalog
SELECT catalogs.date_of_latest_revision FROM catalogs GROUP BY catalogs.date_of_latest_revision HAVING COUNT( * ) > 1	product_catalog
SELECT COUNT( * ) FROM catalog_contents	product_catalog
SELECT COUNT( * ) FROM catalog_contents	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.next_entry_id > 8	product_catalog
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.next_entry_id > 8	product_catalog
SELECT COUNT( * ) FROM aircraft	flight_1
SELECT COUNT( * ) FROM aircraft	flight_1
SELECT aircraft.name , aircraft.distance FROM aircraft	flight_1
SELECT aircraft.name , aircraft.distance FROM aircraft	flight_1
SELECT aircraft.aid FROM aircraft WHERE aircraft.distance > 1000	flight_1
SELECT aircraft.aid FROM aircraft WHERE aircraft.distance > 1000	flight_1
SELECT COUNT( * ) FROM aircraft WHERE aircraft.distance BETWEEN 1000 and 5000	flight_1
SELECT COUNT( * ) FROM aircraft WHERE aircraft.distance BETWEEN 1000 and 5000	flight_1
SELECT aircraft.name , aircraft.distance FROM aircraft WHERE aircraft.aid = 12	flight_1
SELECT aircraft.name , aircraft.distance FROM aircraft WHERE aircraft.aid = 12	flight_1
SELECT MIN( aircraft.distance ) , AVG( aircraft.distance ) , MAX( aircraft.distance ) FROM aircraft	flight_1
SELECT MIN( aircraft.distance ) , AVG( aircraft.distance ) , MAX( aircraft.distance ) FROM aircraft	flight_1
SELECT aircraft.aid , aircraft.name FROM aircraft ORDER BY aircraft.distance DESC LIMIT 1	flight_1
SELECT aircraft.aid , aircraft.name FROM aircraft ORDER BY aircraft.distance DESC LIMIT 1	flight_1
SELECT aircraft.name FROM aircraft ORDER BY aircraft.distance ASC LIMIT 3	flight_1
SELECT aircraft.name FROM aircraft ORDER BY aircraft.distance ASC LIMIT 3	flight_1
SELECT aircraft.name FROM aircraft WHERE aircraft.distance > (SELECT AVG( aircraft.distance ) FROM aircraft)	flight_1
SELECT aircraft.name FROM aircraft WHERE aircraft.distance > (SELECT AVG( aircraft.distance ) FROM aircraft)	flight_1
SELECT COUNT( * ) FROM employee	flight_1
SELECT COUNT( * ) FROM employee	flight_1
SELECT employee.name , employee.salary FROM employee ORDER BY employee.salary ASC	flight_1
SELECT employee.name , employee.salary FROM employee ORDER BY employee.salary ASC	flight_1
SELECT employee.eid FROM employee WHERE employee.salary > 100000	flight_1
SELECT employee.eid FROM employee WHERE employee.salary > 100000	flight_1
SELECT COUNT( * ) FROM employee WHERE employee.salary BETWEEN 100000 and 200000	flight_1
SELECT COUNT( * ) FROM employee WHERE employee.salary BETWEEN 100000 and 200000	flight_1
SELECT employee.name , employee.salary FROM employee WHERE employee.eid = 242518965	flight_1
SELECT employee.name , employee.salary FROM employee WHERE employee.eid = 242518965	flight_1
SELECT AVG( employee.salary ) , MAX( employee.salary ) FROM employee	flight_1
SELECT AVG( employee.salary ) , MAX( employee.salary ) FROM employee	flight_1
SELECT employee.eid , employee.name FROM employee ORDER BY employee.salary DESC LIMIT 1	flight_1
SELECT employee.eid , employee.name FROM employee ORDER BY employee.salary DESC LIMIT 1	flight_1
SELECT employee.name FROM employee ORDER BY employee.salary ASC LIMIT 3	flight_1
SELECT employee.name FROM employee ORDER BY employee.salary ASC LIMIT 3	flight_1
SELECT employee.name FROM employee WHERE employee.salary > (SELECT AVG( employee.salary ) FROM employee)	flight_1
SELECT employee.name FROM employee WHERE employee.salary > (SELECT AVG( employee.salary ) FROM employee)	flight_1
SELECT employee.eid , employee.salary FROM employee WHERE employee.name = 'Mark Young'	flight_1
SELECT employee.eid , employee.salary FROM employee WHERE employee.name = 'Mark Young'	flight_1
SELECT COUNT( * ) FROM flight	flight_1
SELECT COUNT( * ) FROM flight	flight_1
SELECT flight.flno , flight.origin , flight.destination FROM flight ORDER BY flight.origin ASC	flight_1
SELECT flight.flno , flight.origin , flight.destination FROM flight ORDER BY flight.origin ASC	flight_1
SELECT flight.flno FROM flight WHERE flight.origin = 'Los Angeles'	flight_1
SELECT flight.flno FROM flight WHERE flight.origin = 'Los Angeles'	flight_1
SELECT flight.origin FROM flight WHERE flight.destination = 'Honolulu'	flight_1
SELECT flight.origin FROM flight WHERE flight.destination = 'Honolulu'	flight_1
SELECT flight.departure_date , flight.arrival_date FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'	flight_1
SELECT flight.departure_date , flight.arrival_date FROM flight WHERE flight.origin = 't' AND flight.destination = 'Honolulu'	flight_1
SELECT flight.flno FROM flight WHERE flight.distance > 2000	flight_1
SELECT flight.flno FROM flight WHERE flight.distance > 2000	flight_1
SELECT AVG( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'	flight_1
SELECT AVG( flight.price ) FROM flight WHERE flight.origin = 't' AND flight.destination = 'Honolulu'	flight_1
SELECT flight.origin , flight.destination FROM flight WHERE flight.price > 300	flight_1
SELECT flight.origin , flight.destination FROM flight WHERE flight.price > 300	flight_1
SELECT flight.flno , flight.distance FROM flight ORDER BY flight.price DESC LIMIT 1	flight_1
SELECT flight.flno , flight.distance FROM flight ORDER BY flight.price DESC LIMIT 1	flight_1
SELECT flight.flno FROM flight ORDER BY flight.distance ASC LIMIT 3	flight_1
SELECT flight.flno FROM flight ORDER BY flight.distance ASC LIMIT 3	flight_1
SELECT AVG( flight.distance ) , AVG( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles'	flight_1
SELECT AVG( flight.distance ) , AVG( flight.price ) FROM flight WHERE flight.origin = 'yes'	flight_1
SELECT flight.origin , COUNT( * ) FROM flight GROUP BY flight.origin	flight_1
SELECT flight.origin , COUNT( * ) FROM flight GROUP BY flight.origin	flight_1
SELECT flight.destination , COUNT( * ) FROM flight GROUP BY flight.destination	flight_1
SELECT flight.destination , COUNT( * ) FROM flight GROUP BY flight.destination	flight_1
SELECT flight.origin FROM flight GROUP BY flight.origin ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT flight.origin FROM flight GROUP BY flight.origin ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT flight.destination FROM flight GROUP BY flight.destination ORDER BY COUNT( * ) ASC LIMIT 1	flight_1
SELECT flight.destination FROM flight GROUP BY flight.destination ORDER BY COUNT( * ) ASC LIMIT 1	flight_1
SELECT aircraft.name FROM flight JOIN aircraft ON flight.aid = aircraft.aid WHERE flight.flno = 99	flight_1
SELECT aircraft.name FROM flight JOIN aircraft ON flight.aid = aircraft.aid WHERE flight.flno = 99	flight_1
SELECT flight.flno FROM flight JOIN aircraft ON flight.aid = aircraft.aid WHERE aircraft.name = 'Airbus A340-300'	flight_1
SELECT flight.flno FROM flight JOIN aircraft ON flight.aid = aircraft.aid WHERE aircraft.name = 'Airbus A340-300'	flight_1
SELECT aircraft.name , COUNT( * ) FROM flight JOIN aircraft ON flight.aid = aircraft.aid GROUP BY flight.aid	flight_1
SELECT aircraft.name , COUNT( * ) FROM flight JOIN aircraft ON flight.aid = aircraft.aid GROUP BY flight.aid	flight_1
SELECT aircraft.name FROM flight JOIN aircraft ON flight.aid = aircraft.aid GROUP BY flight.aid HAVING COUNT( * ) >= 2	flight_1
SELECT aircraft.name FROM flight JOIN aircraft ON flight.aid = aircraft.aid GROUP BY flight.aid HAVING COUNT( * ) >= 2	flight_1
SELECT COUNT( DISTINCT certificate.eid ) FROM certificate	flight_1
SELECT COUNT( DISTINCT certificate.eid ) FROM certificate	flight_1
SELECT employee.eid FROM employee EXCEPT SELECT certificate.eid FROM certificate	flight_1
SELECT employee.eid FROM employee EXCEPT SELECT certificate.eid FROM certificate	flight_1
SELECT aircraft.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE employee.name = 'John Williams'	flight_1
SELECT aircraft.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE employee.name = 'John Williams'	flight_1
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Boeing 737-800'	flight_1
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Boeing 737-800'	flight_1
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Boeing 737-800' INTERSECT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Airbus A340-300'	flight_1
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Boeing 737-800' INTERSECT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Airbus A340-300'	flight_1
SELECT employee.name FROM employee EXCEPT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Boeing 737-800'	flight_1
SELECT employee.name FROM employee EXCEPT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.name = 'Boeing 737-800s'	flight_1
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = certificate.aid GROUP BY certificate.aid ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = certificate.aid GROUP BY certificate.aid ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT aircraft.name , aircraft.distance FROM aircraft JOIN certificate ON aircraft.aid = certificate.aid WHERE aircraft.distance > 5000 GROUP BY certificate.aid HAVING COUNT( * ) >= 5	flight_1
SELECT aircraft.name , aircraft.distance FROM certificate JOIN aircraft ON certificate.aid = aircraft.aid GROUP BY certificate.aid HAVING COUNT( * ) >= 5	flight_1
SELECT employee.name , employee.salary FROM employee JOIN certificate ON employee.eid = certificate.eid GROUP BY employee.eid ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT employee.name , employee.salary FROM employee JOIN certificate ON employee.eid = certificate.eid GROUP BY employee.eid ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.distance > 5000 GROUP BY employee.eid ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON aircraft.aid = certificate.aid WHERE aircraft.distance > 5000 GROUP BY employee.eid ORDER BY COUNT( * ) DESC LIMIT 1	flight_1
SELECT COUNT( DISTINCT allergy_type.allergy ) FROM allergy_type	allergy_1
SELECT COUNT( DISTINCT allergy_type.allergy ) FROM allergy_type	allergy_1
SELECT COUNT( DISTINCT allergy_type.allergytype ) FROM allergy_type	allergy_1
SELECT COUNT( DISTINCT allergy_type.allergytype ) FROM allergy_type	allergy_1
SELECT DISTINCT allergy_type.allergytype FROM allergy_type	allergy_1
SELECT DISTINCT allergy_type.allergytype FROM allergy_type	allergy_1
SELECT allergy_type.allergy , allergy_type.allergytype FROM allergy_type	allergy_1
SELECT allergy_type.allergy , allergy_type.allergytype FROM allergy_type	allergy_1
SELECT DISTINCT allergy_type.allergy FROM allergy_type WHERE allergy_type.allergytype = 'food'	allergy_1
SELECT DISTINCT allergy_type.allergy FROM allergy_type WHERE allergy_type.allergytype = 'food'	allergy_1
SELECT allergy_type.allergytype FROM allergy_type WHERE allergy_type.allergy = 'Cat'	allergy_1
SELECT allergy_type.allergytype FROM allergy_type WHERE allergy_type.allergy = 'cat'	allergy_1
SELECT COUNT( * ) FROM allergy_type WHERE allergy_type.allergytype = 'animal'	allergy_1
SELECT COUNT( * ) FROM allergy_type WHERE allergy_type.allergytype = 'animal'	allergy_1
SELECT allergy_type.allergytype , COUNT( * ) FROM allergy_type GROUP BY allergy_type.allergytype	allergy_1
SELECT allergy_type.allergytype , COUNT( * ) FROM allergy_type GROUP BY allergy_type.allergytype	allergy_1
SELECT allergy_type.allergytype FROM allergy_type GROUP BY allergy_type.allergytype ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT allergy_type.allergytype FROM allergy_type GROUP BY allergy_type.allergytype ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT allergy_type.allergytype FROM allergy_type GROUP BY allergy_type.allergytype ORDER BY COUNT( * ) ASC LIMIT 1	allergy_1
SELECT allergy_type.allergytype FROM allergy_type GROUP BY allergy_type.allergytype ORDER BY COUNT( * ) ASC LIMIT 1	allergy_1
SELECT COUNT( * ) FROM student	allergy_1
SELECT COUNT( * ) FROM student	allergy_1
SELECT student.fname , student.lname FROM student	allergy_1
SELECT student.fname , student.lname FROM student	allergy_1
SELECT COUNT( DISTINCT student.advisor ) FROM student	allergy_1
SELECT COUNT( DISTINCT student.advisor ) FROM student	allergy_1
SELECT DISTINCT student.major FROM student	allergy_1
SELECT DISTINCT student.major FROM student	allergy_1
SELECT DISTINCT student.city_code FROM student	allergy_1
SELECT DISTINCT student.city_code FROM student	allergy_1
SELECT student.fname , student.lname , student.age FROM student WHERE student.sex = 'F'	allergy_1
SELECT student.fname , student.lname , student.age FROM student WHERE student.sex = 'F'	allergy_1
SELECT student.stuid FROM student WHERE student.sex = 'm'	allergy_1
SELECT student.stuid FROM student WHERE student.sex = 'm'	allergy_1
SELECT COUNT( * ) FROM student WHERE student.age = 18	allergy_1
SELECT COUNT( * ) FROM student WHERE student.age = 18	allergy_1
SELECT student.stuid FROM student WHERE student.age > 20	allergy_1
SELECT student.stuid FROM student WHERE student.age > 20	allergy_1
SELECT student.city_code FROM student WHERE student.lname = 'Kim'	allergy_1
SELECT student.city_code FROM student WHERE student.lname = 'Kim'	allergy_1
SELECT student.advisor FROM student WHERE student.stuid = 1004	allergy_1
SELECT student.advisor FROM student WHERE student.stuid = 1004	allergy_1
SELECT COUNT( * ) FROM student WHERE student.city_code = 'HKG' OR student.city_code = 'CHI'	allergy_1
SELECT COUNT( * ) FROM student WHERE student.city_code = 'HKG' OR student.city_code = 'CHI'	allergy_1
SELECT MIN( student.age ) , AVG( student.age ) , MAX( student.age ) FROM student	allergy_1
SELECT MIN( student.age ) , AVG( student.age ) , MAX( student.age ) FROM student	allergy_1
SELECT student.lname FROM student WHERE student.age = (SELECT MIN( student.age ) FROM student)	allergy_1
SELECT student.lname FROM student WHERE student.age = (SELECT MIN( student.age ) FROM student)	allergy_1
SELECT student.stuid FROM student WHERE student.age = (SELECT MAX( student.age ) FROM student)	allergy_1
SELECT student.stuid FROM student WHERE student.age = (SELECT MAX( student.age ) FROM student)	allergy_1
SELECT student.major , COUNT( * ) FROM student GROUP BY student.major	allergy_1
SELECT student.major , COUNT( * ) FROM student GROUP BY student.major	allergy_1
SELECT student.major FROM student GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT student.major FROM student GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT student.age , COUNT( * ) FROM student GROUP BY student.age	allergy_1
SELECT student.age , COUNT( * ) FROM student GROUP BY student.age	allergy_1
SELECT AVG( student.age ) , student.sex FROM student GROUP BY student.sex	allergy_1
SELECT AVG( student.age ) , student.sex FROM student GROUP BY student.sex	allergy_1
SELECT student.city_code , COUNT( * ) FROM student GROUP BY student.city_code	allergy_1
SELECT student.city_code , COUNT( * ) FROM student GROUP BY student.city_code	allergy_1
SELECT student.advisor , COUNT( * ) FROM student GROUP BY student.advisor	allergy_1
SELECT student.advisor , COUNT( * ) FROM student GROUP BY student.advisor	allergy_1
SELECT student.advisor FROM student GROUP BY student.advisor ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT student.advisor FROM student GROUP BY student.advisor ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT COUNT( * ) FROM has_allergy WHERE has_allergy.allergy = 'cat'	allergy_1
SELECT COUNT( * ) FROM has_allergy WHERE has_allergy.allergy = 'cat'	allergy_1
SELECT has_allergy.stuid FROM has_allergy GROUP BY has_allergy.stuid HAVING COUNT( * ) >= 2	allergy_1
SELECT has_allergy.stuid FROM has_allergy GROUP BY has_allergy.stuid HAVING COUNT( * ) >= 2	allergy_1
SELECT student.stuid FROM student EXCEPT SELECT has_allergy.stuid FROM has_allergy	allergy_1
SELECT student.stuid FROM student EXCEPT SELECT has_allergy.stuid FROM has_allergy	allergy_1
SELECT COUNT( * ) FROM has_allergy JOIN student ON has_allergy.stuid = student.stuid WHERE student.sex = 'f' AND has_allergy.allergy = 'milk' OR has_allergy.allergy = 'egg'	allergy_1
SELECT COUNT( * ) FROM has_allergy JOIN student ON has_allergy.stuid = student.stuid WHERE student.sex = 'f' AND has_allergy.allergy = 'milk' OR has_allergy.allergy = 'eggs'	allergy_1
SELECT COUNT( * ) FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food'	allergy_1
SELECT COUNT( * ) FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food'	allergy_1
SELECT has_allergy.allergy FROM has_allergy GROUP BY has_allergy.allergy ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT has_allergy.allergy FROM has_allergy GROUP BY has_allergy.allergy ORDER BY COUNT( * ) DESC LIMIT 1	allergy_1
SELECT has_allergy.allergy , COUNT( * ) FROM has_allergy GROUP BY has_allergy.allergy	allergy_1
SELECT has_allergy.allergy , COUNT( * ) FROM has_allergy GROUP BY has_allergy.allergy	allergy_1
SELECT allergy_type.allergytype , COUNT( * ) FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy GROUP BY allergy_type.allergytype	allergy_1
SELECT allergy_type.allergytype , COUNT( * ) FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy GROUP BY allergy_type.allergytype	allergy_1
SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = (SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = 'cat')	allergy_1
SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = (SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = 'cat')	allergy_1
SELECT allergy_type.allergy , allergy_type.allergytype FROM allergy_type JOIN has_allergy ON allergy_type.allergy = has_allergy.allergy JOIN student ON student.stuid = has_allergy.stuid WHERE student.fname = 'Lisa' ORDER BY allergy_type.allergy ASC	allergy_1
SELECT allergy_type.allergy , allergy_type.allergytype FROM allergy_type JOIN has_allergy ON allergy_type.allergy = has_allergy.allergy JOIN student ON student.stuid = has_allergy.stuid WHERE student.fname = 'Lisa' ORDER BY allergy_type.allergy ASC	allergy_1
SELECT student.fname , student.sex FROM student WHERE student.stuid NOT IN (SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = 'cat')	allergy_1
SELECT student.fname , student.sex FROM student WHERE student.stuid NOT IN (SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = 'cats')	allergy_1
SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food' INTERSECT SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'animal' UNION SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food' INTERSECT SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'animal'	allergy_1
SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food' INTERSECT SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'animal' UNION SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food' INTERSECT SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'animal'	allergy_1
SELECT student.fname , student.lname FROM student WHERE student.stuid NOT IN (SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food')	allergy_1
SELECT student.fname , student.lname FROM student WHERE student.stuid NOT IN (SELECT has_allergy.stuid FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype = 'food')	allergy_1
SELECT COUNT( * ) FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy JOIN student ON has_allergy.stuid = student.stuid WHERE student.sex = 'm' AND allergy_type.allergytype = 'food'	allergy_1
SELECT COUNT( * ) FROM has_allergy JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy JOIN student ON has_allergy.stuid = student.stuid WHERE student.sex = 'm' AND allergy_type.allergytype = 'food'	allergy_1
SELECT DISTINCT student.fname , student.city_code FROM student JOIN has_allergy ON student.stuid = has_allergy.stuid WHERE has_allergy.allergy = 'milk' OR has_allergy.allergy = 'cat'	allergy_1
SELECT DISTINCT student.fname , student.city_code FROM student JOIN has_allergy ON student.stuid = has_allergy.stuid WHERE has_allergy.allergy = 'milk' OR has_allergy.allergy = 'cat'	allergy_1
has_allergy , allergy_type	allergy_1
has_allergy , allergy_type	allergy_1
SELECT student.fname , student.major FROM student WHERE student.stuid NOT IN (SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = 'soy')	allergy_1
SELECT student.fname , student.major FROM student WHERE student.stuid NOT IN (SELECT has_allergy.stuid FROM has_allergy WHERE has_allergy.allergy = 'soy')	allergy_1
SELECT invoices.billing_country , COUNT( * ) FROM invoices GROUP BY invoices.billing_country ORDER BY COUNT( * ) DESC LIMIT 5	store_1
SELECT invoices.billing_country , COUNT( * ) FROM invoices GROUP BY invoices.billing_country ORDER BY COUNT( * ) DESC LIMIT 5	store_1
SELECT invoices.billing_country , SUM( invoices.total ) FROM invoices GROUP BY invoices.billing_country ORDER BY SUM( invoices.total ) DESC LIMIT 8	store_1
SELECT invoices.billing_country , SUM( invoices.total ) FROM invoices GROUP BY invoices.billing_country ORDER BY SUM( invoices.total ) DESC LIMIT 8	store_1
SELECT invoices.billing_country , AVG( invoices.total ) FROM invoices GROUP BY invoices.billing_country ORDER BY AVG( invoices.total ) DESC LIMIT 10	store_1
SELECT invoices.billing_country , AVG( invoices.total ) FROM invoices GROUP BY invoices.billing_country ORDER BY AVG( invoices.total ) DESC	store_1
SELECT customers.first_name , customers.last_name FROM invoices JOIN customers ON invoices.customer_id = customers.id ORDER BY invoices.invoice_date DESC LIMIT 5	store_1
SELECT customers.first_name , customers.last_name FROM invoices JOIN customers ON invoices.customer_id = customers.id ORDER BY invoices.invoice_date DESC LIMIT 5	store_1
SELECT customers.first_name , customers.last_name , COUNT( * ) FROM invoices JOIN customers ON invoices.customer_id = customers.id GROUP BY customers.id ORDER BY COUNT( * ) DESC LIMIT 10	store_1
SELECT customers.first_name , customers.last_name , COUNT( * ) FROM invoices JOIN customers ON invoices.customer_id = customers.id GROUP BY customers.id ORDER BY COUNT( * ) DESC LIMIT 10	store_1
SELECT customers.first_name , customers.last_name , SUM( invoices.total ) FROM invoices JOIN customers ON invoices.customer_id = customers.id GROUP BY customers.id ORDER BY SUM( invoices.total ) DESC LIMIT 10	store_1
SELECT customers.first_name , customers.last_name , SUM( invoices.total ) FROM invoices JOIN customers ON invoices.customer_id = customers.id GROUP BY customers.id ORDER BY SUM( invoices.total ) DESC LIMIT 10	store_1
SELECT genres.name , COUNT( * ) FROM tracks JOIN genres ON tracks.genre_id = genres.id GROUP BY genres.id ORDER BY COUNT( * ) DESC LIMIT 5	store_1
SELECT genres.name , COUNT( * ) FROM tracks JOIN genres ON tracks.genre_id = genres.id GROUP BY genres.id ORDER BY COUNT( * ) DESC LIMIT 5	store_1
SELECT albums.title FROM albums	store_1
SELECT albums.title FROM albums	store_1
SELECT albums.title FROM albums ORDER BY albums.title ASC	store_1
SELECT albums.title FROM albums ORDER BY albums.title ASC	store_1
SELECT albums.title FROM albums WHERE albums.title LIKE '%A%' ORDER BY albums.title ASC	store_1
SELECT albums.title FROM albums WHERE albums.title LIKE '%A%' ORDER BY albums.title ASC	store_1
SELECT customers.first_name , customers.last_name FROM invoices JOIN customers ON invoices.customer_id = customers.id ORDER BY invoices.total ASC LIMIT 10	store_1
SELECT customers.first_name , customers.last_name FROM invoices JOIN customers ON invoices.customer_id = customers.id ORDER BY invoices.total ASC LIMIT 10	store_1
SELECT SUM( invoices.total ) FROM invoices WHERE invoices.billing_city = 'Chicago' AND invoices.billing_state = 'IL'	store_1
SELECT SUM( invoices.total ) FROM invoices WHERE invoices.billing_city = 'Chicago' AND invoices.billing_state = 'Chicago,'	store_1
SELECT COUNT( * ) FROM invoices WHERE invoices.billing_city = 'Chicago,' AND invoices.billing_state = 'IL'	store_1
SELECT COUNT( * ) FROM invoices WHERE invoices.billing_city = 'Chicago' AND invoices.billing_state = 'IL'	store_1
SELECT invoices.billing_state , COUNT( * ) FROM invoices WHERE invoices.billing_country = 'yes' GROUP BY invoices.billing_state	store_1
SELECT invoices.billing_state , COUNT( * ) FROM invoices GROUP BY invoices.billing_state	store_1
SELECT invoices.billing_state FROM invoices WHERE invoices.billing_country = 'invoices.billing_state' GROUP BY invoices.billing_state ORDER BY COUNT( * ) DESC LIMIT 1	store_1
SELECT invoices.billing_state , COUNT( * ) FROM invoices GROUP BY invoices.billing_state ORDER BY COUNT( * ) DESC LIMIT 1	store_1
SELECT invoices.billing_state , COUNT( * ) , SUM( invoices.total ) FROM invoices GROUP BY invoices.billing_state	store_1
SELECT invoices.billing_state , COUNT( * ) , SUM( invoices.total ) FROM invoices WHERE invoices.billing_state = 'CA'	store_1
SELECT albums.title FROM albums JOIN artists ON albums.artist_id = artists.id WHERE artists.name = 'Aerosmith'	store_1
SELECT albums.title FROM albums JOIN artists ON albums.artist_id = artists.id WHERE artists.name = 'Aerosmith'	store_1
SELECT COUNT( * ) FROM albums JOIN artists ON albums.artist_id = artists.id WHERE artists.name = 'Billy Cobham'	store_1
SELECT COUNT( * ) FROM albums JOIN artists ON albums.artist_id = artists.id WHERE artists.name = 'Billy Cobam'	store_1
SELECT customers.company FROM customers WHERE customers.first_name = 'Eduardo' AND customers.last_name = 'Martins'	store_1
SELECT customers.company FROM customers WHERE customers.first_name = 'Eduardo' AND customers.last_name = 'Martins'	store_1
SELECT customers.email , customers.phone FROM customers WHERE customers.first_name = 'Astrid' AND customers.last_name = 'Gruber'	store_1
SELECT customers.email , customers.phone FROM customers WHERE customers.first_name = 'Astrid' AND customers.last_name = 'Gruber'	store_1
SELECT COUNT( * ) FROM customers WHERE customers.city = 'Prague'	store_1
SELECT COUNT( * ) FROM customers WHERE customers.city = 'Prague'	store_1
SELECT COUNT( * ) FROM customers WHERE customers.state = 'CA'	store_1
SELECT COUNT( * ) FROM customers WHERE customers.state = 'California'	store_1
SELECT customers.country FROM customers WHERE customers.first_name = 'Roberto' AND customers.last_name = 'Almeida'	store_1
SELECT customers.country FROM customers WHERE customers.first_name = 'Roberto' AND customers.last_name = 'Almeida'	store_1
SELECT albums.title FROM artists JOIN albums ON artists.id = albums.artist_id WHERE artists.name LIKE '%Led%'	store_1
SELECT albums.title FROM artists JOIN albums ON artists.id = albums.artist_id WHERE artists.name LIKE '%Led%'	store_1
SELECT COUNT( * ) FROM customers JOIN employees ON customers.support_rep_id = employees.id WHERE employees.first_name = 'Steve' AND employees.last_name = 'Johnson'	store_1
SELECT COUNT( * ) FROM customers JOIN employees ON customers.support_rep_id = employees.id WHERE employees.first_name = 'Steve' AND employees.last_name = 'Johnson'	store_1
SELECT employees.title , employees.phone , employees.hire_date FROM employees WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.title , employees.phone , employees.hire_date FROM employees WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.first_name , employees.last_name FROM employees JOIN employees ON employees.id = employees.reports_to WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.first_name , employees.last_name FROM employees JOIN employees ON employees.id = employees.reports_to WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.address FROM employees WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.address FROM employees WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.first_name , employees.last_name FROM employees JOIN customers ON employees.id = customers.support_rep_id GROUP BY employees.id ORDER BY COUNT( * ) DESC LIMIT 1	store_1
SELECT employees.first_name , employees.last_name FROM employees JOIN customers ON employees.id = customers.support_rep_id GROUP BY employees.id ORDER BY COUNT( * ) DESC LIMIT 1	store_1
SELECT COUNT( * ) FROM employees WHERE employees.country = 'Canada'	store_1
SELECT COUNT( * ) FROM employees WHERE employees.country = 'Canada'	store_1
SELECT employees.phone FROM employees WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.phone FROM employees WHERE employees.first_name = 'Nancy' AND employees.last_name = 'Edwards'	store_1
SELECT employees.first_name , employees.last_name FROM employees ORDER BY employees.birth_date DESC LIMIT 1	store_1
SELECT employees.first_name , employees.last_name FROM employees ORDER BY employees.birth_date DESC LIMIT 1	store_1
SELECT employees.first_name , employees.last_name FROM employees ORDER BY employees.hire_date ASC LIMIT 10	store_1
SELECT employees.first_name , employees.last_name FROM employees ORDER BY employees.hire_date ASC LIMIT 10	store_1
SELECT COUNT( * ) , employees.city FROM employees WHERE employees.title = 'IT Staff' GROUP BY employees.city	store_1
SELECT COUNT( * ) , employees.city FROM employees WHERE employees.title = 'IT staff' GROUP BY employees.city	store_1
SELECT employees.first_name , employees.last_name , COUNT( employees.reports_to ) FROM employees JOIN employees ON employees.reports_to = employees.id GROUP BY employees.reports_to ORDER BY COUNT( employees.reports_to ) DESC LIMIT 1	store_1
SELECT employees.first_name , employees.last_name , COUNT( employees.reports_to ) FROM employees JOIN employees ON employees.reports_to = employees.id GROUP BY employees.reports_to ORDER BY COUNT( employees.reports_to ) DESC LIMIT 1	store_1
SELECT COUNT( * ) FROM customers JOIN invoices ON customers.id = invoices.customer_id WHERE customers.first_name = 'Lucas' AND customers.last_name = 'Mancini'	store_1
SELECT COUNT( * ) FROM customers JOIN invoices ON customers.id = invoices.customer_id WHERE customers.first_name = 'Luca' AND customers.last_name = 'Mancini'	store_1
SELECT SUM( invoices.total ) FROM customers JOIN invoices ON customers.id = invoices.customer_id WHERE customers.first_name = 'Lucas' AND customers.last_name = 'Mancini'	store_1
SELECT SUM( invoices.total ) FROM customers JOIN invoices ON customers.id = invoices.customer_id WHERE customers.first_name = 'Lucas' AND customers.last_name = 'Mancini'	store_1
SELECT media_types.name FROM media_types	store_1
SELECT media_types.name FROM media_types	store_1
SELECT DISTINCT genres.name FROM genres	store_1
SELECT DISTINCT genres.name FROM genres	store_1
SELECT playlists.name FROM playlists	store_1
SELECT playlists.name FROM playlists	store_1
SELECT tracks.composer FROM tracks WHERE tracks.name = 'Fast As a Shark'	store_1
SELECT tracks.composer FROM tracks WHERE tracks.name = 'Fast As a Shark'	store_1
SELECT tracks.bytes FROM tracks WHERE tracks.name = 'Fast As a Shark'	store_1
SELECT tracks.milliseconds FROM tracks WHERE tracks.name = 'Fast As a Shark'	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id WHERE genres.name = 'Rock'	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id WHERE genres.name = 'Rock'	store_1
SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.genre_id WHERE tracks.name = 'Balls to the Wall'	store_1
SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.genre_id WHERE tracks.name = 'Ball to the Wall'	store_1
SELECT tracks.name FROM albums JOIN tracks ON albums.id = tracks.genre_id WHERE albums.title = 'Balls to the Wall'	store_1
SELECT tracks.name FROM albums JOIN tracks ON albums.id = tracks.genre_id WHERE albums.title = 'Balls to the Wall'	store_1
SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.album_id GROUP BY albums.id HAVING COUNT( albums.id ) > 10	store_1
SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.album_id GROUP BY albums.id HAVING COUNT( albums.id ) > 10	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id JOIN media_types ON media_types.id = tracks.media_type_id WHERE genres.name = 'Rock' AND media_types.name = 'MPEG audio file'	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id JOIN media_types ON media_types.id = tracks.media_type_id WHERE genres.name = 'Rock' AND media_types.name = 'MPEG audio files'	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id JOIN media_types ON media_types.id = tracks.media_type_id WHERE genres.name = 'Rock' OR media_types.name = 'MPEG audio file'	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id JOIN media_types ON media_types.id = tracks.media_type_id WHERE genres.name = 'Rock' AND media_types.name = 'MPEG'	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id WHERE genres.name = 'Rock' OR genres.name = 'Jazz'	store_1
SELECT tracks.name FROM genres JOIN tracks ON genres.id = tracks.genre_id WHERE genres.name = 'Rock' OR genres.name = 'Jazz'	store_1
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlists.id = playlist_tracks.playlist_id WHERE playlists.name = 'Movies'	store_1
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlists.id = playlist_tracks.playlist_id WHERE playlists.name = 'Movies'	store_1
SELECT playlists.name FROM playlists JOIN playlist_tracks ON playlists.id = playlist_tracks.playlist_id GROUP BY playlist_tracks.playlist_id HAVING COUNT( playlist_tracks.track_id ) > 100	store_1
SELECT playlists.name FROM playlists JOIN playlist_tracks ON playlists.id = playlist_tracks.playlist_id GROUP BY playlist_tracks.playlist_id HAVING COUNT( playlist_tracks.track_id ) > 100	store_1
SELECT tracks.name FROM tracks JOIN invoice_lines ON tracks.id = invoice_lines.track_id JOIN invoices ON invoices.id = invoice_lines.invoice_id JOIN customers ON customers.id = invoices.customer_id WHERE customers.first_name = 'Daan' AND customers.last_name = 'Peeters'	store_1
SELECT tracks.name FROM tracks JOIN invoice_lines ON tracks.id = invoice_lines.track_id JOIN invoices ON invoices.id = invoice_lines.invoice_id JOIN customers ON customers.id = invoices.customer_id WHERE customers.first_name = 'Dean' AND customers.last_name = 'Peeters'	store_1
SELECT tracks.bytes FROM tracks WHERE tracks.name = 'Fast As a Shark'	store_1
SELECT tracks.unit_price FROM tracks WHERE tracks.name = 'Fast As a Shark'	store_1
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies' EXCEPT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'music'	store_1
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies' EXCEPT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'music'	store_1
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies' INTERSECT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'music'	store_1
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies' INTERSECT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'music'	store_1
SELECT COUNT( * ) , genres.name FROM genres JOIN tracks ON genres.id = tracks.genre_id GROUP BY genres.name	store_1
SELECT COUNT( * ) , genres.name FROM genres JOIN tracks ON genres.id = tracks.genre_id GROUP BY genres.name	store_1
SELECT COUNT( * ) FROM editor	journal_committee
SELECT editor.name FROM editor ORDER BY editor.age ASC	journal_committee
SELECT editor.name , editor.age FROM editor	journal_committee
SELECT editor.name FROM editor WHERE editor.age > 25	journal_committee
SELECT editor.name FROM editor WHERE editor.age = 24 OR editor.age = 25	journal_committee
SELECT editor.name FROM editor ORDER BY editor.age ASC LIMIT 1	journal_committee
SELECT editor.age , COUNT( * ) FROM editor GROUP BY editor.age	journal_committee
SELECT editor.age FROM editor GROUP BY editor.age ORDER BY COUNT( * ) DESC LIMIT 1	journal_committee
SELECT DISTINCT journal.theme FROM journal	journal_committee
SELECT editor.name , journal.theme FROM journal_committee JOIN editor ON journal_committee.editor_id = editor.editor_id JOIN journal ON journal_committee.journal_id = journal.journal_id	journal_committee
SELECT editor.name , journal.theme FROM journal_committee JOIN editor ON journal_committee.editor_id = editor.editor_id JOIN journal ON journal_committee.journal_id = journal.journal_id	journal_committee
SELECT editor.name , editor.age , journal.theme FROM journal_committee JOIN editor ON journal_committee.editor_id = editor.editor_id JOIN journal ON journal_committee.journal_id = journal.journal_id ORDER BY journal.theme ASC	journal_committee
SELECT editor.name FROM journal_committee JOIN editor ON journal_committee.editor_id = editor.editor_id JOIN journal ON journal_committee.journal_id = journal.journal_id WHERE journal.sales > 3000	journal_committee
SELECT editor.editor_id , editor.name , COUNT( * ) FROM editor JOIN journal_committee ON editor.editor_id = journal_committee.editor_id GROUP BY editor.editor_id	journal_committee
SELECT editor.name FROM editor JOIN journal_committee ON editor.editor_id = journal_committee.editor_id GROUP BY editor.name HAVING COUNT( * ) >= 2	journal_committee
SELECT editor.name FROM editor WHERE editor.editor_id NOT IN (SELECT journal_committee.editor_id FROM journal_committee)	journal_committee
SELECT journal.date , journal.theme , journal.sales FROM journal EXCEPT SELECT journal.date , journal.theme , journal.sales FROM journal JOIN journal_committee ON journal.journal_id = journal_committee.journal_id	journal_committee
SELECT AVG( journal.sales ) FROM journal JOIN journal_committee ON journal.journal_id = journal_committee.journal_id WHERE journal_committee.work_type = 'Photo'	journal_committee
SELECT COUNT( * ) FROM accounts	customers_card_transactions
SELECT COUNT( * ) FROM accounts	customers_card_transactions
SELECT accounts.account_id , accounts.customer_id , accounts.account_name FROM accounts	customers_card_transactions
SELECT accounts.account_id , accounts.customer_id , accounts.account_name FROM accounts	customers_card_transactions
SELECT accounts.other_account_details FROM accounts WHERE accounts.account_name = '338'	customers_card_transactions
SELECT accounts.other_account_details FROM accounts WHERE accounts.account_name = '338'	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name , customers.customer_phone FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE accounts.account_name = '162'	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name , customers.customer_phone FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE accounts.account_name = '162'	customers_card_transactions
SELECT COUNT( * ) FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Art' AND customers.customer_last_name = 'Turcotte'	customers_card_transactions
SELECT COUNT( * ) FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Art' AND customers.customer_last_name = 'Turcotte'	customers_card_transactions
SELECT accounts.customer_id , COUNT( * ) FROM accounts GROUP BY accounts.customer_id	customers_card_transactions
SELECT accounts.customer_id , COUNT( * ) FROM accounts GROUP BY accounts.customer_id	customers_card_transactions
SELECT accounts.customer_id , COUNT( * ) FROM accounts GROUP BY accounts.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_card_transactions
SELECT accounts.customer_id , COUNT( * ) FROM accounts GROUP BY accounts.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name , accounts.customer_id FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name , accounts.customer_id FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customers_card_transactions
SELECT COUNT( * ) FROM customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM accounts)	customers_card_transactions
SELECT COUNT( * ) FROM customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM accounts)	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name FROM customers EXCEPT SELECT customers.customer_first_name , customers.customer_last_name FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name FROM customers EXCEPT SELECT customers.customer_first_name , customers.customer_last_name FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id	customers_card_transactions
SELECT DISTINCT customers.customer_first_name , customers.customer_last_name FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id	customers_card_transactions
SELECT DISTINCT customers.customer_first_name , customers.customer_last_name FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id	customers_card_transactions
SELECT COUNT( DISTINCT accounts.customer_id ) FROM accounts	customers_card_transactions
SELECT COUNT( DISTINCT accounts.customer_id ) FROM accounts	customers_card_transactions
SELECT COUNT( * ) FROM customers	customers_card_transactions
SELECT COUNT( * ) FROM customers	customers_card_transactions
SELECT customers.customer_id , customers.customer_first_name , customers.customer_last_name , customers.customer_phone FROM customers	customers_card_transactions
SELECT customers.customer_id , customers.customer_first_name , customers.customer_last_name , customers.customer_phone FROM customers	customers_card_transactions
SELECT customers.customer_phone , customers.customer_email FROM customers WHERE customers.customer_first_name = 'Aniyah' AND customers.customer_last_name = 'Feest'	customers_card_transactions
SELECT customers.customer_phone , customers.customer_email FROM customers WHERE customers.customer_first_name = 'Aniyah' AND customers.customer_last_name = 'Feest'	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards	customers_card_transactions
SELECT customers_cards.card_id , customers_cards.customer_id , customers_cards.card_type_code , customers_cards.card_number FROM customers_cards	customers_card_transactions
SELECT customers_cards.card_id , customers_cards.customer_id , customers_cards.card_type_code , customers_cards.card_number FROM customers_cards	customers_card_transactions
SELECT customers_cards.date_valid_from , customers_cards.date_valid_to FROM customers_cards WHERE customers_cards.card_number = '4560596484842'	customers_card_transactions
SELECT customers_cards.date_valid_from , customers_cards.date_valid_to FROM customers_cards WHERE customers_cards.card_number = '4560596484842'	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name , customers.customer_phone FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers_cards.card_number = '4560596484842'	customers_card_transactions
SELECT customers.customer_first_name , customers.customer_last_name , customers.customer_phone FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers_cards.card_number = '4560596484842'	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Art' AND customers.customer_last_name = 'Turcotte'	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Art' AND customers.customer_last_name = 'Turcotte'	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards WHERE customers_cards.card_type_code = 'debit'	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards WHERE customers_cards.card_type_code = 'Debit'	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Blanche' AND customers.customer_last_name = 'Huels' AND customers_cards.card_type_code = 'credit'	customers_card_transactions
SELECT COUNT( * ) FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Blanche' AND customers.customer_last_name = 'Huels' AND customers_cards.card_type_code = 'credit'	customers_card_transactions
SELECT customers_cards.customer_id , COUNT( * ) FROM customers_cards GROUP BY customers_cards.customer_id	customers_card_transactions
SELECT customers_cards.customer_id , COUNT( * ) FROM customers_cards GROUP BY customers_cards.customer_id	customers_card_transactions
SELECT customers_cards.customer_id , COUNT( * ) FROM customers_cards GROUP BY customers_cards.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_card_transactions
SELECT customers_cards.customer_id , COUNT( * ) FROM customers_cards GROUP BY customers_cards.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_card_transactions
SELECT customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id GROUP BY customers_cards.customer_id HAVING COUNT( * ) >= 2	customers_card_transactions
SELECT customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id GROUP BY customers_cards.customer_id HAVING COUNT( * ) >= 2	customers_card_transactions
SELECT customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id GROUP BY customers_cards.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customers_card_transactions
SELECT customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id GROUP BY customers_cards.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customers_card_transactions
SELECT customers_cards.card_type_code , COUNT( * ) FROM customers_cards GROUP BY customers_cards.card_type_code	customers_card_transactions
SELECT customers_cards.card_type_code , COUNT( * ) FROM customers_cards GROUP BY customers_cards.card_type_code	customers_card_transactions
SELECT customers_cards.card_type_code FROM customers_cards GROUP BY customers_cards.card_type_code ORDER BY COUNT( * ) DESC LIMIT 1	customers_card_transactions
SELECT customers_cards.card_type_code FROM customers_cards GROUP BY customers_cards.card_type_code ORDER BY COUNT( * ) DESC LIMIT 1	customers_card_transactions
SELECT customers_cards.card_type_code FROM customers_cards GROUP BY customers_cards.card_type_code HAVING COUNT( * ) >= 5	customers_card_transactions
SELECT customers_cards.card_type_code FROM customers_cards GROUP BY customers_cards.card_type_code HAVING COUNT( * ) >= 5	customers_card_transactions
SELECT customers_cards.card_type_code , COUNT( DISTINCT customers_cards.customer_id ) FROM customers_cards GROUP BY customers_cards.card_type_code	customers_card_transactions
SELECT customers_cards.card_type_code , COUNT( DISTINCT customers_cards.customer_id ) FROM customers_cards GROUP BY customers_cards.card_type_code	customers_card_transactions
SELECT customers.customer_id , customers.customer_first_name FROM customers EXCEPT SELECT customers_cards.customer_id , customers.customer_first_name FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers_cards.card_type_code = 'credit'	customers_card_transactions
SELECT customers.customer_id , customers.customer_first_name FROM customers EXCEPT SELECT customers_cards.customer_id , customers.customer_first_name FROM customers_cards JOIN customers ON customers_cards.customer_id = customers.customer_id WHERE customers_cards.card_type_code = 'credit'	customers_card_transactions
SELECT DISTINCT customers_cards.card_type_code FROM customers_cards	customers_card_transactions
SELECT DISTINCT customers_cards.card_type_code FROM customers_cards	customers_card_transactions
SELECT COUNT( DISTINCT customers_cards.card_type_code ) FROM customers_cards	customers_card_transactions
SELECT COUNT( DISTINCT customers_cards.card_type_code ) FROM customers_cards	customers_card_transactions
SELECT DISTINCT financial_transactions.transaction_type FROM financial_transactions	customers_card_transactions
SELECT DISTINCT financial_transactions.transaction_type FROM financial_transactions	customers_card_transactions
SELECT COUNT( DISTINCT financial_transactions.transaction_type ) FROM financial_transactions	customers_card_transactions
SELECT COUNT( DISTINCT financial_transactions.transaction_type ) FROM financial_transactions	customers_card_transactions
SELECT AVG( financial_transactions.transaction_amount ) , SUM( financial_transactions.transaction_amount ) FROM financial_transactions	customers_card_transactions
SELECT AVG( financial_transactions.transaction_amount ) , SUM( financial_transactions.transaction_amount ) FROM financial_transactions	customers_card_transactions
SELECT customers_cards.card_type_code , COUNT( * ) FROM financial_transactions JOIN customers_cards ON financial_transactions.card_id = customers_cards.card_id GROUP BY customers_cards.card_type_code	customers_card_transactions
SELECT customers_cards.card_type_code , COUNT( * ) FROM financial_transactions JOIN customers_cards ON financial_transactions.card_id = customers_cards.card_id GROUP BY customers_cards.card_type_code	customers_card_transactions
SELECT financial_transactions.transaction_type , COUNT( * ) FROM financial_transactions GROUP BY financial_transactions.transaction_type	customers_card_transactions
SELECT financial_transactions.transaction_type , COUNT( * ) FROM financial_transactions GROUP BY financial_transactions.transaction_type	customers_card_transactions
SELECT financial_transactions.transaction_type FROM financial_transactions GROUP BY financial_transactions.transaction_type ORDER BY SUM( financial_transactions.transaction_amount ) DESC LIMIT 1	customers_card_transactions
SELECT financial_transactions.transaction_type FROM financial_transactions GROUP BY financial_transactions.transaction_type ORDER BY SUM( financial_transactions.transaction_amount ) DESC LIMIT 1	customers_card_transactions
SELECT financial_transactions.account_id , COUNT( * ) FROM financial_transactions GROUP BY financial_transactions.account_id	customers_card_transactions
SELECT financial_transactions.account_id , COUNT( * ) FROM financial_transactions GROUP BY financial_transactions.account_id	customers_card_transactions
SELECT COUNT( * ) FROM track	race_track
SELECT COUNT( * ) FROM track	race_track
SELECT track.name , track.location FROM track	race_track
SELECT track.name , track.location FROM track	race_track
SELECT track.name , track.seating FROM track WHERE track.year_opened > 2000 ORDER BY track.seating ASC	race_track
SELECT track.name , track.seating FROM track WHERE track.year_opened > 2000 ORDER BY track.seating ASC	race_track
SELECT track.name , track.location , track.seating FROM track ORDER BY track.year_opened DESC LIMIT 1	race_track
SELECT track.name , track.location , track.seating FROM track ORDER BY track.year_opened DESC LIMIT 1	race_track
SELECT MIN( track.seating ) , MAX( track.seating ) , AVG( track.seating ) FROM track	race_track
SELECT MIN( track.seating ) , MAX( track.seating ) , AVG( track.seating ) FROM track	race_track
SELECT track.name , track.location , track.year_opened FROM track WHERE track.seating > (SELECT AVG( track.seating ) FROM track)	race_track
SELECT track.name , track.location , track.year_opened FROM track WHERE track.seating > (SELECT AVG( track.seating ) FROM track)	race_track
SELECT DISTINCT track.location FROM track	race_track
SELECT DISTINCT track.location FROM track	race_track
SELECT COUNT( * ) FROM race	race_track
SELECT COUNT( * ) FROM race	race_track
SELECT DISTINCT race.class FROM race	race_track
SELECT DISTINCT race.class FROM race	race_track
SELECT race.name , race.class , race.date FROM race	race_track
SELECT race.name , race.class , race.date FROM race	race_track
SELECT race.class , COUNT( * ) FROM race GROUP BY race.class	race_track
SELECT race.class , COUNT( * ) FROM race GROUP BY race.class	race_track
SELECT race.class FROM race GROUP BY race.class ORDER BY COUNT( * ) DESC LIMIT 1	race_track
SELECT race.class FROM race GROUP BY race.class ORDER BY COUNT( * ) DESC LIMIT 1	race_track
SELECT race.class FROM race GROUP BY race.class HAVING COUNT( * ) >= 2	race_track
SELECT race.class FROM race GROUP BY race.class HAVING COUNT( * ) >= 2	race_track
SELECT track.name FROM track EXCEPT SELECT track.name FROM race JOIN track ON race.track_id = track.track_id WHERE race.class = 'GT'	race_track
SELECT track.name FROM track EXCEPT SELECT track.name FROM race JOIN track ON race.track_id = track.track_id WHERE race.class = 'GT'	race_track
SELECT track.name FROM track WHERE track.track_id NOT IN (SELECT race.track_id FROM race)	race_track
SELECT track.name FROM track WHERE track.track_id NOT IN (SELECT race.track_id FROM race)	race_track
SELECT track.year_opened FROM track WHERE track.seating BETWEEN 4000 and 5000	race_track
SELECT track.year_opened FROM track WHERE track.seating BETWEEN 4000 and 5000	race_track
SELECT track.name , COUNT( * ) FROM race JOIN track ON race.track_id = track.track_id GROUP BY race.track_id	race_track
SELECT track.name , COUNT( * ) FROM race JOIN track ON race.track_id = track.track_id GROUP BY race.track_id	race_track
SELECT track.name FROM race JOIN track ON race.track_id = track.track_id GROUP BY race.track_id ORDER BY COUNT( * ) DESC LIMIT 1	race_track
SELECT track.name FROM race JOIN track ON race.track_id = track.track_id GROUP BY race.track_id ORDER BY COUNT( * ) DESC LIMIT 1	race_track
SELECT race.name , race.date , track.name FROM race JOIN track ON race.track_id = track.track_id	race_track
SELECT race.name , race.date , track.name FROM race JOIN track ON race.track_id = track.track_id	race_track
SELECT track.name , track.location FROM race JOIN track ON race.track_id = track.track_id GROUP BY race.track_id HAVING COUNT( * ) = 1	race_track
SELECT track.name , track.location FROM race JOIN track ON race.track_id = track.track_id GROUP BY race.track_id HAVING COUNT( * ) = 1	race_track
SELECT track.location FROM track WHERE track.seating > 90000 INTERSECT SELECT track.location FROM track WHERE track.seating<70000	race_track
SELECT track.location FROM track WHERE track.seating > 90000 INTERSECT SELECT track.location FROM track WHERE track.seating<70000	race_track
SELECT COUNT( * ) FROM member WHERE member.membership_card = 'black'	coffee_shop
SELECT COUNT( * ) , member.address FROM member GROUP BY member.address	coffee_shop
SELECT member.name FROM member WHERE member.address = 'Harford' OR member.address = 'Waterbury'	coffee_shop
SELECT member.name , member.member_id FROM member WHERE member.membership_card = 'black' OR member.age<30	coffee_shop
SELECT member.time_of_purchase , member.age , member.address FROM member ORDER BY member.time_of_purchase ASC	coffee_shop
SELECT member.membership_card FROM member GROUP BY member.membership_card HAVING COUNT( * ) > 5	coffee_shop
SELECT member.address FROM member WHERE member.age<30 INTERSECT SELECT member.address FROM member WHERE member.age > 40	coffee_shop
SELECT member.membership_card FROM member WHERE member.address = 'Hartford' INTERSECT SELECT member.membership_card FROM member WHERE member.address = 'Waterbury'	coffee_shop
SELECT COUNT( * ) FROM member WHERE member.address != 'Hartford'	coffee_shop
SELECT member.address FROM member EXCEPT SELECT member.address FROM member WHERE member.membership_card = 'black'	coffee_shop
SELECT shop.address FROM shop ORDER BY shop.open_year ASC	coffee_shop
SELECT AVG( shop.num_of_staff ) , AVG( shop.score ) FROM shop	coffee_shop
SELECT shop.shop_id , shop.address FROM shop WHERE shop.score<(SELECT AVG( shop.score ) FROM shop)	coffee_shop
SELECT shop.address , shop.num_of_staff FROM shop WHERE shop.shop_id NOT IN (SELECT happy_hour.shop_id FROM happy_hour)	coffee_shop
SELECT shop.address , shop.shop_id FROM shop JOIN happy_hour ON shop.shop_id = happy_hour.shop_id WHERE happy_hour.month = 'May'	coffee_shop
SELECT happy_hour.shop_id , COUNT( * ) FROM happy_hour GROUP BY happy_hour.shop_id ORDER BY COUNT( * ) DESC LIMIT 1	coffee_shop
SELECT happy_hour.month FROM happy_hour GROUP BY happy_hour.month ORDER BY COUNT( * ) DESC LIMIT 1	coffee_shop
SELECT happy_hour.month FROM happy_hour GROUP BY happy_hour.month HAVING COUNT( * ) > 2	coffee_shop
SELECT COUNT( * ) FROM album	chinook_1
SELECT COUNT( * ) FROM album	chinook_1
SELECT genre.name FROM genre	chinook_1
SELECT genre.name FROM genre	chinook_1
SELECT * FROM customer WHERE customer.state = 'NY'	chinook_1
SELECT * FROM customer WHERE customer.state = 'NY'	chinook_1
SELECT employee.firstname , employee.lastname FROM employee WHERE employee.city = 'Calgary'	chinook_1
SELECT employee.firstname , employee.lastname FROM employee WHERE employee.city = 'Calgary'	chinook_1
SELECT DISTINCT invoice.billingcountry FROM invoice	chinook_1
SELECT DISTINCT invoice.billingcountry FROM invoice	chinook_1
SELECT artist.name FROM artist WHERE artist.name LIKE '%a%'	chinook_1
SELECT artist.name FROM artist WHERE artist.name LIKE '%a%'	chinook_1
SELECT album.title FROM album JOIN artist ON album.artistid = artist.artistid WHERE artist.name = 'AC/DC'	chinook_1
SELECT album.title FROM album JOIN artist ON album.artistid = artist.artistid WHERE artist.name = 'AC/DC'	chinook_1
SELECT COUNT( * ) FROM album JOIN artist ON album.artistid = artist.artistid WHERE artist.name = 'Metallica'	chinook_1
SELECT COUNT( * ) FROM album JOIN artist ON album.artistid = artist.artistid WHERE artist.name = 'Metallica'	chinook_1
SELECT artist.name FROM album JOIN artist ON album.artistid = artist.artistid WHERE album.title = 'Balls to the Wall'	chinook_1
SELECT artist.name FROM album JOIN artist ON album.artistid = artist.artistid WHERE album.title = 'Balls to the Wall'	chinook_1
SELECT artist.name FROM album JOIN artist ON album.artistid = artist.artistid GROUP BY artist.name ORDER BY COUNT( * ) DESC LIMIT 1	chinook_1
SELECT artist.name FROM album JOIN artist ON album.artistid = artist.artistid GROUP BY artist.name ORDER BY COUNT( * ) DESC LIMIT 1	chinook_1
SELECT track.name FROM track WHERE track.name LIKE '%you%'	chinook_1
SELECT track.name FROM track WHERE track.name LIKE '%you%'	chinook_1
SELECT AVG( track.unitprice ) FROM track	chinook_1
SELECT AVG( track.unitprice ) FROM track	chinook_1
SELECT MAX( track.milliseconds ) , MIN( track.milliseconds ) FROM track	chinook_1
SELECT MAX( track.milliseconds ) , MIN( track.milliseconds ) FROM track	chinook_1
SELECT album.title , track.albumid , COUNT( * ) FROM album JOIN track ON album.albumid = track.albumid GROUP BY track.albumid	chinook_1
SELECT album.title , track.albumid , COUNT( * ) FROM album JOIN track ON album.albumid = track.albumid GROUP BY track.albumid	chinook_1
SELECT genre.name FROM genre JOIN track ON genre.genreid = track.genreid GROUP BY track.genreid ORDER BY COUNT( * ) DESC LIMIT 1	chinook_1
SELECT genre.name FROM genre JOIN track ON genre.genreid = track.genreid GROUP BY track.genreid ORDER BY COUNT( * ) DESC LIMIT 1	chinook_1
SELECT mediatype.name FROM mediatype JOIN track ON mediatype.mediatypeid = track.mediatypeid GROUP BY track.mediatypeid ORDER BY COUNT( * ) ASC LIMIT 1	chinook_1
SELECT mediatype.name FROM mediatype JOIN track ON mediatype.mediatypeid = track.mediatypeid GROUP BY track.mediatypeid ORDER BY COUNT( * ) ASC LIMIT 1	chinook_1
SELECT album.title , track.albumid FROM album JOIN track ON album.albumid = track.albumid WHERE track.unitprice > 1 GROUP BY track.albumid	chinook_1
SELECT album.title , track.albumid FROM album JOIN track ON album.albumid = track.albumid WHERE track.unitprice > 1 GROUP BY track.albumid	chinook_1
SELECT COUNT( * ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'rock'	chinook_1
SELECT COUNT( * ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'rock'	chinook_1
SELECT AVG( track.unitprice ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'Jazz'	chinook_1
SELECT AVG( track.unitprice ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'jazz'	chinook_1
SELECT customer.firstname , customer.lastname FROM customer WHERE customer.email = 'luisg@embraer.com.br'	chinook_1
SELECT customer.firstname , customer.lastname FROM customer WHERE customer.email = 'luisg@embraer.com.br'	chinook_1
SELECT COUNT( * ) FROM customer WHERE customer.email LIKE '%gmail.com%'	chinook_1
SELECT COUNT( * ) FROM customer WHERE customer.email LIKE '%gmail.com%'	chinook_1
SELECT employee.firstname , employee.lastname FROM customer JOIN employee ON customer.supportrepid = employee.employeeid WHERE customer.firstname = 'Leonie'	chinook_1
SELECT employee.firstname , employee.lastname FROM customer JOIN employee ON customer.supportrepid = employee.employeeid WHERE customer.firstname = 'Leonie'	chinook_1
SELECT employee.city FROM customer JOIN employee ON customer.supportrepid = employee.employeeid WHERE customer.postalcode = '70174'	chinook_1
SELECT employee.city FROM customer JOIN employee ON customer.supportrepid = employee.employeeid WHERE customer.postalcode = '70174'	chinook_1
SELECT COUNT( DISTINCT employee.city ) FROM employee	chinook_1
SELECT COUNT( DISTINCT employee.city ) FROM employee	chinook_1
SELECT invoice.invoicedate FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE customer.firstname = 'Astrid' AND customer.lastname = 'Gruber'	chinook_1
SELECT invoice.invoicedate FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE customer.firstname = 'Astrid' AND customer.lastname = 'Gruber'	chinook_1
SELECT customer.lastname FROM customer EXCEPT SELECT customer.lastname FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE invoice.total > 20	chinook_1
SELECT customer.lastname FROM customer EXCEPT SELECT customer.lastname FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE invoice.total > 20	chinook_1
SELECT DISTINCT customer.firstname FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE customer.country = 'Brazil'	chinook_1
SELECT DISTINCT customer.firstname FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE customer.country = 'Brazil'	chinook_1
SELECT DISTINCT customer.address FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE customer.country = 'Germany'	chinook_1
SELECT DISTINCT customer.address FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE customer.country = 'Germany'	chinook_1
SELECT employee.phone FROM employee	chinook_1
SELECT employee.phone FROM employee	chinook_1
SELECT COUNT( * ) FROM mediatype JOIN track ON mediatype.mediatypeid = track.mediatypeid WHERE mediatype.name = 'AAC audio file'	chinook_1
SELECT COUNT( * ) FROM mediatype JOIN track ON mediatype.mediatypeid = track.mediatypeid WHERE mediatype.name = 'AAC audio file'	chinook_1
SELECT AVG( track.milliseconds ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'Latin' OR genre.name = 'Pop'	chinook_1
SELECT AVG( track.bytes ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'Latin' OR genre.name = 'Pop'	chinook_1
SELECT customer.firstname , customer.supportrepid FROM customer JOIN employee ON customer.supportrepid = employee.employeeid GROUP BY customer.supportrepid HAVING COUNT( * ) >= 10	chinook_1
SELECT customer.firstname , customer.supportrepid FROM customer JOIN employee ON customer.supportrepid = employee.employeeid GROUP BY customer.supportrepid HAVING COUNT( * ) >= 10	chinook_1
SELECT customer.lastname FROM customer JOIN employee ON customer.supportrepid = employee.employeeid GROUP BY customer.supportrepid HAVING COUNT( * ) <= 20	chinook_1
SELECT customer.lastname FROM customer JOIN employee ON customer.supportrepid = employee.employeeid GROUP BY customer.supportrepid HAVING COUNT( * ) <= 20	chinook_1
SELECT album.title FROM album ORDER BY album.title ASC	chinook_1
SELECT album.title FROM album ORDER BY album.title ASC	chinook_1
SELECT artist.name , album.artistid FROM album JOIN artist ON album.artistid = artist.artistid GROUP BY album.artistid ORDER BY artist.name ASC HAVING COUNT( * ) >= 3	chinook_1
SELECT artist.name , album.artistid FROM album JOIN artist ON album.artistid = artist.artistid GROUP BY album.artistid ORDER BY artist.name ASC HAVING COUNT( * ) >= 3	chinook_1
SELECT artist.name FROM artist EXCEPT SELECT artist.name FROM album JOIN artist ON album.artistid = artist.artistid	chinook_1
SELECT artist.name FROM artist EXCEPT SELECT artist.name FROM album JOIN artist ON album.artistid = artist.artistid	chinook_1
SELECT AVG( track.unitprice ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'rock'	chinook_1
SELECT AVG( track.unitprice ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'Rock'	chinook_1
SELECT MAX( track.milliseconds ) , MIN( track.milliseconds ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'pop'	chinook_1
SELECT MAX( track.bytes ) , MIN( track.bytes ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'pop'	chinook_1
SELECT employee.birthdate FROM employee WHERE employee.city = 'Edmonton'	chinook_1
SELECT employee.birthdate FROM employee WHERE employee.city = 'Edmonton'	chinook_1
SELECT DISTINCT track.unitprice FROM track	chinook_1
SELECT DISTINCT track.unitprice FROM track	chinook_1
SELECT COUNT( * ) FROM artist WHERE artist.artistid NOT IN (SELECT album.artistid FROM album)	chinook_1
SELECT COUNT( * ) FROM artist WHERE artist.artistid NOT IN (SELECT album.artistid FROM album)	chinook_1
SELECT album.title FROM album JOIN track ON album.albumid = track.albumid JOIN genre ON track.genreid = genre.genreid WHERE genre.name = 'Reggae' INTERSECT SELECT album.title FROM album JOIN track ON album.albumid = track.albumid JOIN genre ON track.genreid = genre.genreid WHERE genre.name = 'Rock'	chinook_1
SELECT album.title FROM album JOIN track ON album.albumid = track.albumid JOIN genre ON track.genreid = genre.genreid WHERE genre.name = 'Reggae' INTERSECT SELECT album.title FROM album JOIN track ON album.albumid = track.albumid JOIN genre ON track.genreid = genre.genreid WHERE genre.name = 'Rock'	chinook_1
SELECT available_policies.customer_phone FROM available_policies	insurance_fnol
SELECT available_policies.customer_phone FROM available_policies	insurance_fnol
SELECT available_policies.customer_phone FROM available_policies WHERE available_policies.policy_type_code = 'Life Insurance'	insurance_fnol
SELECT available_policies.customer_phone FROM available_policies WHERE available_policies.policy_type_code = 'Life Insurance'	insurance_fnol
SELECT available_policies.policy_type_code FROM available_policies GROUP BY available_policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_fnol
SELECT available_policies.policy_type_code FROM available_policies GROUP BY available_policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_fnol
SELECT available_policies.customer_phone FROM available_policies WHERE available_policies.policy_type_code = (SELECT available_policies.policy_type_code FROM available_policies GROUP BY available_policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1)	insurance_fnol
SELECT available_policies.customer_phone FROM available_policies WHERE available_policies.policy_type_code = (SELECT available_policies.policy_type_code FROM available_policies GROUP BY available_policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1)	insurance_fnol
SELECT available_policies.policy_type_code FROM available_policies GROUP BY available_policies.policy_type_code HAVING COUNT( * ) > 4	insurance_fnol
SELECT available_policies.policy_type_code FROM available_policies GROUP BY available_policies.policy_type_code HAVING COUNT( * ) > 4	insurance_fnol
SELECT SUM( settlements.settlement_amount ) , AVG( settlements.settlement_amount ) FROM settlements	insurance_fnol
SELECT SUM( settlements.settlement_amount ) , AVG( settlements.settlement_amount ) FROM settlements	insurance_fnol
SELECT services.service_name FROM first_notification_of_loss JOIN services ON first_notification_of_loss.service_id = services.service_id GROUP BY first_notification_of_loss.service_id HAVING COUNT( * ) > 2	insurance_fnol
SELECT services.service_name FROM first_notification_of_loss JOIN services ON first_notification_of_loss.service_id = services.service_id GROUP BY first_notification_of_loss.service_id HAVING COUNT( * ) > 2	insurance_fnol
SELECT claims.effective_date FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id ORDER BY SUM( settlements.settlement_amount ) DESC LIMIT 1	insurance_fnol
SELECT claims.effective_date FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id ORDER BY SUM( settlements.settlement_amount ) DESC LIMIT 1	insurance_fnol
SELECT COUNT( * ) FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id WHERE customers.customer_name = 'Dayana Robel'	insurance_fnol
SELECT COUNT( * ) FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id WHERE customers.customer_name = 'Dayana Robel'	insurance_fnol
SELECT customers.customer_name FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id GROUP BY customers.customer_name ORDER BY COUNT( * ) DESC LIMIT 1	insurance_fnol
SELECT customers.customer_name FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id GROUP BY customers.customer_name ORDER BY COUNT( * ) DESC LIMIT 1	insurance_fnol
SELECT DISTINCT available_policies.policy_type_code FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id JOIN available_policies ON customers_policies.policy_id = available_policies.policy_id WHERE customers.customer_name = 'Dayana Robel'	insurance_fnol
SELECT DISTINCT available_policies.policy_type_code FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id JOIN available_policies ON customers_policies.policy_id = available_policies.policy_id WHERE customers.customer_name = 'Dayana Robel'	insurance_fnol
SELECT DISTINCT available_policies.policy_type_code FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id JOIN available_policies ON customers_policies.policy_id = available_policies.policy_id WHERE customers.customer_name = (SELECT customers.customer_name FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id)	insurance_fnol
SELECT DISTINCT available_policies.policy_type_code FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id JOIN available_policies ON customers_policies.policy_id = available_policies.policy_id WHERE customers.customer_name = 'yes' GROUP BY customers.customer_name ORDER BY COUNT( * ) DESC LIMIT 1	insurance_fnol
SELECT services.service_name FROM services ORDER BY services.service_name ASC	insurance_fnol
SELECT services.service_name FROM services ORDER BY services.service_name ASC	insurance_fnol
SELECT COUNT( * ) FROM services	insurance_fnol
SELECT COUNT( * ) FROM services	insurance_fnol
SELECT customers.customer_name FROM customers EXCEPT SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id	insurance_fnol
SELECT customers.customer_name FROM customers EXCEPT SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id	insurance_fnol
SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id JOIN services ON first_notification_of_loss.service_id = services.service_id WHERE services.service_name = 'Close a policy' OR services.service_name = 'Upgrade a policy'	insurance_fnol
SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id JOIN services ON first_notification_of_loss.service_id = services.service_id WHERE services.service_name = 'Close a policy' OR services.service_name = 'Upgrade a policy'	insurance_fnol
SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id JOIN services ON first_notification_of_loss.service_id = services.service_id WHERE services.service_name = 'Close a policy' INTERSECT SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id JOIN services ON first_notification_of_loss.service_id = services.service_id WHERE services.service_name = 'New policy application'	insurance_fnol
SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id JOIN services ON first_notification_of_loss.service_id = services.service_id WHERE services.service_name = 'Close a policy' INTERSECT SELECT customers.customer_name FROM customers JOIN first_notification_of_loss ON customers.customer_id = first_notification_of_loss.customer_id JOIN services ON first_notification_of_loss.service_id = services.service_id WHERE services.service_name = 'Upgrade a policy'	insurance_fnol
SELECT customers.customer_id FROM customers WHERE customers.customer_name LIKE '%Diana%'	insurance_fnol
SELECT customers.customer_id FROM customers WHERE customers.customer_name LIKE '%Diana%'	insurance_fnol
SELECT MAX( settlements.settlement_amount ) , MIN( settlements.settlement_amount ) FROM settlements	insurance_fnol
SELECT MAX( settlements.settlement_amount ) , MIN( settlements.settlement_amount ) FROM settlements	insurance_fnol
SELECT customers.customer_id , customers.customer_name FROM customers ORDER BY customers.customer_id ASC	insurance_fnol
SELECT customers.customer_id , customers.customer_name FROM customers ORDER BY customers.customer_id ASC	insurance_fnol
SELECT customers_policies.date_opened , customers_policies.date_closed FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id WHERE customers.customer_name LIKE '%Diana%'	insurance_fnol
SELECT customers_policies.date_opened , customers_policies.date_closed FROM customers JOIN customers_policies ON customers.customer_id = customers_policies.customer_id WHERE customers.customer_name LIKE '%Diana%'	insurance_fnol
SELECT COUNT( * ) FROM enzyme	medicine_enzyme_interaction
SELECT COUNT( * ) FROM enzyme	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme ORDER BY enzyme.name DESC	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme ORDER BY enzyme.name DESC	medicine_enzyme_interaction
SELECT enzyme.name , enzyme.location FROM enzyme	medicine_enzyme_interaction
SELECT enzyme.name , enzyme.location FROM enzyme	medicine_enzyme_interaction
SELECT MAX( enzyme.omim ) FROM enzyme	medicine_enzyme_interaction
SELECT MAX( enzyme.omim ) FROM enzyme	medicine_enzyme_interaction
SELECT enzyme.product , enzyme.chromosome , enzyme.porphyria FROM enzyme WHERE enzyme.location = 'Cytosol'	medicine_enzyme_interaction
SELECT enzyme.product , enzyme.chromosome , enzyme.porphyria FROM enzyme WHERE enzyme.location = 'Cytosol'	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme WHERE enzyme.product != 'Heme'	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme WHERE enzyme.product != 'Heme'	medicine_enzyme_interaction
SELECT medicine.name , medicine.trade_name FROM medicine WHERE medicine.fda_approved = 'yes'	medicine_enzyme_interaction
SELECT medicine.name , medicine.trade_name FROM medicine WHERE medicine.fda_approved = 'yes'	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine.name = 'Amisulpride' AND medicine_enzyme_interaction.interaction_type = 'inhibitor'	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine.name = 'Amisulpride' AND medicine_enzyme_interaction.interaction_type = 'inhibitors'	medicine_enzyme_interaction
SELECT medicine.id , medicine.name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id HAVING COUNT( * ) >= 2	medicine_enzyme_interaction
SELECT medicine.id , medicine.name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id HAVING COUNT( * ) >= 2	medicine_enzyme_interaction
SELECT medicine.id , medicine.name , medicine.fda_approved FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id ORDER BY COUNT( * ) DESC	medicine_enzyme_interaction
SELECT medicine.id , medicine.name , medicine.fda_approved FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id ORDER BY COUNT( * ) DESC	medicine_enzyme_interaction
SELECT enzyme.id , enzyme.name FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE medicine_enzyme_interaction.interaction_type = 'activator' GROUP BY enzyme.id ORDER BY COUNT( * ) DESC LIMIT 1	medicine_enzyme_interaction
SELECT enzyme.id , enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id WHERE medicine_enzyme_interaction.interaction_type = 'activator' GROUP BY enzyme.id ORDER BY COUNT( * ) DESC LIMIT 1	medicine_enzyme_interaction
SELECT medicine_enzyme_interaction.interaction_type FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE enzyme.name = 'ALA synthase' AND medicine.name = 'Aripiprazole'	medicine_enzyme_interaction
SELECT medicine_enzyme_interaction.interaction_type FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE enzyme.name = 'ALA synthase' AND medicine.name = 'Aripiprazole'	medicine_enzyme_interaction
SELECT medicine_enzyme_interaction.interaction_type , COUNT( * ) FROM medicine_enzyme_interaction GROUP BY medicine_enzyme_interaction.interaction_type ORDER BY COUNT( * ) DESC LIMIT 1	medicine_enzyme_interaction
SELECT medicine_enzyme_interaction.interaction_type , COUNT( * ) FROM medicine_enzyme_interaction GROUP BY medicine_enzyme_interaction.interaction_type ORDER BY COUNT( * ) DESC LIMIT 1	medicine_enzyme_interaction
SELECT COUNT( * ) FROM medicine WHERE medicine.fda_approved = 'no'	medicine_enzyme_interaction
SELECT COUNT( * ) FROM medicine WHERE medicine.fda_approved = 'no'	medicine_enzyme_interaction
SELECT COUNT( * ) FROM enzyme WHERE enzyme.id NOT IN (SELECT medicine_enzyme_interaction.enzyme_id FROM medicine_enzyme_interaction)	medicine_enzyme_interaction
SELECT COUNT( * ) FROM enzyme WHERE enzyme.id NOT IN (SELECT medicine_enzyme_interaction.enzyme_id FROM medicine_enzyme_interaction)	medicine_enzyme_interaction
SELECT medicine.id , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id HAVING COUNT( * ) >= 3	medicine_enzyme_interaction
SELECT medicine.id , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id HAVING COUNT( * ) >= 3	medicine_enzyme_interaction
SELECT DISTINCT enzyme.name , enzyme.location , enzyme.product FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor'	medicine_enzyme_interaction
SELECT DISTINCT enzyme.name , enzyme.location , enzyme.product FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor'	medicine_enzyme_interaction
SELECT medicine.name , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor' INTERSECT SELECT medicine.name , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine_enzyme_interaction.interaction_type = 'activitor'	medicine_enzyme_interaction
SELECT medicine.name , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor' INTERSECT SELECT medicine.name , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine_enzyme_interaction.interaction_type = 'activitor'	medicine_enzyme_interaction
SELECT medicine.name , medicine.trade_name FROM medicine EXCEPT SELECT medicine.name , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE enzyme.product = 'Heme'	medicine_enzyme_interaction
SELECT medicine.name , medicine.trade_name FROM medicine EXCEPT SELECT medicine.name , medicine.trade_name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id WHERE enzyme.product = 'Heme'	medicine_enzyme_interaction
SELECT COUNT( DISTINCT medicine.fda_approved ) FROM medicine	medicine_enzyme_interaction
SELECT COUNT( DISTINCT medicine.fda_approved ) FROM medicine	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme WHERE enzyme.name LIKE '%ALA%'	medicine_enzyme_interaction
SELECT enzyme.name FROM enzyme WHERE enzyme.name LIKE '%ALA%'	medicine_enzyme_interaction
SELECT medicine.trade_name , COUNT( * ) FROM medicine GROUP BY medicine.trade_name	medicine_enzyme_interaction
SELECT medicine.trade_name , COUNT( * ) FROM medicine GROUP BY medicine.trade_name	medicine_enzyme_interaction
SELECT university.school , university.nickname FROM university ORDER BY university.founded ASC	university_basketball
SELECT university.school , university.nickname FROM university ORDER BY university.founded ASC	university_basketball
SELECT university.school , university.location FROM university WHERE university.affiliation = 'public'	university_basketball
SELECT university.school , university.location FROM university WHERE university.affiliation = 'public'	university_basketball
SELECT university.founded FROM university ORDER BY university.enrollment DESC LIMIT 1	university_basketball
SELECT university.founded FROM university ORDER BY university.enrollment DESC LIMIT 1	university_basketball
SELECT university.founded FROM university WHERE university.affiliation != 'public' ORDER BY university.founded DESC LIMIT 1	university_basketball
SELECT university.founded FROM university WHERE university.affiliation != 'public' ORDER BY university.founded DESC LIMIT 1	university_basketball
SELECT COUNT( DISTINCT basketball_match.school_id ) FROM basketball_match	university_basketball
SELECT COUNT( DISTINCT basketball_match.school_id ) FROM basketball_match	university_basketball
SELECT basketball_match.acc_percent FROM basketball_match ORDER BY basketball_match.acc_percent DESC LIMIT 1	university_basketball
SELECT basketball_match.acc_percent FROM basketball_match ORDER BY basketball_match.acc_percent DESC LIMIT 1	university_basketball
SELECT university.primary_conference FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id ORDER BY basketball_match.acc_percent ASC LIMIT 1	university_basketball
SELECT university.primary_conference FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id ORDER BY basketball_match.acc_percent ASC LIMIT 1	university_basketball
SELECT basketball_match.team_name , basketball_match.acc_regular_season FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id ORDER BY university.founded ASC LIMIT 1	university_basketball
SELECT basketball_match.team_name , basketball_match.acc_regular_season FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id ORDER BY university.founded ASC LIMIT 1	university_basketball
SELECT basketball_match.all_games , university.location FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id WHERE basketball_match.team_name = 'Clemson'	university_basketball
SELECT basketball_match.all_games , university.location FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id WHERE basketball_match.team_name = 'Clemson'	university_basketball
SELECT AVG( university.enrollment ) FROM university WHERE university.founded<1850	university_basketball
SELECT AVG( university.enrollment ) FROM university WHERE university.founded<1850	university_basketball
SELECT university.enrollment , university.primary_conference FROM university ORDER BY university.founded ASC LIMIT 1	university_basketball
SELECT university.enrollment , university.primary_conference FROM university ORDER BY university.founded ASC LIMIT 1	university_basketball
SELECT SUM( university.enrollment ) , MIN( university.enrollment ) FROM university	university_basketball
SELECT SUM( university.enrollment ) , MIN( university.enrollment ) FROM university	university_basketball
SELECT SUM( university.enrollment ) , university.affiliation FROM university GROUP BY university.affiliation	university_basketball
SELECT SUM( university.enrollment ) , university.affiliation FROM university GROUP BY university.affiliation	university_basketball
SELECT COUNT( * ) FROM university WHERE university.school_id NOT IN (SELECT basketball_match.school_id FROM basketball_match)	university_basketball
SELECT COUNT( * ) FROM university WHERE university.school_id NOT IN (SELECT basketball_match.school_id FROM basketball_match)	university_basketball
SELECT university.school FROM university WHERE university.founded > 1850 OR university.affiliation = 'public'	university_basketball
SELECT university.school FROM university WHERE university.founded > 1850 OR university.affiliation = 'public'	university_basketball
SELECT COUNT( DISTINCT university.affiliation ) FROM university	university_basketball
SELECT COUNT( DISTINCT university.affiliation ) FROM university	university_basketball
SELECT COUNT( * ) FROM university WHERE university.location LIKE '%NY%'	university_basketball
SELECT COUNT( * ) FROM university WHERE university.location LIKE '%NY%'	university_basketball
SELECT basketball_match.team_name FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id WHERE university.enrollment<(SELECT AVG( university.enrollment ) FROM university)	university_basketball
SELECT basketball_match.team_name FROM university JOIN basketball_match ON university.school_id = basketball_match.school_id WHERE university.enrollment<(SELECT AVG( university.enrollment ) FROM university)	university_basketball
SELECT COUNT( * ) , university.affiliation FROM university WHERE university.enrollment > 20000 GROUP BY university.affiliation	university_basketball
SELECT COUNT( * ) , university.affiliation FROM university WHERE university.enrollment > 20000 GROUP BY university.affiliation	university_basketball
SELECT SUM( university.enrollment ) , university.affiliation FROM university WHERE university.founded > 1850 GROUP BY university.affiliation	university_basketball
SELECT SUM( university.enrollment ) , university.affiliation FROM university WHERE university.founded > 1850 GROUP BY university.affiliation	university_basketball
SELECT MAX( university.enrollment ) FROM university	university_basketball
SELECT MAX( university.enrollment ) FROM university	university_basketball
SELECT * FROM basketball_match	university_basketball
SELECT * FROM basketball_match	university_basketball
SELECT basketball_match.team_name FROM basketball_match ORDER BY basketball_match.all_home DESC	university_basketball
SELECT basketball_match.team_name FROM basketball_match ORDER BY basketball_match.all_home DESC	university_basketball
SELECT chip_model.model_name FROM chip_model WHERE chip_model.launch_year BETWEEN 2002 and 2004	phone_1
SELECT chip_model.model_name , chip_model.ram_mib FROM chip_model ORDER BY chip_model.ram_mib ASC LIMIT 1	phone_1
SELECT phone.chip_model , phone.screen_mode FROM phone WHERE phone.hardware_model_name = 'LG-P760'	phone_1
SELECT COUNT( * ) FROM phone WHERE phone.company_name = 'Nokia Corporation'	phone_1
SELECT MAX( chip_model.ram_mib ) , MIN( chip_model.ram_mib ) FROM chip_model JOIN phone ON chip_model.model_name = phone.chip_model WHERE phone.company_name = 'Nokia Corporation'	phone_1
SELECT AVG( chip_model.rom_mib ) FROM chip_model JOIN phone ON chip_model.model_name = phone.chip_model WHERE phone.company_name = 'Nokia Corporation'	phone_1
SELECT phone.hardware_model_name , phone.company_name FROM chip_model JOIN phone ON chip_model.model_name = phone.chip_model WHERE chip_model.launch_year = 2002 OR chip_model.ram_mib > 32	phone_1
SELECT phone.hardware_model_name , phone.company_name FROM phone WHERE phone.accreditation_type LIKE '%Full%'	phone_1
SELECT screen_mode.char_cells , screen_mode.pixels , screen_mode.hardware_colours FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE phone.hardware_model_name = 'LG-P760'	phone_1
SELECT phone.hardware_model_name , phone.company_name FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE screen_mode.type = 'Graphics'	phone_1
SELECT phone.company_name , COUNT( * ) FROM phone GROUP BY phone.company_name ORDER BY COUNT( * ) ASC LIMIT 1	phone_1
SELECT phone.company_name FROM phone GROUP BY phone.company_name HAVING COUNT( * ) > 1	phone_1
SELECT MAX( screen_mode.used_kb ) , MIN( screen_mode.used_kb ) , AVG( screen_mode.used_kb ) FROM screen_mode	phone_1
SELECT phone.hardware_model_name FROM chip_model JOIN phone ON chip_model.model_name = phone.chip_model WHERE chip_model.launch_year = 2002 ORDER BY chip_model.ram_mib DESC LIMIT 1	phone_1
SELECT chip_model.wifi , screen_mode.type FROM chip_model JOIN phone ON chip_model.model_name = phone.chip_model JOIN screen_mode ON phone.screen_mode = screen_mode.graphics_mode WHERE phone.hardware_model_name = 'LG-P760'	phone_1
SELECT phone.hardware_model_name FROM chip_model JOIN phone ON chip_model.model_name = phone.chip_model JOIN screen_mode ON phone.screen_mode = screen_mode.graphics_mode WHERE screen_mode.type = 'Text' OR chip_model.ram_mib > 32	phone_1
SELECT DISTINCT phone.hardware_model_name FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE screen_mode.type = 'Graphics' OR phone.company_name = 'Nokia Corporation'	phone_1
SELECT DISTINCT phone.hardware_model_name FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE phone.company_name = 'Nokia Corporation' AND screen_mode.type != 'Text'	phone_1
SELECT DISTINCT phone.hardware_model_name , phone.company_name FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE screen_mode.used_kb BETWEEN 10 and 15	phone_1
SELECT phone.accreditation_type , COUNT( * ) FROM phone GROUP BY phone.accreditation_type	phone_1
SELECT phone.accreditation_type , COUNT( * ) FROM phone GROUP BY phone.accreditation_type	phone_1
SELECT phone.accreditation_level FROM phone GROUP BY phone.accreditation_level HAVING COUNT( * ) > 3	phone_1
SELECT * FROM chip_model	phone_1
SELECT COUNT( * ) FROM chip_model WHERE chip_model.wifi = 'no'	phone_1
SELECT COUNT( * ) FROM chip_model WHERE chip_model.wifi = 'no'	phone_1
SELECT chip_model.model_name FROM chip_model ORDER BY chip_model.launch_year ASC	phone_1
SELECT AVG( chip_model.ram_mib ) FROM chip_model WHERE chip_model.model_name NOT IN (SELECT phone.chip_model FROM phone)	phone_1
SELECT chip_model.model_name FROM chip_model EXCEPT SELECT phone.chip_model FROM phone WHERE phone.accreditation_type = 'full'	phone_1
SELECT screen_mode.pixels FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE phone.accreditation_type = 'Provisional' INTERSECT SELECT screen_mode.pixels FROM screen_mode JOIN phone ON screen_mode.graphics_mode = phone.screen_mode WHERE phone.accreditation_type = 'full'	phone_1
SELECT COUNT( * ) FROM country	match_season
SELECT COUNT( * ) FROM country	match_season
SELECT country.country_name , country.capital FROM country	match_season
SELECT country.country_name , country.capital FROM country	match_season
SELECT country.official_native_language FROM country WHERE country.official_native_language LIKE '%English%'	match_season
SELECT country.official_native_language FROM country WHERE country.official_native_language LIKE '%English%'	match_season
SELECT DISTINCT match_season.position FROM match_season	match_season
SELECT DISTINCT match_season.position FROM match_season	match_season
SELECT match_season.player FROM match_season WHERE match_season.college = 'UCLA'	match_season
SELECT match_season.player FROM match_season WHERE match_season.college = 'UCLA'	match_season
SELECT DISTINCT match_season.position FROM match_season WHERE match_season.college = 'UCLA' OR match_season.college = 'Duke'	match_season
SELECT DISTINCT match_season.position FROM match_season WHERE match_season.college = 'UCLA' OR match_season.college = 'Duke'	match_season
SELECT match_season.draft_pick_number , match_season.draft_class FROM match_season WHERE match_season.position = 'defenders'	match_season
SELECT match_season.draft_pick_number , match_season.draft_class FROM match_season WHERE match_season.position = 'Defender'	match_season
SELECT COUNT( DISTINCT match_season.team ) FROM match_season	match_season
SELECT COUNT( DISTINCT match_season.team ) FROM match_season	match_season
SELECT player.player , player.years_played FROM player	match_season
SELECT player.player , player.years_played FROM player	match_season
SELECT team.name FROM team	match_season
SELECT team.name FROM team	match_season
SELECT match_season.season , match_season.player , country.country_name FROM country JOIN match_season ON country.country_id = match_season.country	match_season
SELECT match_season.season , match_season.player , country.country_name FROM country JOIN match_season ON country.country_id = match_season.country	match_season
SELECT match_season.player FROM country JOIN match_season ON country.country_id = match_season.country WHERE country.country_name = 'Indonesia'	match_season
SELECT match_season.player FROM country JOIN match_season ON country.country_id = match_season.country WHERE country.country_name = 'Indonesia'	match_season
SELECT DISTINCT match_season.position FROM country JOIN match_season ON country.country_id = match_season.country WHERE country.capital = 'Dublin'	match_season
SELECT DISTINCT match_season.position FROM country JOIN match_season ON country.country_id = match_season.country WHERE country.capital = 'Dublin'	match_season
SELECT country.official_native_language FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.college = 'Maryland' OR match_season.college = 'Duke'	match_season
SELECT country.official_native_language FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.college = 'Maryland' OR match_season.college = 'Duke'	match_season
SELECT COUNT( DISTINCT country.official_native_language ) FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.position = 'defenders'	match_season
SELECT COUNT( DISTINCT country.official_native_language ) FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.position = 'Defender'	match_season
SELECT match_season.season , match_season.player , team.name FROM match_season JOIN team ON match_season.team = team.team_id	match_season
SELECT match_season.season , match_season.player , team.name FROM match_season JOIN team ON match_season.team = team.team_id	match_season
SELECT match_season.position FROM match_season JOIN team ON match_season.team = team.team_id WHERE team.name = 'Ryley Goldner'	match_season
SELECT match_season.position FROM match_season JOIN team ON match_season.team = team.team_id WHERE team.name = 'Ryley Goldner'	match_season
SELECT COUNT( DISTINCT match_season.college ) FROM match_season JOIN team ON match_season.team = team.team_id WHERE team.name = 'Columbus Crew'	match_season
SELECT COUNT( DISTINCT match_season.college ) FROM match_season JOIN team ON match_season.team = team.team_id WHERE team.name = 'Columbus Crew'	match_season
SELECT player.player , player.years_played FROM player JOIN team ON player.team = team.team_id WHERE team.name = 'Columbus Crew'	match_season
SELECT player.player , player.years_played FROM player JOIN team ON player.team = team.team_id WHERE team.name = 'Columbus Crew'	match_season
SELECT match_season.position , COUNT( * ) FROM match_season GROUP BY match_season.position	match_season
SELECT match_season.position , COUNT( * ) FROM match_season GROUP BY match_season.position	match_season
SELECT country.country_name , COUNT( * ) FROM country JOIN match_season ON country.country_id = match_season.country GROUP BY country.country_name	match_season
SELECT country.country_name , COUNT( * ) FROM country JOIN match_season ON country.country_id = match_season.country GROUP BY country.country_name	match_season
SELECT match_season.player FROM match_season ORDER BY match_season.college ASC	match_season
SELECT match_season.player FROM match_season ORDER BY match_season.college ASC	match_season
SELECT match_season.position FROM match_season GROUP BY match_season.position ORDER BY COUNT( * ) DESC LIMIT 1	match_season
SELECT match_season.position FROM match_season GROUP BY match_season.position ORDER BY COUNT( * ) DESC LIMIT 1	match_season
SELECT match_season.college FROM match_season GROUP BY match_season.college ORDER BY COUNT( * ) DESC LIMIT 3	match_season
SELECT match_season.college FROM match_season GROUP BY match_season.college ORDER BY COUNT( * ) DESC LIMIT 3	match_season
SELECT match_season.college FROM match_season GROUP BY match_season.college HAVING COUNT( * ) >= 2	match_season
SELECT match_season.college FROM match_season GROUP BY match_season.college HAVING COUNT( * ) >= 2	match_season
SELECT match_season.college FROM match_season GROUP BY match_season.college ORDER BY match_season.college DESC HAVING COUNT( * ) >= 2	match_season
SELECT match_season.college FROM match_season GROUP BY match_season.college ORDER BY match_season.college DESC HAVING COUNT( * ) >= 2	match_season
SELECT team.name FROM team WHERE team.team_id NOT IN (SELECT match_season.team FROM match_season)	match_season
SELECT team.name FROM team WHERE team.team_id NOT IN (SELECT match_season.team FROM match_season)	match_season
SELECT country.country_name FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.position = 'forward' INTERSECT SELECT country.country_name FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.position = 'defender'	match_season
SELECT country.country_name FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.position = 'Forward' INTERSECT SELECT country.country_name FROM country JOIN match_season ON country.country_id = match_season.country WHERE match_season.position = 'Defender'	match_season
SELECT match_season.college FROM match_season WHERE match_season.position = 'midfielder' INTERSECT SELECT match_season.college FROM match_season WHERE match_season.position = 'defender'	match_season
SELECT match_season.college FROM match_season WHERE match_season.position = 'Midfielder' INTERSECT SELECT match_season.college FROM match_season WHERE match_season.position = 'Defender'	match_season
SELECT COUNT( * ) FROM climber	climbing
SELECT COUNT( * ) FROM climber	climbing
SELECT climber.name FROM climber ORDER BY climber.points DESC	climbing
SELECT climber.name FROM climber ORDER BY climber.points DESC	climbing
SELECT climber.name FROM climber WHERE climber.country != 'Switzerland'	climbing
SELECT climber.name FROM climber WHERE climber.country != 'Switzerland'	climbing
SELECT MAX( climber.points ) FROM climber WHERE climber.country = 'United Kingdom'	climbing
SELECT MAX( climber.points ) FROM climber WHERE climber.country = 'United Kingdom'	climbing
SELECT COUNT( DISTINCT climber.country ) FROM climber	climbing
SELECT COUNT( DISTINCT climber.country ) FROM climber	climbing
SELECT mountain.name FROM mountain ORDER BY mountain.name ASC	climbing
SELECT mountain.name FROM mountain ORDER BY mountain.name ASC	climbing
SELECT mountain.country FROM mountain WHERE mountain.height > 5000	climbing
SELECT mountain.country FROM mountain WHERE mountain.height > 5000	climbing
SELECT mountain.name FROM mountain ORDER BY mountain.height DESC LIMIT 1	climbing
SELECT mountain.name FROM mountain ORDER BY mountain.height DESC LIMIT 1	climbing
SELECT DISTINCT mountain.range FROM mountain ORDER BY mountain.prominence DESC LIMIT 3	climbing
SELECT DISTINCT mountain.range FROM mountain ORDER BY mountain.prominence DESC LIMIT 3	climbing
SELECT climber.name , mountain.name FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id	climbing
SELECT climber.name , mountain.name FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id	climbing
SELECT climber.name , mountain.height FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id	climbing
SELECT climber.name , mountain.height FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id	climbing
SELECT mountain.height FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id ORDER BY climber.points DESC LIMIT 1	climbing
SELECT mountain.height FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id ORDER BY climber.points DESC LIMIT 1	climbing
SELECT DISTINCT mountain.name FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id WHERE climber.country = 'West Germany'	climbing
SELECT DISTINCT mountain.name FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id WHERE climber.country = 'West Germany'	climbing
SELECT climber.time FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id WHERE mountain.country = 'Uganda'	climbing
SELECT climber.time FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id WHERE mountain.country = 'Uganda'	climbing
SELECT climber.country , COUNT( * ) FROM climber GROUP BY climber.country	climbing
SELECT climber.country , COUNT( * ) FROM climber GROUP BY climber.country	climbing
SELECT mountain.country FROM mountain GROUP BY mountain.country HAVING COUNT( * ) > 1	climbing
SELECT mountain.country FROM mountain GROUP BY mountain.country HAVING COUNT( * ) > 1	climbing
SELECT mountain.name FROM mountain WHERE mountain.mountain_id NOT IN (SELECT climber.mountain_id FROM climber)	climbing
SELECT mountain.name FROM mountain WHERE mountain.mountain_id NOT IN (SELECT climber.mountain_id FROM climber)	climbing
SELECT mountain.country FROM mountain WHERE mountain.height > 5600 INTERSECT SELECT mountain.country FROM mountain WHERE mountain.height<5200	climbing
SELECT mountain.country FROM mountain WHERE mountain.height > 5600 INTERSECT SELECT mountain.country FROM mountain WHERE mountain.height<5200	climbing
SELECT mountain.range FROM mountain GROUP BY mountain.range ORDER BY COUNT( * ) DESC LIMIT 1	climbing
SELECT mountain.range FROM mountain GROUP BY mountain.range ORDER BY COUNT( * ) DESC LIMIT 1	climbing
SELECT mountain.name FROM mountain WHERE mountain.height > 5000 OR mountain.prominence > 1000	climbing
SELECT mountain.name FROM mountain WHERE mountain.height > 5000 OR mountain.prominence > 1000	climbing
SELECT COUNT( * ) FROM body_builder	body_builder
SELECT body_builder.total FROM body_builder ORDER BY body_builder.total ASC	body_builder
SELECT body_builder.snatch , body_builder.clean_jerk FROM body_builder ORDER BY body_builder.snatch ASC	body_builder
SELECT AVG( body_builder.snatch ) FROM body_builder	body_builder
SELECT body_builder.clean_jerk FROM body_builder ORDER BY body_builder.total DESC LIMIT 1	body_builder
SELECT people.birth_date FROM people ORDER BY people.height ASC	body_builder
SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id	body_builder
SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE body_builder.total > 300	body_builder
SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id ORDER BY people.weight DESC LIMIT 1	body_builder
SELECT people.birth_date , people.birth_place FROM body_builder JOIN people ON body_builder.people_id = people.people_id ORDER BY body_builder.total DESC LIMIT 1	body_builder
SELECT people.height FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE body_builder.total<315	body_builder
SELECT AVG( body_builder.total ) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE people.height > 200	body_builder
SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id ORDER BY body_builder.total DESC	body_builder
SELECT people.birth_place , COUNT( * ) FROM people GROUP BY people.birth_place	body_builder
SELECT people.birth_place FROM people GROUP BY people.birth_place ORDER BY COUNT( * ) DESC LIMIT 1	body_builder
SELECT people.birth_place FROM people GROUP BY people.birth_place HAVING COUNT( * ) >= 2	body_builder
SELECT people.height , people.weight FROM people ORDER BY people.height DESC	body_builder
SELECT * FROM body_builder	body_builder
SELECT people.name , people.birth_place FROM people EXCEPT SELECT people.name , people.birth_place FROM people JOIN body_builder ON people.people_id = body_builder.people_id	body_builder
SELECT COUNT( DISTINCT people.birth_place ) FROM people	body_builder
SELECT COUNT( * ) FROM people WHERE people.people_id NOT IN (SELECT body_builder.people_id FROM body_builder)	body_builder
SELECT people.weight FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE body_builder.snatch > 140 OR people.height > 200	body_builder
SELECT body_builder.total FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE people.birth_date LIKE '%January%'	body_builder
SELECT MIN( body_builder.snatch ) FROM body_builder	body_builder
SELECT COUNT( * ) FROM election	election_representative
SELECT election.votes FROM election ORDER BY election.votes DESC	election_representative
SELECT election.date , election.vote_percent FROM election	election_representative
SELECT MIN( election.vote_percent ) , MAX( election.vote_percent ) FROM election	election_representative
SELECT representative.name , representative.party FROM representative	election_representative
SELECT representative.name FROM representative WHERE representative.party != 'Republican'	election_representative
SELECT representative.lifespan FROM representative WHERE representative.state = 'New York' OR representative.state = 'Indiana'	election_representative
SELECT representative.name , election.date FROM election JOIN representative ON election.representative_id = representative.representative_id	election_representative
SELECT representative.name FROM election JOIN representative ON election.representative_id = representative.representative_id WHERE election.votes > 10000	election_representative
SELECT representative.name FROM election JOIN representative ON election.representative_id = representative.representative_id ORDER BY election.votes DESC	election_representative
SELECT representative.party FROM election JOIN representative ON election.representative_id = representative.representative_id ORDER BY election.votes ASC LIMIT 1	election_representative
SELECT representative.lifespan FROM election JOIN representative ON election.representative_id = representative.representative_id ORDER BY election.vote_percent DESC	election_representative
SELECT AVG( election.votes ) FROM election JOIN representative ON election.representative_id = representative.representative_id WHERE representative.party = 'Republican'	election_representative
SELECT representative.party , COUNT( * ) FROM representative GROUP BY representative.party	election_representative
SELECT representative.party , COUNT( * ) FROM representative GROUP BY representative.party ORDER BY COUNT( * ) DESC LIMIT 1	election_representative
SELECT representative.party FROM representative GROUP BY representative.party HAVING COUNT( * ) >= 3	election_representative
SELECT representative.state FROM representative GROUP BY representative.state HAVING COUNT( * ) >= 2	election_representative
SELECT representative.name FROM representative WHERE representative.representative_id NOT IN (SELECT election.representative_id FROM election)	election_representative
SELECT representative.party FROM representative WHERE representative.state = 'New York' INTERSECT SELECT representative.party FROM representative WHERE representative.state = 'Pennsylvania'	election_representative
SELECT COUNT( DISTINCT representative.party ) FROM representative	election_representative
SELECT COUNT( * ) FROM apartment_bookings	apartment_rentals
SELECT COUNT( * ) FROM apartment_bookings	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_end_date FROM apartment_bookings	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_end_date FROM apartment_bookings	apartment_rentals
SELECT DISTINCT apartment_buildings.building_description FROM apartment_buildings	apartment_rentals
SELECT DISTINCT apartment_buildings.building_description FROM apartment_buildings	apartment_rentals
SELECT apartment_buildings.building_short_name FROM apartment_buildings WHERE apartment_buildings.building_manager = 'Emma'	apartment_rentals
SELECT apartment_buildings.building_short_name FROM apartment_buildings WHERE apartment_buildings.building_manager = 'Emma'	apartment_rentals
SELECT apartment_buildings.building_address , apartment_buildings.building_phone FROM apartment_buildings WHERE apartment_buildings.building_manager = 'Brenden'	apartment_rentals
SELECT apartment_buildings.building_address , apartment_buildings.building_phone FROM apartment_buildings WHERE apartment_buildings.building_manager = 'Brenden'	apartment_rentals
SELECT apartment_buildings.building_full_name FROM apartment_buildings WHERE apartment_buildings.building_full_name LIKE '%court%'	apartment_rentals
SELECT apartment_buildings.building_full_name FROM apartment_buildings WHERE apartment_buildings.building_full_name LIKE '%court%'	apartment_rentals
SELECT MIN( apartments.bathroom_count ) , MAX( apartments.bathroom_count ) FROM apartments	apartment_rentals
SELECT MIN( apartments.bathroom_count ) , MAX( apartments.bathroom_count ) FROM apartments	apartment_rentals
SELECT AVG( apartments.bedroom_count ) FROM apartments	apartment_rentals
SELECT AVG( apartments.bedroom_count ) FROM apartments	apartment_rentals
SELECT apartments.apt_number , apartments.room_count FROM apartments	apartment_rentals
SELECT apartments.apt_number , apartments.room_count FROM apartments	apartment_rentals
SELECT AVG( apartments.room_count ) FROM apartments WHERE apartments.apt_type_code = 'Studio'	apartment_rentals
SELECT AVG( apartments.room_count ) FROM apartments WHERE apartments.apt_type_code = 'Studio'	apartment_rentals
SELECT apartments.apt_number FROM apartments WHERE apartments.apt_type_code = 'Flat'	apartment_rentals
SELECT apartments.apt_number FROM apartments WHERE apartments.apt_type_code = 'Flat'	apartment_rentals
SELECT guests.guest_first_name , guests.guest_last_name FROM guests	apartment_rentals
SELECT guests.guest_first_name , guests.guest_last_name FROM guests	apartment_rentals
SELECT guests.date_of_birth FROM guests WHERE guests.gender_code = 'Male'	apartment_rentals
SELECT guests.date_of_birth FROM guests WHERE guests.gender_code = 'Male'	apartment_rentals
SELECT apartments.apt_number , apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id	apartment_rentals
SELECT apartments.apt_number , apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.apt_type_code = 'Duplex'	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.apt_type_code = 'Duplex'	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.bedroom_count > 2	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.bedroom_count > 2	apartment_rentals
SELECT apartment_bookings.booking_status_code FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.apt_number = 'Suite 634'	apartment_rentals
SELECT apartment_bookings.booking_status_code FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.apt_number = 'Suite 634'	apartment_rentals
SELECT DISTINCT apartments.apt_number FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed'	apartment_rentals
SELECT DISTINCT apartments.apt_number FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed'	apartment_rentals
SELECT AVG( apartments.room_count ) FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'	apartment_rentals
SELECT AVG( apartments.room_count ) FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'	apartment_rentals
SELECT guests.guest_first_name , apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN guests ON apartment_bookings.guest_id = guests.guest_id	apartment_rentals
SELECT guests.guest_first_name , apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN guests ON apartment_bookings.guest_id = guests.guest_id	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN guests ON apartment_bookings.guest_id = guests.guest_id WHERE guests.gender_code = 'Female'	apartment_rentals
SELECT apartment_bookings.booking_start_date , apartment_bookings.booking_start_date FROM apartment_bookings JOIN guests ON apartment_bookings.guest_id = guests.guest_id WHERE guests.gender_code = 'Female'	apartment_rentals
SELECT guests.guest_first_name , guests.guest_last_name FROM apartment_bookings JOIN guests ON apartment_bookings.guest_id = guests.guest_id WHERE apartment_bookings.booking_status_code = 'Confirmed'	apartment_rentals
SELECT guests.guest_first_name , guests.guest_last_name FROM apartment_bookings JOIN guests ON apartment_bookings.guest_id = guests.guest_id WHERE apartment_bookings.booking_status_code = 'Confirmed'	apartment_rentals
SELECT apartment_facilities.facility_code FROM apartment_facilities JOIN apartments ON apartment_facilities.apt_id = apartments.apt_id WHERE apartments.bedroom_count > 4	apartment_rentals
SELECT apartment_facilities.facility_code FROM apartment_facilities JOIN apartments ON apartment_facilities.apt_id = apartments.apt_id WHERE apartments.bedroom_count > 4	apartment_rentals
SELECT SUM( apartments.room_count ) FROM apartment_facilities JOIN apartments ON apartment_facilities.apt_id = apartments.apt_id WHERE apartment_facilities.facility_code = 'Gym'	apartment_rentals
SELECT SUM( apartments.room_count ) FROM apartment_facilities JOIN apartments ON apartment_facilities.apt_id = apartments.apt_id WHERE apartment_facilities.facility_code = 'Gym'	apartment_rentals
SELECT SUM( apartments.room_count ) FROM apartment_buildings JOIN apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartment_buildings.building_short_name = 'Columbus Square'	apartment_rentals
SELECT SUM( apartments.room_count ) FROM apartment_buildings JOIN apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartment_buildings.building_short_name = 'Columbus Square'	apartment_rentals
SELECT apartment_buildings.building_address FROM apartment_buildings JOIN apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartments.bathroom_count > 2	apartment_rentals
SELECT apartment_buildings.building_address FROM apartment_buildings JOIN apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartments.bathroom_count > 2	apartment_rentals
SELECT apartments.apt_type_code , apartments.apt_number FROM apartment_buildings JOIN apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartment_buildings.building_manager = 'Kyle'	apartment_rentals
SELECT apartments.apt_type_code , apartments.apt_number FROM apartment_buildings JOIN apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartment_buildings.building_manager = 'Kyle'	apartment_rentals
SELECT apartment_bookings.booking_status_code , COUNT( * ) FROM apartment_bookings GROUP BY apartment_bookings.booking_status_code	apartment_rentals
SELECT apartment_bookings.booking_status_code , COUNT( * ) FROM apartment_bookings GROUP BY apartment_bookings.booking_status_code	apartment_rentals
SELECT apartments.apt_number FROM apartments ORDER BY apartments.room_count ASC	apartment_rentals
SELECT apartments.apt_number FROM apartments ORDER BY apartments.room_count ASC	apartment_rentals
SELECT apartments.apt_number FROM apartments ORDER BY apartments.bedroom_count DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_number FROM apartments ORDER BY apartments.bedroom_count DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_type_code , COUNT( * ) FROM apartments GROUP BY apartments.apt_type_code ORDER BY COUNT( * ) ASC	apartment_rentals
SELECT apartments.apt_type_code , COUNT( * ) FROM apartments GROUP BY apartments.apt_type_code ORDER BY COUNT( * ) ASC	apartment_rentals
SELECT apartments.apt_type_code FROM apartments GROUP BY apartments.apt_type_code ORDER BY AVG( apartments.room_count ) DESC LIMIT 3	apartment_rentals
SELECT apartments.apt_type_code FROM apartments GROUP BY apartments.apt_type_code ORDER BY AVG( apartments.room_count ) DESC LIMIT 3	apartment_rentals
SELECT apartments.apt_type_code , apartments.bathroom_count , apartments.bedroom_count FROM apartments GROUP BY apartments.apt_type_code ORDER BY SUM( apartments.room_count ) DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_type_code , apartments.bathroom_count , apartments.bedroom_count FROM apartments GROUP BY apartments.apt_type_code ORDER BY SUM( apartments.room_count ) DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_type_code FROM apartments GROUP BY apartments.apt_type_code ORDER BY COUNT( * ) DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_type_code FROM apartments GROUP BY apartments.apt_type_code ORDER BY COUNT( * ) DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_type_code FROM apartments WHERE apartments.bathroom_count > 1 GROUP BY apartments.apt_type_code ORDER BY COUNT( * ) DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_type_code FROM apartments WHERE apartments.bathroom_count > 1 GROUP BY apartments.apt_type_code ORDER BY COUNT( * ) DESC LIMIT 1	apartment_rentals
SELECT apartments.apt_type_code , MAX( apartments.room_count ) , MIN( apartments.room_count ) FROM apartments GROUP BY apartments.apt_type_code	apartment_rentals
SELECT apartments.apt_type_code , MAX( apartments.room_count ) , MIN( apartments.room_count ) FROM apartments GROUP BY apartments.apt_type_code	apartment_rentals
SELECT guests.gender_code , COUNT( * ) FROM guests GROUP BY guests.gender_code ORDER BY COUNT( * ) DESC	apartment_rentals
SELECT guests.gender_code , COUNT( * ) FROM guests GROUP BY guests.gender_code ORDER BY COUNT( * ) DESC	apartment_rentals
SELECT COUNT( * ) FROM apartments WHERE apartments.apt_id NOT IN (SELECT apartment_facilities.apt_id FROM apartment_facilities)	apartment_rentals
SELECT COUNT( * ) FROM apartments WHERE apartments.apt_id NOT IN (SELECT apartment_facilities.apt_id FROM apartment_facilities)	apartment_rentals
SELECT apartments.apt_number FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed' INTERSECT SELECT apartments.apt_number FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'	apartment_rentals
SELECT apartments.apt_number FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed' INTERSECT SELECT apartments.apt_number FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'	apartment_rentals
SELECT apartments.apt_number FROM apartments JOIN view_unit_status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 0 INTERSECT SELECT apartments.apt_number FROM apartments JOIN view_unit_status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 1	apartment_rentals
SELECT apartments.apt_number FROM apartments JOIN view_unit_status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 0 INTERSECT SELECT apartments.apt_number FROM apartments JOIN view_unit_status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 1	apartment_rentals
SELECT COUNT( * ) FROM game WHERE game.season > 2007	game_injury
SELECT game.date FROM game ORDER BY game.home_team DESC	game_injury
SELECT game.season , game.home_team , game.away_team FROM game	game_injury
SELECT MAX( stadium.home_games ) , MIN( stadium.home_games ) , AVG( stadium.home_games ) FROM stadium	game_injury
SELECT stadium.average_attendance FROM stadium WHERE stadium.capacity_percentage > 100	game_injury
SELECT injury_accident.player , injury_accident.number_of_matches , injury_accident.source FROM injury_accident WHERE injury_accident.injury != 'Knee problem'	game_injury
SELECT game.season FROM game JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.player = 'Walter Samuel'	game_injury
SELECT game.id , game.score , game.date FROM injury_accident JOIN game ON injury_accident.game_id = game.id GROUP BY game.id HAVING COUNT( * ) >= 2	game_injury
SELECT stadium.id , stadium.name FROM stadium JOIN game ON stadium.id = game.stadium_id JOIN injury_accident ON game.id = injury_accident.game_id GROUP BY stadium.id ORDER BY COUNT( * ) DESC LIMIT 1	game_injury
SELECT stadium.id , stadium.name FROM stadium JOIN game ON stadium.id = game.stadium_id JOIN injury_accident ON game.id = injury_accident.game_id GROUP BY stadium.id ORDER BY COUNT( * ) DESC LIMIT 1	game_injury
SELECT game.season , stadium.name FROM game JOIN stadium ON game.stadium_id = stadium.id JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.injury = 'Foot injury' OR injury_accident.injury = 'Knee problem'	game_injury
SELECT COUNT( DISTINCT injury_accident.source ) FROM injury_accident	game_injury
SELECT COUNT( * ) FROM game WHERE game.id NOT IN (SELECT injury_accident.game_id FROM injury_accident)	game_injury
SELECT COUNT( DISTINCT injury_accident.injury ) FROM injury_accident JOIN game ON injury_accident.game_id = game.id WHERE game.season > 2010	game_injury
SELECT stadium.name FROM game JOIN stadium ON game.stadium_id = stadium.id JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.player = 'Walter Samuel' INTERSECT SELECT stadium.name FROM game JOIN stadium ON game.stadium_id = stadium.id JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.player = 'Thiago Motta'	game_injury
SELECT stadium.name , stadium.average_attendance , stadium.total_attendance FROM stadium EXCEPT SELECT stadium.name , stadium.average_attendance , stadium.total_attendance FROM game JOIN stadium ON game.stadium_id = stadium.id JOIN injury_accident ON game.id = injury_accident.game_id	game_injury
SELECT stadium.name FROM stadium WHERE stadium.name LIKE '%Bank%'	game_injury
SELECT stadium.id , COUNT( * ) FROM stadium JOIN game ON stadium.id = game.stadium_id GROUP BY stadium.id	game_injury
SELECT game.date , injury_accident.player FROM game JOIN injury_accident ON game.id = injury_accident.game_id ORDER BY game.season DESC	game_injury
SELECT country.name , league.name FROM country JOIN league ON country.id = league.country_id	soccer_1
SELECT COUNT( * ) FROM country JOIN league ON country.id = league.country_id WHERE country.name = 'England'	soccer_1
SELECT AVG( player.weight ) FROM player	soccer_1
SELECT MAX( player.weight ) , MIN( player.weight ) FROM player	soccer_1
SELECT DISTINCT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating > (SELECT AVG( player_attributes.overall_rating ) FROM player_attributes)	soccer_1
SELECT DISTINCT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = (SELECT MAX( player_attributes.overall_rating ) FROM player_attributes)	soccer_1
SELECT DISTINCT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.crossing > 90 AND player_attributes.preferred_foot = 'right'	soccer_1
player , player_attributes	soccer_1
SELECT player_attributes.preferred_foot , AVG( player_attributes.overall_rating ) FROM player_attributes GROUP BY player_attributes.preferred_foot	soccer_1
SELECT player_attributes.preferred_foot , COUNT( * ) FROM player_attributes WHERE player_attributes.overall_rating > 80 GROUP BY player_attributes.preferred_foot	soccer_1
SELECT player.player_api_id FROM player WHERE player.height >= 180 INTERSECT SELECT player_attributes.player_api_id FROM player_attributes WHERE player_attributes.overall_rating > 85	soccer_1
SELECT player.player_api_id FROM player WHERE player.height BETWEEN 180 and 190 INTERSECT SELECT player_attributes.player_api_id FROM player_attributes WHERE player_attributes.preferred_foot = 'left'	soccer_1
SELECT DISTINCT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id ORDER BY player_attributes.overall_rating DESC LIMIT 3	soccer_1
SELECT DISTINCT player.player_name , player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id ORDER BY player_attributes.potential DESC LIMIT 5	soccer_1
SELECT COUNT( * ) FROM performance	performance_attendance
SELECT performance.host FROM performance ORDER BY performance.attendance ASC	performance_attendance
SELECT performance.date , performance.location FROM performance	performance_attendance
SELECT performance.attendance FROM performance WHERE performance.location = 'TD Garden' OR performance.location = 'Bell Centre'	performance_attendance
SELECT AVG( performance.attendance ) FROM performance	performance_attendance
SELECT performance.date FROM performance ORDER BY performance.attendance DESC LIMIT 1	performance_attendance
SELECT performance.location , COUNT( * ) FROM performance GROUP BY performance.location	performance_attendance
SELECT performance.location FROM performance GROUP BY performance.location ORDER BY COUNT( * ) DESC LIMIT 1	performance_attendance
SELECT performance.location FROM performance GROUP BY performance.location HAVING COUNT( * ) >= 2	performance_attendance
SELECT performance.location FROM performance WHERE performance.attendance > 2000 INTERSECT SELECT performance.location FROM performance WHERE performance.attendance<1000	performance_attendance
SELECT member.name , performance.location FROM member_attendance JOIN member ON member_attendance.member_id = member.member_id JOIN performance ON member_attendance.performance_id = performance.performance_id	performance_attendance
SELECT member.name , performance.location FROM member_attendance JOIN member ON member_attendance.member_id = member.member_id JOIN performance ON member_attendance.performance_id = performance.performance_id ORDER BY member.name ASC	performance_attendance
SELECT performance.date FROM member_attendance JOIN member ON member_attendance.member_id = member.member_id JOIN performance ON member_attendance.performance_id = performance.performance_id WHERE member.role = 'Violin'	performance_attendance
SELECT member.name , performance.date FROM member_attendance JOIN member ON member_attendance.member_id = member.member_id JOIN performance ON member_attendance.performance_id = performance.performance_id ORDER BY performance.attendance DESC	performance_attendance
SELECT member.name FROM member WHERE member.member_id NOT IN (SELECT member_attendance.member_id FROM member_attendance)	performance_attendance
SELECT DISTINCT classroom.building FROM classroom WHERE classroom.capacity > 50	college_2
SELECT DISTINCT classroom.building FROM classroom WHERE classroom.capacity > 50	college_2
SELECT COUNT( * ) FROM classroom WHERE classroom.building != 'Lamberton'	college_2
SELECT COUNT( * ) FROM classroom WHERE classroom.building != 'Lamberton'	college_2
SELECT department.dept_name , department.building FROM department WHERE department.budget > (SELECT AVG( department.budget ) FROM department)	college_2
SELECT department.dept_name , department.building FROM department WHERE department.budget > (SELECT AVG( department.budget ) FROM department)	college_2
SELECT classroom.building , classroom.room_number FROM classroom WHERE classroom.capacity BETWEEN 50 and 100	college_2
SELECT classroom.building , classroom.room_number FROM classroom WHERE classroom.capacity BETWEEN 50 and 100	college_2
SELECT department.dept_name , department.building FROM department ORDER BY department.budget DESC LIMIT 1	college_2
SELECT department.dept_name , department.building FROM department ORDER BY department.budget DESC LIMIT 1	college_2
SELECT student.name FROM student WHERE student.dept_name = 'History' ORDER BY student.tot_cred DESC LIMIT 1	college_2
SELECT student.name FROM student WHERE student.dept_name = 'History' ORDER BY student.tot_cred DESC LIMIT 1	college_2
SELECT COUNT( * ) FROM classroom WHERE classroom.building = 'Lamberton'	college_2
SELECT COUNT( * ) FROM classroom WHERE classroom.building = 'Lamberton'	college_2
SELECT COUNT( DISTINCT advisor.s_id ) FROM advisor	college_2
SELECT COUNT( DISTINCT advisor.s_id ) FROM advisor	college_2
SELECT COUNT( DISTINCT course.dept_name ) FROM course	college_2
SELECT COUNT( DISTINCT course.dept_name ) FROM course	college_2
SELECT COUNT( DISTINCT course.course_id ) FROM course WHERE course.dept_name = 'Physics'	college_2
SELECT COUNT( DISTINCT course.course_id ) FROM course WHERE course.dept_name = 'Physics'	college_2
SELECT course.title FROM course JOIN prereq ON course.course_id = prereq.course_id GROUP BY prereq.course_id HAVING COUNT( * ) = 2	college_2
SELECT course.title FROM course JOIN prereq ON course.course_id = prereq.course_id GROUP BY prereq.course_id HAVING COUNT( * ) = 2	college_2
SELECT course.title , course.credits , course.dept_name FROM course JOIN prereq ON course.course_id = prereq.course_id GROUP BY prereq.course_id HAVING COUNT( * ) > 1	college_2
SELECT course.title , course.credits , course.dept_name FROM course JOIN prereq ON course.course_id = prereq.course_id GROUP BY prereq.course_id HAVING COUNT( * ) > 1	college_2
SELECT COUNT( * ) FROM course WHERE course.course_id NOT IN (SELECT prereq.course_id FROM prereq)	college_2
SELECT COUNT( * ) FROM course WHERE course.course_id NOT IN (SELECT prereq.course_id FROM prereq)	college_2
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prereq.course_id FROM prereq)	college_2
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prereq.course_id FROM prereq)	college_2
SELECT COUNT( DISTINCT teaches.id ) FROM teaches	college_2
SELECT COUNT( DISTINCT teaches.id ) FROM teaches	college_2
SELECT SUM( department.budget ) FROM department WHERE department.dept_name = 'Marketing' OR department.dept_name = 'Finance'	college_2
SELECT SUM( department.budget ) FROM department WHERE department.dept_name = 'Marketing' OR department.dept_name = 'Finance'	college_2
SELECT instructor.dept_name FROM instructor WHERE instructor.name LIKE '%Soisalon%'	college_2
SELECT instructor.dept_name FROM instructor WHERE instructor.name LIKE '%Soisalon%'	college_2
SELECT COUNT( * ) FROM classroom WHERE classroom.building = 'Lamberton' AND classroom.capacity<50	college_2
SELECT COUNT( * ) FROM classroom WHERE classroom.building = 'Lamberton' AND classroom.capacity<50	college_2
SELECT department.dept_name , department.budget FROM department WHERE department.budget > (SELECT AVG( department.budget ) FROM department)	college_2
SELECT department.dept_name , department.budget FROM department WHERE department.budget > (SELECT AVG( department.budget ) FROM department)	college_2
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'Statistics' ORDER BY instructor.salary ASC LIMIT 1	college_2
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'Statistics' ORDER BY instructor.salary ASC LIMIT 1	college_2
SELECT course.title FROM course WHERE course.dept_name = 'Statistics' INTERSECT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'	college_2
SELECT course.title FROM course WHERE course.dept_name = 'Statistics' INTERSECT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'	college_2
SELECT course.title FROM course WHERE course.dept_name = 'Statistics' EXCEPT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'	college_2
SELECT course.title FROM course WHERE course.dept_name = 'Statistics' EXCEPT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'	college_2
SELECT teaches.id FROM teaches WHERE teaches.semester = 'Fall' AND teaches.year = 2009 EXCEPT SELECT teaches.id FROM teaches WHERE teaches.semester = 'Spring' AND teaches.year = 2010	college_2
SELECT teaches.id FROM teaches WHERE teaches.semester = 'Fall' AND teaches.year = 2009 EXCEPT SELECT teaches.id FROM teaches WHERE teaches.semester = 'Spring' AND teaches.year = 2010	college_2
SELECT DISTINCT student.name FROM student JOIN takes ON student.id = takes.id WHERE takes.year = 2009 OR takes.year = 2010	college_2
SELECT DISTINCT student.name FROM student JOIN takes ON student.id = takes.id WHERE takes.year = 2009 OR takes.year = 2010	college_2
SELECT course.dept_name FROM course GROUP BY course.dept_name ORDER BY COUNT( * ) DESC LIMIT 3	college_2
SELECT course.dept_name FROM course GROUP BY course.dept_name ORDER BY COUNT( * ) DESC LIMIT 3	college_2
SELECT course.dept_name FROM course GROUP BY course.dept_name ORDER BY SUM( course.credits ) DESC LIMIT 1	college_2
SELECT course.dept_name FROM course GROUP BY course.dept_name ORDER BY SUM( course.credits ) DESC LIMIT 1	college_2
SELECT course.title FROM course ORDER BY course.title , course.credits ASC	college_2
SELECT course.title FROM course ORDER BY course.title , course.credits ASC	college_2
SELECT department.dept_name FROM department ORDER BY department.budget ASC LIMIT 1	college_2
SELECT department.dept_name FROM department ORDER BY department.budget ASC LIMIT 1	college_2
SELECT department.dept_name , department.building FROM department ORDER BY department.budget DESC	college_2
SELECT department.dept_name , department.building FROM department ORDER BY department.budget DESC	college_2
SELECT instructor.name FROM instructor ORDER BY instructor.salary DESC LIMIT 1	college_2
SELECT instructor.name FROM instructor ORDER BY instructor.salary DESC LIMIT 1	college_2
SELECT * FROM instructor ORDER BY instructor.salary ASC	college_2
SELECT * FROM instructor ORDER BY instructor.salary ASC	college_2
SELECT student.name , student.dept_name FROM student ORDER BY student.tot_cred ASC	college_2
SELECT student.name , student.dept_name FROM student ORDER BY student.tot_cred ASC	college_2
SELECT course.title , instructor.name FROM course JOIN teaches ON course.course_id = teaches.course_id JOIN instructor ON teaches.id = instructor.id WHERE teaches.year = 2008 ORDER BY course.title ASC	college_2
SELECT course.title , instructor.name FROM course JOIN teaches ON course.course_id = teaches.course_id JOIN instructor ON teaches.id = instructor.id WHERE teaches.year = 2008 ORDER BY course.title ASC	college_2
SELECT instructor.name FROM instructor JOIN advisor ON instructor.id = advisor.i_id GROUP BY advisor.i_id HAVING COUNT( * ) > 1	college_2
SELECT instructor.name FROM instructor JOIN advisor ON instructor.id = advisor.i_id GROUP BY advisor.i_id HAVING COUNT( * ) > 1	college_2
SELECT student.name FROM student JOIN advisor ON student.id = advisor.s_id GROUP BY advisor.s_id HAVING COUNT( * ) > 1	college_2
SELECT student.name FROM student JOIN advisor ON student.id = advisor.s_id GROUP BY advisor.s_id HAVING COUNT( * ) > 1	college_2
SELECT COUNT( * ) , classroom.building FROM classroom WHERE classroom.capacity > 50 GROUP BY classroom.building	college_2
SELECT COUNT( * ) , classroom.building FROM classroom WHERE classroom.capacity > 50 GROUP BY classroom.building	college_2
SELECT MAX( classroom.capacity ) , AVG( classroom.capacity ) , classroom.building FROM classroom GROUP BY classroom.building	college_2
SELECT MAX( classroom.capacity ) , AVG( classroom.capacity ) , classroom.building FROM classroom GROUP BY classroom.building	college_2
SELECT course.title FROM course GROUP BY course.title HAVING COUNT( * ) > 1	college_2
SELECT course.title FROM course GROUP BY course.title HAVING COUNT( * ) > 1	college_2
SELECT SUM( course.credits ) , course.dept_name FROM course GROUP BY course.dept_name	college_2
SELECT SUM( course.credits ) , course.dept_name FROM course GROUP BY course.dept_name	college_2
SELECT MIN( instructor.salary ) , instructor.dept_name FROM instructor WHERE instructor.salary<(SELECT AVG( instructor.salary ) FROM instructor) UNION SELECT MIN( instructor.salary ) , instructor.dept_name FROM instructor WHERE instructor.salary<(SELECT AVG( instructor.salary ) FROM instructor)	college_2
SELECT MIN( instructor.salary ) , instructor.dept_name FROM instructor GROUP BY instructor.dept_name HAVING AVG( instructor.salary ) > (SELECT instructor.dept_name FROM instructor)	college_2
SELECT COUNT( * ) , section.semester , section.year FROM section GROUP BY section.semester , section.year	college_2
SELECT COUNT( * ) , section.semester , section.year FROM section GROUP BY section.semester , section.year	college_2
SELECT section.year FROM section GROUP BY section.year ORDER BY COUNT( * ) DESC LIMIT 1	college_2
SELECT section.year FROM section GROUP BY section.year ORDER BY COUNT( * ) DESC LIMIT 1	college_2
SELECT section.semester , section.year FROM section GROUP BY section.semester , section.year ORDER BY COUNT( * ) DESC LIMIT 1	college_2
SELECT section.semester , section.year FROM section GROUP BY section.semester , section.year ORDER BY COUNT( * ) DESC LIMIT 1	college_2
SELECT student.dept_name FROM student GROUP BY student.dept_name ORDER BY COUNT( * ) DESC LIMIT 1	college_2
SELECT student.dept_name FROM student GROUP BY student.dept_name ORDER BY COUNT( * ) DESC LIMIT 1	college_2
SELECT COUNT( * ) , student.dept_name FROM student GROUP BY student.dept_name	college_2
SELECT COUNT( * ) , student.dept_name FROM student GROUP BY student.dept_name	college_2
SELECT takes.semester , takes.year FROM takes GROUP BY takes.semester , takes.year ORDER BY COUNT( * ) ASC LIMIT 1	college_2
SELECT takes.semester , takes.year FROM takes GROUP BY takes.semester , takes.year ORDER BY COUNT( * ) ASC LIMIT 1	college_2
SELECT advisor.i_id FROM advisor JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'History'	college_2
SELECT advisor.i_id FROM advisor JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'History'	college_2
SELECT instructor.name , instructor.salary FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'History'	college_2
SELECT instructor.name , instructor.salary FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'History'	college_2
SELECT course.course_id FROM course EXCEPT SELECT prereq.course_id FROM prereq	college_2
SELECT course.course_id FROM course EXCEPT SELECT prereq.course_id FROM prereq	college_2
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prereq.course_id FROM prereq)	college_2
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prereq.course_id FROM prereq)	college_2
SELECT course.title FROM course WHERE course.course_id IN (SELECT prereq.prereq_id FROM prereq JOIN course ON prereq.course_id = course.course_id WHERE course.title = 'International Finance')	college_2
SELECT course.title FROM course WHERE course.course_id IN (SELECT prereq.prereq_id FROM prereq JOIN course ON prereq.course_id = course.course_id WHERE course.title = 'International Finance')	college_2
SELECT course.title FROM course WHERE course.course_id IN (SELECT prereq.course_id FROM prereq JOIN course ON prereq.prereq_id = course.course_id WHERE course.title = 'Differential Geometry')	college_2
SELECT course.title FROM course WHERE course.course_id IN (SELECT prereq.course_id FROM prereq JOIN course ON prereq.prereq_id = course.course_id WHERE course.title = 'Differential Geometry')	college_2
SELECT student.name FROM student WHERE student.id IN (SELECT takes.id FROM takes WHERE takes.semester = 'fall' AND takes.year = 2003)	college_2
SELECT student.name FROM student WHERE student.id IN (SELECT takes.id FROM takes WHERE takes.semester = 'Fall' AND takes.year = 2003)	college_2
SELECT course.title FROM course JOIN section ON course.course_id = section.course_id WHERE section.building = 'Chandler' AND section.semester = 'fall' AND section.year = 2010	college_2
SELECT course.title FROM course JOIN section ON course.course_id = section.course_id WHERE section.building = 'Chandler' AND section.semester = 'Fall' AND section.year = 2010	college_2
SELECT instructor.name FROM instructor JOIN teaches ON instructor.id = teaches.id JOIN course ON teaches.course_id = course.course_id WHERE course.title = 'C Programming'	college_2
SELECT instructor.name FROM instructor JOIN teaches ON instructor.id = teaches.id JOIN course ON teaches.course_id = course.course_id WHERE course.title = 'C Programming'	college_2
SELECT instructor.name , instructor.salary FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'Math'	college_2
SELECT instructor.name , instructor.salary FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'Math'	college_2
SELECT instructor.name FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'Math' ORDER BY student.tot_cred ASC	college_2
SELECT instructor.name FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id WHERE student.dept_name = 'math' ORDER BY student.tot_cred ASC	college_2
SELECT course.title FROM course WHERE course.course_id IN (SELECT prereq.prereq_id FROM prereq JOIN course ON prereq.course_id = course.course_id WHERE course.title = 'Mobile Computing')	college_2
SELECT course.title FROM course WHERE course.course_id IN (SELECT prereq.prereq_id FROM prereq JOIN course ON prereq.course_id = course.course_id WHERE course.title = 'Mobile Computing')	college_2
SELECT instructor.name FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id ORDER BY student.tot_cred DESC LIMIT 1	college_2
SELECT instructor.name FROM advisor JOIN instructor ON advisor.i_id = instructor.id JOIN student ON advisor.s_id = student.id ORDER BY student.tot_cred DESC LIMIT 1	college_2
SELECT instructor.name FROM instructor WHERE instructor.id NOT IN (SELECT teaches.id FROM teaches)	college_2
SELECT instructor.name FROM instructor WHERE instructor.id NOT IN (SELECT teaches.id FROM teaches)	college_2
SELECT instructor.id FROM instructor EXCEPT SELECT teaches.id FROM teaches	college_2
SELECT instructor.id FROM instructor EXCEPT SELECT teaches.id FROM teaches	college_2
SELECT instructor.name FROM instructor WHERE instructor.id NOT IN (SELECT teaches.id FROM teaches WHERE teaches.semester = 'Spring')	college_2
SELECT instructor.name FROM instructor WHERE instructor.id NOT IN (SELECT teaches.id FROM teaches WHERE teaches.semester = 'Spring')	college_2
SELECT instructor.dept_name FROM instructor GROUP BY instructor.dept_name ORDER BY AVG( instructor.salary ) DESC LIMIT 1	college_2
SELECT instructor.dept_name FROM instructor GROUP BY instructor.dept_name ORDER BY AVG( instructor.salary ) DESC LIMIT 1	college_2
SELECT AVG( instructor.salary ) , COUNT( * ) FROM instructor JOIN department ON instructor.dept_name = department.dept_name ORDER BY department.budget DESC LIMIT 1	college_2
SELECT AVG( instructor.salary ) , COUNT( * ) FROM instructor JOIN department ON instructor.dept_name = department.dept_name ORDER BY department.budget DESC LIMIT 1	college_2
SELECT course.title , course.credits FROM classroom JOIN section ON classroom.building = section.building JOIN classroom ON classroom.room_number = section.room_number JOIN course ON section.course_id = course.course_id WHERE classroom.capacity = (SELECT MAX( classroom.capacity ) FROM classroom)	college_2
SELECT course.title , course.credits FROM classroom JOIN section ON classroom.building = section.building JOIN classroom ON classroom.room_number = section.room_number JOIN course ON section.course_id = course.course_id WHERE classroom.capacity = (SELECT MAX( classroom.capacity ) FROM classroom)	college_2
SELECT student.name FROM student WHERE student.id NOT IN (SELECT takes.id FROM takes JOIN course ON takes.course_id = course.course_id WHERE course.dept_name = 'Biology')	college_2
SELECT student.name FROM student WHERE student.id NOT IN (SELECT takes.id FROM takes JOIN course ON takes.course_id = course.course_id WHERE course.dept_name = 'Biology')	college_2
SELECT COUNT( DISTINCT student.id ) , COUNT( DISTINCT instructor.id ) , instructor.dept_name FROM department JOIN student ON department.dept_name = student.dept_name JOIN instructor ON department.dept_name = instructor.dept_name GROUP BY instructor.dept_name	college_2
SELECT COUNT( DISTINCT student.id ) , COUNT( DISTINCT instructor.id ) , instructor.dept_name FROM department JOIN student ON department.dept_name = student.dept_name JOIN instructor ON department.dept_name = instructor.dept_name GROUP BY instructor.dept_name	college_2
course , course	college_2
course , course	college_2
SELECT instructor.name , instructor.salary FROM instructor WHERE instructor.salary<(SELECT AVG( instructor.salary ) FROM instructor WHERE instructor.dept_name = 'Physics')	college_2
SELECT instructor.name , instructor.salary FROM instructor WHERE instructor.salary<(SELECT AVG( instructor.salary ) FROM instructor WHERE instructor.dept_name = 'Physics')	college_2
SELECT student.name FROM course JOIN takes ON course.course_id = takes.course_id JOIN student ON takes.id = student.id WHERE course.dept_name = 'Statistics'	college_2
SELECT student.name FROM course JOIN takes ON course.course_id = takes.course_id JOIN student ON takes.id = student.id WHERE course.dept_name = 'Statistics'	college_2
SELECT section.building , section.room_number , section.semester , section.year FROM course JOIN section ON course.course_id = section.course_id WHERE course.dept_name = 'Psychology' ORDER BY course.title ASC	college_2
SELECT section.building , section.room_number , section.semester , section.year FROM course JOIN section ON course.course_id = section.course_id WHERE course.dept_name = 'Psychology' ORDER BY course.title ASC	college_2
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'computer science'	college_2
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'Comp. Sci.'	college_2
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'Comp. Sci.' AND instructor.salary > 80000	college_2
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'Comp. Sci.' AND instructor.salary > 80000	college_2
SELECT instructor.name , teaches.course_id FROM instructor JOIN teaches ON instructor.id = teaches.id	college_2
SELECT instructor.name , teaches.course_id FROM instructor JOIN teaches ON instructor.id = teaches.id	college_2
SELECT instructor.name , teaches.course_id FROM instructor JOIN teaches ON instructor.id = teaches.id WHERE instructor.dept_name = 'Art'	college_2
SELECT instructor.name , teaches.course_id FROM instructor JOIN teaches ON instructor.id = teaches.id WHERE instructor.dept_name = 'Art'	college_2
SELECT instructor.name FROM instructor WHERE instructor.name LIKE '%dar%'	college_2
SELECT instructor.name FROM instructor WHERE instructor.name LIKE '%dar%'	college_2
SELECT DISTINCT instructor.name FROM instructor ORDER BY instructor.name ASC	college_2
SELECT DISTINCT instructor.name FROM instructor ORDER BY instructor.name ASC	college_2
SELECT section.course_id FROM section WHERE section.semester = 'Fall' AND section.year = 2009 UNION SELECT section.course_id FROM section WHERE section.semester = 'Spring' AND section.year = 2010	college_2
SELECT section.course_id FROM section WHERE section.semester = 'Fall' AND section.year = 2009 UNION SELECT section.course_id FROM section WHERE section.semester = 'Spring' AND section.year = 2010	college_2
SELECT section.course_id FROM section WHERE section.semester = 'Fall' AND section.year = 2009 INTERSECT SELECT section.course_id FROM section WHERE section.semester = 'Spring' AND section.year = 2010	college_2
SELECT section.course_id FROM section WHERE section.semester = 'Fall' AND section.year = 2009 INTERSECT SELECT section.course_id FROM section WHERE section.semester = 'Spring' AND section.year = 2010	college_2
SELECT section.course_id FROM section WHERE section.semester = 'Fall' AND section.year = 2009 EXCEPT SELECT section.course_id FROM section WHERE section.semester = 'Spring' AND section.year = 2010	college_2
SELECT section.course_id FROM section WHERE section.semester = 'Fall' AND section.year = 2009 EXCEPT SELECT section.course_id FROM section WHERE section.semester = 'Spring' AND section.year = 2010	college_2
SELECT DISTINCT instructor.salary FROM instructor WHERE instructor.salary<(SELECT MAX( instructor.salary ) FROM instructor)	college_2
SELECT DISTINCT instructor.salary FROM instructor WHERE instructor.salary<(SELECT MAX( instructor.salary ) FROM instructor)	college_2
SELECT COUNT( DISTINCT teaches.id ) FROM teaches WHERE teaches.semester = 'Spring' AND teaches.year = 2010	college_2
SELECT COUNT( DISTINCT teaches.id ) FROM teaches WHERE teaches.semester = 'Spring' AND teaches.year = 2010	college_2
SELECT instructor.dept_name , AVG( instructor.salary ) FROM instructor GROUP BY instructor.dept_name HAVING AVG( instructor.salary ) > 42000	college_2
SELECT instructor.dept_name , AVG( instructor.salary ) FROM instructor GROUP BY instructor.dept_name HAVING AVG( instructor.salary ) > 42000	college_2
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT MIN( instructor.salary ) FROM instructor WHERE instructor.dept_name = 'Biology')	college_2
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT MIN( instructor.salary ) FROM instructor WHERE instructor.dept_name = 'Biology')	college_2
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT MAX( instructor.salary ) FROM instructor WHERE instructor.dept_name = 'Biology')	college_2
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT MAX( instructor.salary ) FROM instructor WHERE instructor.dept_name = 'Biology')	college_2
SELECT COUNT( * ) FROM debate	debate
SELECT debate.venue FROM debate ORDER BY debate.num_of_audience ASC	debate
SELECT debate.date , debate.venue FROM debate	debate
SELECT debate.date FROM debate WHERE debate.num_of_audience > 150	debate
SELECT people.name FROM people WHERE people.age = 35 OR people.age = 36	debate
SELECT people.party FROM people ORDER BY people.age ASC LIMIT 1	debate
SELECT people.party , COUNT( * ) FROM people GROUP BY people.party	debate
SELECT people.party FROM people GROUP BY people.party ORDER BY COUNT( * ) DESC LIMIT 1	debate
SELECT DISTINCT debate.venue FROM debate	debate
SELECT people.name , debate.date , debate.venue FROM debate_people JOIN debate ON debate_people.debate_id = debate.debate_id JOIN people ON debate_people.affirmative = people.people_id	debate
SELECT people.name , debate.date , debate.venue FROM debate_people JOIN debate ON debate_people.debate_id = debate.debate_id JOIN people ON debate_people.negative = people.people_id ORDER BY people.name ASC	debate
SELECT people.name FROM debate_people JOIN debate ON debate_people.debate_id = debate.debate_id JOIN people ON debate_people.affirmative = people.people_id WHERE debate.num_of_audience > 200	debate
SELECT people.name , COUNT( * ) FROM debate_people JOIN people ON debate_people.affirmative = people.people_id GROUP BY people.name	debate
SELECT people.name FROM debate_people JOIN people ON debate_people.negative = people.people_id GROUP BY people.name HAVING COUNT( * ) >= 2	debate
SELECT people.name FROM people WHERE people.people_id NOT IN (SELECT debate_people.affirmative FROM debate_people)	debate
SELECT customers.customer_details FROM customers ORDER BY customers.customer_details ASC	insurance_and_eClaims
SELECT customers.customer_details FROM customers ORDER BY customers.customer_details ASC	insurance_and_eClaims
SELECT policies.policy_type_code FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE customers.customer_details = 'Dayana Robel'	insurance_and_eClaims
SELECT policies.policy_type_code FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE customers.customer_details = 'Dayana Robel'	insurance_and_eClaims
SELECT policies.policy_type_code FROM policies GROUP BY policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_and_eClaims
SELECT policies.policy_type_code FROM policies GROUP BY policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_and_eClaims
SELECT policies.policy_type_code FROM policies GROUP BY policies.policy_type_code HAVING COUNT( * ) > 2	insurance_and_eClaims
SELECT policies.policy_type_code FROM policies GROUP BY policies.policy_type_code HAVING COUNT( * ) > 2	insurance_and_eClaims
SELECT SUM( claim_headers.amount_piad ) , AVG( claim_headers.amount_piad ) FROM claim_headers	insurance_and_eClaims
SELECT SUM( claim_headers.amount_piad ) , AVG( claim_headers.amount_piad ) FROM claim_headers	insurance_and_eClaims
SELECT SUM( claim_headers.amount_claimed ) FROM claim_headers JOIN claims_documents ON claim_headers.claim_header_id = claims_documents.claim_id WHERE claims_documents.created_date = (SELECT claims_documents.created_date FROM claims_documents ORDER BY claims_documents.created_date ASC LIMIT 1)	insurance_and_eClaims
SELECT SUM( claim_headers.amount_claimed ) FROM claim_headers JOIN claims_documents ON claim_headers.claim_header_id = claims_documents.claim_id WHERE claims_documents.created_date = (SELECT claims_documents.created_date FROM claims_documents ORDER BY claims_documents.created_date ASC LIMIT 1)	insurance_and_eClaims
SELECT customers.customer_details FROM claim_headers JOIN policies ON claim_headers.policy_id = policies.policy_id JOIN customers ON policies.customer_id = customers.customer_id WHERE claim_headers.amount_claimed = (SELECT MAX( claim_headers.amount_claimed ) FROM claim_headers)	insurance_and_eClaims
SELECT customers.customer_details FROM claim_headers JOIN policies ON claim_headers.policy_id = policies.policy_id JOIN customers ON policies.customer_id = customers.customer_id WHERE claim_headers.amount_claimed = (SELECT MAX( claim_headers.amount_claimed ) FROM claim_headers)	insurance_and_eClaims
SELECT customers.customer_details FROM claim_headers JOIN policies ON claim_headers.policy_id = policies.policy_id JOIN customers ON policies.customer_id = customers.customer_id WHERE claim_headers.amount_piad = (SELECT MIN( claim_headers.amount_piad ) FROM claim_headers)	insurance_and_eClaims
SELECT customers.customer_details FROM claim_headers JOIN policies ON claim_headers.policy_id = policies.policy_id JOIN customers ON policies.customer_id = customers.customer_id WHERE claim_headers.amount_piad = (SELECT MIN( claim_headers.amount_piad ) FROM claim_headers)	insurance_and_eClaims
SELECT customers.customer_details FROM customers EXCEPT SELECT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id	insurance_and_eClaims
SELECT customers.customer_details FROM customers EXCEPT SELECT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id	insurance_and_eClaims
SELECT COUNT( * ) FROM claims_processing_stages	insurance_and_eClaims
SELECT COUNT( * ) FROM claims_processing_stages	insurance_and_eClaims
SELECT claims_processing_stages.claim_status_name FROM claims_processing JOIN claims_processing_stages ON claims_processing.claim_stage_id = claims_processing_stages.claim_stage_id GROUP BY claims_processing.claim_stage_id ORDER BY COUNT( * ) DESC LIMIT 1	insurance_and_eClaims
SELECT claims_processing_stages.claim_status_name FROM claims_processing JOIN claims_processing_stages ON claims_processing.claim_stage_id = claims_processing_stages.claim_stage_id GROUP BY claims_processing.claim_stage_id ORDER BY COUNT( * ) DESC LIMIT 1	insurance_and_eClaims
SELECT customers.customer_details FROM customers WHERE customers.customer_details LIKE '%Diana%'	insurance_and_eClaims
SELECT customers.customer_details FROM customers WHERE customers.customer_details LIKE '%Diana%'	insurance_and_eClaims
SELECT DISTINCT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.policy_type_code = 'deputy'	insurance_and_eClaims
SELECT DISTINCT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.policy_type_code = 'Deputy'	insurance_and_eClaims
SELECT DISTINCT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.policy_type_code = 'deputy' OR policies.policy_type_code = 'uniform'	insurance_and_eClaims
SELECT DISTINCT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.policy_type_code = 'Deputy' OR policies.policy_type_code = 'Uniform'	insurance_and_eClaims
SELECT customers.customer_details FROM customers UNION SELECT staff.staff_details FROM staff	insurance_and_eClaims
SELECT customers.customer_details FROM customers UNION SELECT staff.staff_details FROM staff	insurance_and_eClaims
SELECT policies.policy_type_code , COUNT( * ) FROM policies GROUP BY policies.policy_type_code	insurance_and_eClaims
SELECT policies.policy_type_code , COUNT( * ) FROM policies GROUP BY policies.policy_type_code	insurance_and_eClaims
SELECT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id GROUP BY customers.customer_details ORDER BY COUNT( * ) DESC LIMIT 1	insurance_and_eClaims
SELECT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id GROUP BY customers.customer_details ORDER BY COUNT( * ) DESC LIMIT 1	insurance_and_eClaims
SELECT claims_processing_stages.claim_status_description FROM claims_processing_stages WHERE claims_processing_stages.claim_status_name = 'Open'	insurance_and_eClaims
SELECT claims_processing_stages.claim_status_description FROM claims_processing_stages WHERE claims_processing_stages.claim_status_name = 'Open'	insurance_and_eClaims
SELECT COUNT( DISTINCT claims_processing.claim_outcome_code ) FROM claims_processing	insurance_and_eClaims
SELECT COUNT( DISTINCT claims_processing.claim_outcome_code ) FROM claims_processing	insurance_and_eClaims
SELECT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.start_date = (SELECT MAX( policies.start_date ) FROM policies)	insurance_and_eClaims
SELECT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.start_date = (SELECT MAX( policies.start_date ) FROM policies)	insurance_and_eClaims
SELECT COUNT( * ) FROM accounts	customers_and_invoices
SELECT COUNT( * ) FROM accounts	customers_and_invoices
SELECT COUNT( DISTINCT accounts.customer_id ) FROM accounts	customers_and_invoices
SELECT COUNT( DISTINCT accounts.customer_id ) FROM accounts	customers_and_invoices
SELECT accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details FROM accounts	customers_and_invoices
SELECT accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details FROM accounts	customers_and_invoices
SELECT accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan'	customers_and_invoices
SELECT accounts.account_id , accounts.date_account_opened , accounts.account_name , accounts.other_account_details FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan'	customers_and_invoices
SELECT accounts.account_name , accounts.other_account_details FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan' AND customers.customer_last_name = 'Keeling'	customers_and_invoices
SELECT accounts.account_name , accounts.other_account_details FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan' AND customers.customer_last_name = 'Keeling'	customers_and_invoices
SELECT customers.customer_first_name , customers.customer_last_name FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE accounts.account_name = '900'	customers_and_invoices
SELECT customers.customer_first_name , customers.customer_last_name FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id WHERE accounts.account_name = '900'	customers_and_invoices
SELECT COUNT( * ) FROM customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM accounts)	customers_and_invoices
SELECT COUNT( * ) FROM customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM accounts)	customers_and_invoices
SELECT DISTINCT customers.customer_first_name , customers.customer_last_name , customers.phone_number FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id	customers_and_invoices
SELECT DISTINCT customers.customer_first_name , customers.customer_last_name , customers.phone_number FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id	customers_and_invoices
SELECT customers.customer_id FROM customers EXCEPT SELECT accounts.customer_id FROM accounts	customers_and_invoices
SELECT customers.customer_id FROM customers EXCEPT SELECT accounts.customer_id FROM accounts	customers_and_invoices
SELECT COUNT( * ) , accounts.customer_id FROM accounts GROUP BY accounts.customer_id	customers_and_invoices
SELECT COUNT( * ) , accounts.customer_id FROM accounts GROUP BY accounts.customer_id	customers_and_invoices
SELECT accounts.customer_id , customers.customer_first_name , customers.customer_last_name FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT accounts.customer_id , customers.customer_first_name , customers.customer_last_name FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT accounts.customer_id , customers.customer_first_name , customers.customer_last_name , COUNT( * ) FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id	customers_and_invoices
SELECT accounts.customer_id , customers.customer_first_name , customers.customer_last_name , COUNT( * ) FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id	customers_and_invoices
SELECT customers.customer_first_name , accounts.customer_id FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id HAVING COUNT( * ) >= 2	customers_and_invoices
SELECT customers.customer_first_name , accounts.customer_id FROM accounts JOIN customers ON accounts.customer_id = customers.customer_id GROUP BY accounts.customer_id HAVING COUNT( * ) >= 2	customers_and_invoices
SELECT COUNT( * ) FROM customers	customers_and_invoices
SELECT COUNT( * ) FROM customers	customers_and_invoices
SELECT customers.gender , COUNT( * ) FROM customers GROUP BY customers.gender	customers_and_invoices
SELECT customers.gender , COUNT( * ) FROM customers GROUP BY customers.gender	customers_and_invoices
SELECT COUNT( * ) FROM financial_transactions	customers_and_invoices
SELECT COUNT( * ) FROM financial_transactions	customers_and_invoices
SELECT COUNT( * ) , financial_transactions.account_id FROM financial_transactions	customers_and_invoices
SELECT COUNT( * ) , financial_transactions.account_id FROM financial_transactions	customers_and_invoices
SELECT COUNT( * ) FROM financial_transactions JOIN accounts ON financial_transactions.account_id = accounts.account_id WHERE accounts.account_name = '337'	customers_and_invoices
SELECT COUNT( * ) FROM financial_transactions JOIN accounts ON financial_transactions.account_id = accounts.account_id WHERE accounts.account_name = '337'	customers_and_invoices
SELECT AVG( financial_transactions.transaction_amount ) , MIN( financial_transactions.transaction_amount ) , MAX( financial_transactions.transaction_amount ) , SUM( financial_transactions.transaction_amount ) FROM financial_transactions	customers_and_invoices
SELECT AVG( financial_transactions.transaction_amount ) , MIN( financial_transactions.transaction_amount ) , MAX( financial_transactions.transaction_amount ) , SUM( financial_transactions.transaction_amount ) FROM financial_transactions	customers_and_invoices
SELECT financial_transactions.transaction_id FROM financial_transactions WHERE financial_transactions.transaction_amount > (SELECT AVG( financial_transactions.transaction_amount ) FROM financial_transactions)	customers_and_invoices
SELECT financial_transactions.transaction_id FROM financial_transactions WHERE financial_transactions.transaction_amount > (SELECT AVG( financial_transactions.transaction_amount ) FROM financial_transactions)	customers_and_invoices
SELECT financial_transactions.transaction_type , SUM( financial_transactions.transaction_amount ) FROM financial_transactions GROUP BY financial_transactions.transaction_type	customers_and_invoices
SELECT financial_transactions.transaction_type , SUM( financial_transactions.transaction_amount ) FROM financial_transactions GROUP BY financial_transactions.transaction_type	customers_and_invoices
SELECT accounts.account_name , financial_transactions.account_id , COUNT( * ) FROM financial_transactions JOIN accounts ON financial_transactions.account_id = accounts.account_id GROUP BY financial_transactions.account_id	customers_and_invoices
SELECT accounts.account_name , financial_transactions.account_id , COUNT( * ) FROM financial_transactions JOIN accounts ON financial_transactions.account_id = accounts.account_id GROUP BY financial_transactions.account_id	customers_and_invoices
SELECT financial_transactions.account_id FROM financial_transactions GROUP BY financial_transactions.account_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT financial_transactions.account_id FROM financial_transactions GROUP BY financial_transactions.account_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT financial_transactions.account_id , accounts.account_name FROM financial_transactions JOIN accounts ON financial_transactions.account_id = accounts.account_id GROUP BY financial_transactions.account_id HAVING COUNT( * ) >= 4	customers_and_invoices
SELECT financial_transactions.account_id , accounts.account_name FROM financial_transactions JOIN accounts ON financial_transactions.account_id = accounts.account_id GROUP BY financial_transactions.account_id HAVING COUNT( * ) >= 4	customers_and_invoices
SELECT DISTINCT products.product_color FROM products	customers_and_invoices
SELECT DISTINCT products.product_color FROM products	customers_and_invoices
SELECT DISTINCT products.product_color FROM products	customers_and_invoices
SELECT DISTINCT products.product_color FROM products	customers_and_invoices
SELECT financial_transactions.invoice_number , COUNT( * ) FROM financial_transactions GROUP BY financial_transactions.invoice_number	customers_and_invoices
SELECT financial_transactions.invoice_number , COUNT( * ) FROM financial_transactions GROUP BY financial_transactions.invoice_number	customers_and_invoices
SELECT invoices.invoice_number , invoices.invoice_date FROM financial_transactions JOIN invoices ON financial_transactions.invoice_number = invoices.invoice_number GROUP BY financial_transactions.invoice_number ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT invoices.invoice_number , invoices.invoice_date FROM financial_transactions JOIN invoices ON financial_transactions.invoice_number = invoices.invoice_number GROUP BY financial_transactions.invoice_number ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT COUNT( * ) FROM invoices	customers_and_invoices
SELECT COUNT( * ) FROM invoices	customers_and_invoices
SELECT invoices.invoice_date , invoices.order_id , orders.order_details FROM invoices JOIN orders ON invoices.order_id = orders.order_id	customers_and_invoices
SELECT invoices.invoice_date , invoices.order_id , orders.order_details FROM invoices JOIN orders ON invoices.order_id = orders.order_id	customers_and_invoices
SELECT invoices.order_id , COUNT( * ) FROM invoices GROUP BY invoices.order_id	customers_and_invoices
SELECT invoices.order_id , COUNT( * ) FROM invoices GROUP BY invoices.order_id	customers_and_invoices
SELECT orders.order_id , orders.order_details FROM invoices JOIN orders ON invoices.order_id = orders.order_id GROUP BY orders.order_id HAVING COUNT( * ) > 2	customers_and_invoices
SELECT orders.order_id , orders.order_details FROM invoices JOIN orders ON invoices.order_id = orders.order_id HAVING COUNT( * ) > 2	customers_and_invoices
SELECT customers.customer_last_name , orders.customer_id , customers.phone_number FROM orders JOIN customers ON orders.customer_id = customers.customer_id GROUP BY orders.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT customers.customer_last_name , orders.customer_id , customers.phone_number FROM orders JOIN customers ON orders.customer_id = customers.customer_id GROUP BY orders.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_invoices
SELECT products.product_color FROM products EXCEPT SELECT products.product_color FROM products JOIN order_items ON products.product_id = order_items.product_id	customers_and_invoices
SELECT products.parent_product_id FROM products EXCEPT SELECT products.parent_product_id FROM products JOIN order_items ON products.product_id = order_items.product_id	customers_and_invoices
SELECT products.product_name , SUM( order_items.product_quantity ) FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_name	customers_and_invoices
SELECT products.product_color , SUM( order_items.product_quantity ) FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_color	customers_and_invoices
SELECT order_items.order_id , COUNT( * ) FROM order_items GROUP BY order_items.order_id	customers_and_invoices
SELECT order_items.order_id , COUNT( * ) FROM order_items GROUP BY order_items.order_id	customers_and_invoices
SELECT order_items.product_id , COUNT( DISTINCT order_items.order_id ) FROM order_items GROUP BY order_items.product_id	customers_and_invoices
SELECT order_items.product_id , COUNT( DISTINCT order_items.order_id ) FROM order_items GROUP BY order_items.product_id	customers_and_invoices
SELECT products.product_color , COUNT( * ) FROM order_items JOIN products ON order_items.product_id = products.product_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY products.product_color	customers_and_invoices
SELECT products.product_color , COUNT( * ) FROM order_items JOIN products ON order_items.product_id = products.product_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY products.product_color	customers_and_invoices
SELECT order_items.order_id , COUNT( DISTINCT order_items.product_id ) FROM order_items GROUP BY order_items.order_id	customers_and_invoices
SELECT order_items.order_id , COUNT( DISTINCT order_items.product_id ) FROM order_items GROUP BY order_items.order_id	customers_and_invoices
SELECT order_items.order_id , SUM( order_items.product_quantity ) FROM order_items GROUP BY order_items.order_id	customers_and_invoices
SELECT order_items.order_id , SUM( order_items.product_quantity ) FROM order_items GROUP BY order_items.order_id	customers_and_invoices
SELECT COUNT( * ) FROM products WHERE products.product_id NOT IN (SELECT order_items.product_id FROM order_items)	customers_and_invoices
SELECT COUNT( * ) FROM products WHERE products.product_id NOT IN (SELECT order_items.product_id FROM order_items)	customers_and_invoices
SELECT COUNT( * ) FROM church WHERE church.open_date<1850	wedding
SELECT church.name , church.open_date , church.organized_by FROM church	wedding
SELECT church.name FROM church ORDER BY church.open_date DESC	wedding
SELECT church.open_date FROM church GROUP BY church.open_date HAVING COUNT( * ) >= 2	wedding
SELECT church.organized_by , church.name FROM church WHERE church.open_date BETWEEN 1830 and 1840	wedding
SELECT church.open_date , COUNT( * ) FROM church GROUP BY church.open_date	wedding
SELECT church.name , church.open_date FROM church ORDER BY church.open_date DESC LIMIT 3	wedding
SELECT COUNT( * ) FROM people WHERE people.is_male = 'f' AND people.age > 30	wedding
SELECT people.country FROM people WHERE people.age<25 INTERSECT SELECT people.country FROM people WHERE people.age > 30	wedding
SELECT MIN( people.age ) , MAX( people.age ) , AVG( people.age ) FROM people	wedding
SELECT people.name , people.country FROM people WHERE people.age<(SELECT AVG( people.age ) FROM people)	wedding
SELECT people.name , people.name FROM wedding JOIN people ON wedding.male_id = people.people_id JOIN wedding ON wedding.female_id = people.people_id WHERE wedding.year > 2014	wedding
SELECT people.name , people.age FROM people WHERE people.is_male = (SELECT wedding.male_id FROM wedding) AND people.people_id NOT IN (SELECT wedding.male_id FROM wedding)	wedding
SELECT church.name FROM church EXCEPT SELECT church.name FROM church JOIN wedding ON church.church_id = wedding.church_id WHERE wedding.year = 2015	wedding
SELECT church.name FROM church JOIN wedding ON church.church_id = wedding.church_id GROUP BY church.church_id HAVING COUNT( * ) >= 2	wedding
SELECT people.name FROM wedding JOIN people ON wedding.female_id = people.people_id WHERE wedding.year = 2016 AND people.is_male = 'f' AND people.country = 'Canada'	wedding
SELECT COUNT( * ) FROM wedding WHERE wedding.year = 2016	wedding
SELECT church.name FROM wedding JOIN people ON wedding.female_id = people.people_id JOIN wedding ON wedding.male_id = people.people_id JOIN church ON wedding.church_id = church.church_id WHERE people.age > 30	wedding
SELECT people.country , COUNT( * ) FROM people GROUP BY people.country	wedding
SELECT COUNT( DISTINCT wedding.church_id ) FROM wedding WHERE wedding.year = 2016	wedding
SELECT COUNT( * ) FROM artist	theme_gallery
SELECT COUNT( * ) FROM artist	theme_gallery
SELECT artist.name , artist.age , artist.country FROM artist ORDER BY artist.year_join ASC	theme_gallery
SELECT artist.name , artist.age , artist.country FROM artist ORDER BY artist.year_join ASC	theme_gallery
SELECT DISTINCT artist.country FROM artist	theme_gallery
SELECT DISTINCT artist.country FROM artist	theme_gallery
SELECT artist.name , artist.year_join FROM artist WHERE artist.country != 'United States'	theme_gallery
SELECT artist.name , artist.year_join FROM artist WHERE artist.country != 'United States'	theme_gallery
SELECT COUNT( * ) FROM artist WHERE artist.age > 46 AND artist.year_join > 1990	theme_gallery
SELECT COUNT( * ) FROM artist WHERE artist.age > 46 AND artist.year_join > 1990	theme_gallery
SELECT AVG( artist.age ) , MIN( artist.age ) FROM artist WHERE artist.country = 'United States'	theme_gallery
SELECT AVG( artist.age ) , MIN( artist.age ) FROM artist WHERE artist.country = 'United States'	theme_gallery
SELECT artist.name FROM artist ORDER BY artist.year_join DESC LIMIT 1	theme_gallery
SELECT artist.name FROM artist ORDER BY artist.year_join DESC LIMIT 1	theme_gallery
SELECT COUNT( * ) FROM exhibition WHERE exhibition.year >= 2005	theme_gallery
SELECT COUNT( * ) FROM exhibition WHERE exhibition.year >= 2005	theme_gallery
SELECT exhibition.theme , exhibition.year FROM exhibition WHERE exhibition.ticket_price<15	theme_gallery
SELECT exhibition.theme , exhibition.year FROM exhibition WHERE exhibition.ticket_price<15	theme_gallery
SELECT artist.name , COUNT( * ) FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id GROUP BY exhibition.artist_id	theme_gallery
SELECT artist.name , COUNT( * ) FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id GROUP BY exhibition.artist_id	theme_gallery
SELECT artist.name , artist.country FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id GROUP BY exhibition.artist_id ORDER BY COUNT( * ) DESC LIMIT 1	theme_gallery
SELECT artist.name , artist.country FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id GROUP BY exhibition.artist_id ORDER BY COUNT( * ) DESC LIMIT 1	theme_gallery
SELECT artist.name FROM artist WHERE artist.artist_id NOT IN (SELECT exhibition.artist_id FROM exhibition)	theme_gallery
SELECT artist.name FROM artist WHERE artist.artist_id NOT IN (SELECT exhibition.artist_id FROM exhibition)	theme_gallery
SELECT exhibition.theme , artist.name FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id WHERE exhibition.ticket_price > (SELECT AVG( exhibition.ticket_price ) FROM exhibition)	theme_gallery
SELECT exhibition.theme , artist.name FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id WHERE exhibition.ticket_price > (SELECT AVG( exhibition.ticket_price ) FROM exhibition)	theme_gallery
SELECT AVG( exhibition.ticket_price ) , MIN( exhibition.ticket_price ) , MAX( exhibition.ticket_price ) FROM exhibition WHERE exhibition.year<2009	theme_gallery
SELECT AVG( exhibition.ticket_price ) , MIN( exhibition.ticket_price ) , MAX( exhibition.ticket_price ) FROM exhibition WHERE exhibition.year<2009	theme_gallery
SELECT exhibition.theme , exhibition.year FROM exhibition ORDER BY exhibition.ticket_price DESC	theme_gallery
SELECT exhibition.theme , exhibition.year FROM exhibition ORDER BY exhibition.ticket_price DESC	theme_gallery
SELECT exhibition.theme , exhibition_record.date , exhibition_record.attendance FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition.year = 2004	theme_gallery
SELECT exhibition.theme , exhibition_record.date , exhibition_record.attendance FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition.year = 2004	theme_gallery
SELECT artist.name FROM artist EXCEPT SELECT artist.name FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id WHERE exhibition.year = 2004	theme_gallery
SELECT artist.name FROM artist EXCEPT SELECT artist.name FROM exhibition JOIN artist ON exhibition.artist_id = artist.artist_id WHERE exhibition.year = 2004	theme_gallery
SELECT exhibition.theme FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition_record.attendance<100 INTERSECT SELECT exhibition.theme FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition_record.attendance > 500	theme_gallery
SELECT exhibition.theme FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition_record.attendance<100 INTERSECT SELECT exhibition.theme FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition_record.attendance > 500	theme_gallery
SELECT COUNT( * ) FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition_record.attendance > 100 OR exhibition.ticket_price<10	theme_gallery
SELECT COUNT( * ) FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id WHERE exhibition_record.attendance > 100 OR exhibition.ticket_price<10	theme_gallery
SELECT artist.name FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id JOIN artist ON artist.artist_id = exhibition.artist_id GROUP BY artist.artist_id HAVING AVG( exhibition_record.attendance ) > 200	theme_gallery
SELECT artist.name FROM exhibition_record JOIN exhibition ON exhibition_record.exhibition_id = exhibition.exhibition_id JOIN artist ON artist.artist_id = exhibition.artist_id GROUP BY artist.artist_id HAVING AVG( exhibition_record.attendance ) > 200	theme_gallery
SELECT item.i_id FROM item WHERE item.title = 'orange'	epinions_1
SELECT * FROM item	epinions_1
SELECT COUNT( * ) FROM review	epinions_1
SELECT COUNT( * ) FROM useracct	epinions_1
SELECT AVG( review.rating ) , MAX( review.rating ) FROM review	epinions_1
SELECT MIN( review.rank ) FROM review	epinions_1
SELECT COUNT( DISTINCT review.u_id ) FROM review	epinions_1
SELECT COUNT( DISTINCT review.i_id ) FROM review	epinions_1
SELECT COUNT( * ) FROM item WHERE item.i_id NOT IN (SELECT review.i_id FROM review)	epinions_1
SELECT useracct.name FROM useracct WHERE useracct.u_id NOT IN (SELECT review.u_id FROM review)	epinions_1
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating = 10	epinions_1
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating > (SELECT AVG( review.rating ) FROM review)	epinions_1
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating<5	epinions_1
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating > 8 INTERSECT SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating<5	epinions_1
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rank > 3 INTERSECT SELECT item.title FROM item JOIN review ON item.i_id = review.i_id GROUP BY review.i_id HAVING AVG( review.rating ) > 5	epinions_1
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id GROUP BY review.i_id ORDER BY AVG( review.rating ) ASC LIMIT 1	epinions_1
SELECT item.title FROM item ORDER BY item.title ASC	epinions_1
SELECT useracct.name FROM useracct JOIN review ON useracct.u_id = review.u_id GROUP BY review.u_id ORDER BY COUNT( * ) DESC LIMIT 1	epinions_1
SELECT item.title , item.i_id FROM item JOIN review ON item.i_id = review.i_id GROUP BY review.i_id ORDER BY AVG( review.rating ) DESC LIMIT 1	epinions_1
SELECT item.title , item.i_id FROM item JOIN review ON item.i_id = review.i_id GROUP BY review.i_id ORDER BY AVG( review.rank ) DESC LIMIT 1	epinions_1
SELECT useracct.name , AVG( review.rating ) FROM useracct JOIN review ON useracct.u_id = review.u_id GROUP BY review.u_id	epinions_1
SELECT useracct.name , COUNT( * ) FROM useracct JOIN review ON useracct.u_id = review.u_id GROUP BY review.u_id	epinions_1
SELECT useracct.name FROM useracct JOIN review ON useracct.u_id = review.u_id ORDER BY review.rating DESC LIMIT 1	epinions_1
SELECT useracct.name FROM useracct JOIN trust ON useracct.u_id = trust.source_u_id GROUP BY trust.source_u_id ORDER BY AVG( trust.trust ) DESC LIMIT 1	epinions_1
SELECT useracct.name , AVG( trust.trust ) FROM useracct JOIN trust ON useracct.u_id = trust.target_u_id GROUP BY trust.target_u_id	epinions_1
SELECT useracct.name FROM useracct JOIN trust ON useracct.u_id = trust.target_u_id ORDER BY trust.trust ASC LIMIT 1	epinions_1
SELECT item.title FROM item WHERE item.i_id NOT IN (SELECT review.i_id FROM review)	epinions_1
SELECT useracct.name FROM useracct WHERE useracct.u_id NOT IN (SELECT review.u_id FROM review)	epinions_1
SELECT COUNT( * ) FROM useracct WHERE useracct.u_id NOT IN (SELECT review.u_id FROM review)	epinions_1
SELECT COUNT( * ) FROM item WHERE item.i_id NOT IN (SELECT review.i_id FROM review)	epinions_1
SELECT COUNT( * ) FROM player	riding_club
SELECT player.player_name FROM player ORDER BY player.votes ASC	riding_club
SELECT player.gender , player.occupation FROM player	riding_club
SELECT player.player_name , player.residence FROM player WHERE player.occupation != 'Researcher'	riding_club
SELECT player.sponsor_name FROM player WHERE player.residence = 'Brandon' OR player.residence = 'Birtle'	riding_club
SELECT player.player_name FROM player ORDER BY player.votes DESC LIMIT 1	riding_club
SELECT player.occupation , COUNT( * ) FROM player GROUP BY player.occupation	riding_club
SELECT player.occupation FROM player GROUP BY player.occupation ORDER BY COUNT( * ) DESC LIMIT 1	riding_club
SELECT player.residence FROM player GROUP BY player.residence HAVING COUNT( * ) >= 2	riding_club
SELECT player.player_name , coach.coach_name FROM player_coach JOIN coach ON player_coach.coach_id = coach.coach_id JOIN player ON player_coach.player_id = player.player_id	riding_club
SELECT player.player_name FROM player_coach JOIN coach ON player_coach.coach_id = coach.coach_id JOIN player ON player_coach.player_id = player.player_id WHERE coach.rank = 1	riding_club
SELECT player.player_name , player.gender FROM player_coach JOIN coach ON player_coach.coach_id = coach.coach_id JOIN player ON player_coach.player_id = player.player_id WHERE player_coach.starting_year > 2011	riding_club
SELECT player.player_name , coach.coach_name FROM player_coach JOIN coach ON player_coach.coach_id = coach.coach_id JOIN player ON player_coach.player_id = player.player_id ORDER BY player.votes DESC	riding_club
SELECT player.player_name FROM player WHERE player.player_id NOT IN (SELECT player_coach.player_id FROM player_coach)	riding_club
SELECT player.residence FROM player WHERE player.gender = 'M' INTERSECT SELECT player.residence FROM player WHERE player.gender = 'f'	riding_club
SELECT club.club_id , club.club_name , COUNT( * ) FROM club JOIN coach ON club.club_id = coach.club_id GROUP BY club.club_id	riding_club
SELECT match_result.club_id , match_result.gold FROM match_result JOIN coach ON match_result.club_id = coach.club_id GROUP BY match_result.club_id ORDER BY COUNT( * ) DESC LIMIT 1	riding_club
SELECT COUNT( * ) FROM gymnast	gymnast
SELECT COUNT( * ) FROM gymnast	gymnast
SELECT gymnast.total_points FROM gymnast ORDER BY gymnast.total_points DESC	gymnast
SELECT gymnast.total_points FROM gymnast ORDER BY gymnast.total_points DESC	gymnast
SELECT gymnast.total_points FROM gymnast ORDER BY gymnast.floor_exercise_points DESC	gymnast
SELECT gymnast.total_points FROM gymnast ORDER BY gymnast.floor_exercise_points DESC	gymnast
SELECT AVG( gymnast.horizontal_bar_points ) FROM gymnast	gymnast
SELECT AVG( gymnast.horizontal_bar_points ) FROM gymnast	gymnast
SELECT people.name FROM people ORDER BY people.name ASC	gymnast
SELECT people.name FROM people ORDER BY people.name ASC	gymnast
SELECT people.name FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id	gymnast
SELECT people.name FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id	gymnast
SELECT people.name FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id WHERE people.hometown != 'Santo Domingo'	gymnast
SELECT people.name FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id WHERE people.hometown != 'Santo Domingo'	gymnast
SELECT people.age FROM people ORDER BY people.height DESC LIMIT 1	gymnast
SELECT people.age FROM people ORDER BY people.height DESC LIMIT 1	gymnast
SELECT people.name FROM people ORDER BY people.age DESC LIMIT 5	gymnast
SELECT people.name FROM people ORDER BY people.age DESC LIMIT 5	gymnast
SELECT gymnast.total_points FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id ORDER BY people.age ASC LIMIT 1	gymnast
SELECT gymnast.total_points FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id ORDER BY people.age ASC LIMIT 1	gymnast
SELECT AVG( people.age ) FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id	gymnast
SELECT AVG( people.age ) FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id	gymnast
SELECT DISTINCT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id WHERE gymnast.total_points > 57.5	gymnast
SELECT DISTINCT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id WHERE gymnast.total_points > 57.5	gymnast
SELECT people.hometown , COUNT( * ) FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id GROUP BY people.hometown	gymnast
SELECT people.hometown , COUNT( * ) FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id GROUP BY people.hometown	gymnast
SELECT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id GROUP BY people.hometown ORDER BY COUNT( * ) DESC LIMIT 1	gymnast
SELECT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id GROUP BY people.hometown ORDER BY COUNT( * ) DESC LIMIT 1	gymnast
SELECT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id GROUP BY people.hometown HAVING COUNT( * ) >= 2	gymnast
SELECT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id GROUP BY people.hometown HAVING COUNT( * ) >= 2	gymnast
SELECT people.name FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id ORDER BY people.height ASC	gymnast
SELECT people.name FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id ORDER BY people.height ASC	gymnast
SELECT DISTINCT people.hometown FROM people EXCEPT SELECT DISTINCT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id	gymnast
SELECT DISTINCT people.hometown FROM people EXCEPT SELECT DISTINCT people.hometown FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id	gymnast
SELECT people.hometown FROM people WHERE people.age > 23 INTERSECT SELECT people.hometown FROM people WHERE people.age<20	gymnast
SELECT people.hometown FROM people WHERE people.age > 23 INTERSECT SELECT people.hometown FROM people WHERE people.age<20	gymnast
SELECT COUNT( DISTINCT people.hometown ) FROM people	gymnast
SELECT COUNT( DISTINCT people.hometown ) FROM people	gymnast
SELECT people.age FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id ORDER BY gymnast.total_points DESC	gymnast
SELECT people.age FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id ORDER BY gymnast.total_points DESC	gymnast
SELECT SUM( savings.balance ) FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE accounts.name != 'Brown'	small_bank_1
SELECT SUM( savings.balance ) FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE accounts.name != 'Brown'	small_bank_1
SELECT COUNT( * ) FROM accounts	small_bank_1
SELECT COUNT( * ) FROM accounts	small_bank_1
SELECT SUM( checking.balance ) FROM checking	small_bank_1
SELECT SUM( checking.balance ) FROM checking	small_bank_1
SELECT AVG( checking.balance ) FROM checking	small_bank_1
SELECT AVG( checking.balance ) FROM checking	small_bank_1
SELECT COUNT( * ) FROM savings WHERE savings.balance > (SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT COUNT( * ) FROM savings WHERE savings.balance > (SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT accounts.custid , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE checking.balance<(SELECT MAX( checking.balance ) FROM checking)	small_bank_1
SELECT accounts.custid , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE checking.balance<(SELECT MAX( checking.balance ) FROM checking)	small_bank_1
SELECT checking.balance FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE accounts.name LIKE '%ee%'	small_bank_1
SELECT checking.balance FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE accounts.name LIKE '%ee%'	small_bank_1
SELECT checking.balance , savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid WHERE accounts.name = 'Brown'	small_bank_1
SELECT checking.balance , savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid WHERE accounts.name = 'Brown'	small_bank_1
SELECT accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance > (SELECT AVG( checking.balance ) FROM checking) INTERSECT SELECT accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance<(SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance > (SELECT AVG( checking.balance ) FROM checking) INTERSECT SELECT accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance<(SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance > (SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance > (SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT accounts.name FROM accounts ORDER BY accounts.name ASC	small_bank_1
SELECT accounts.name FROM accounts ORDER BY accounts.name ASC	small_bank_1
SELECT accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid GROUP BY accounts.name ORDER BY SUM( savings.balance ) ASC LIMIT 1	small_bank_1
SELECT accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid GROUP BY accounts.name ORDER BY SUM( savings.balance ) ASC LIMIT 1	small_bank_1
SELECT SUM( checking.balance ) , accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance > (SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT SUM( checking.balance ) , accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance > (SELECT AVG( savings.balance ) FROM savings)	small_bank_1
SELECT checking.balance , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY savings.balance ASC LIMIT 1	small_bank_1
SELECT accounts.name , checking.balance FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY savings.balance ASC LIMIT 1	small_bank_1
SELECT COUNT( * ) , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid GROUP BY accounts.name	small_bank_1
SELECT COUNT( * ) , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid GROUP BY accounts.name	small_bank_1
SELECT SUM( savings.balance ) , accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid GROUP BY accounts.name	small_bank_1
SELECT SUM( savings.balance ) , accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid GROUP BY accounts.name	small_bank_1
SELECT accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE checking.balance<(SELECT AVG( checking.balance ) FROM checking)	small_bank_1
SELECT accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE checking.balance<(SELECT AVG( checking.balance ) FROM checking)	small_bank_1
SELECT savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY checking.balance DESC LIMIT 1	small_bank_1
SELECT savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY checking.balance DESC LIMIT 1	small_bank_1
accounts , checking	small_bank_1
accounts , checking	small_bank_1
SELECT checking.balance , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY savings.balance ASC LIMIT 1	small_bank_1
SELECT checking.balance , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY savings.balance ASC LIMIT 1	small_bank_1
SELECT checking.balance , savings.balance , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid	small_bank_1
SELECT checking.balance , savings.balance , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid	small_bank_1
SELECT accounts.name , checking.balance , savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY SUM( checking.balance ) , savings.balance ASC	small_bank_1
SELECT SUM( checking.balance ) , accounts.name , savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid GROUP BY accounts.name ORDER BY SUM( checking.balance ) DESC	small_bank_1
SELECT accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid WHERE checking.balance > savings.balance	small_bank_1
SELECT accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid WHERE checking.balance > savings.balance	small_bank_1
SELECT SUM( checking.balance ) , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid WHERE savings.balance<savings.balance GROUP BY accounts.name	small_bank_1
SELECT SUM( checking.balance ) , accounts.name FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid GROUP BY accounts.name	small_bank_1
SELECT accounts.name , savings.balance FROM accounts JOIN savings ON accounts.custid = savings.custid ORDER BY savings.balance DESC LIMIT 3	small_bank_1
SELECT accounts.name , savings.balance FROM accounts JOIN savings ON accounts.custid = savings.custid ORDER BY savings.balance DESC LIMIT 3	small_bank_1
SELECT COUNT( * ) FROM browser WHERE browser.market_share >= 5	browser_web
SELECT browser.name FROM browser ORDER BY browser.market_share DESC	browser_web
SELECT browser.id , browser.name , browser.market_share FROM browser	browser_web
SELECT MAX( browser.market_share ) , MIN( browser.market_share ) , AVG( browser.market_share ) FROM browser	browser_web
SELECT browser.id , browser.market_share FROM browser WHERE browser.name = 'Safari'	browser_web
SELECT web_client_accelerator.name , web_client_accelerator.operating_system FROM web_client_accelerator WHERE web_client_accelerator.connection != 'Broadband'	browser_web
SELECT browser.name FROM browser JOIN accelerator_compatible_browser ON browser.id = accelerator_compatible_browser.browser_id JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id WHERE web_client_accelerator.name = 'CProxy' AND accelerator_compatible_browser.compatible_since_year > 1998	browser_web
SELECT web_client_accelerator.id , web_client_accelerator.name FROM accelerator_compatible_browser JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id GROUP BY web_client_accelerator.id HAVING COUNT( * ) >= 2	browser_web
SELECT browser.id , browser.name FROM browser JOIN accelerator_compatible_browser ON browser.id = accelerator_compatible_browser.browser_id GROUP BY browser.id ORDER BY COUNT( * ) DESC LIMIT 1	browser_web
SELECT accelerator_compatible_browser.compatible_since_year FROM accelerator_compatible_browser JOIN browser ON accelerator_compatible_browser.browser_id = browser.id JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id WHERE web_client_accelerator.name = 'CACHEbox' AND browser.name = 'Internet Explorer'	browser_web
SELECT COUNT( DISTINCT web_client_accelerator.client ) FROM web_client_accelerator	browser_web
SELECT COUNT( * ) FROM web_client_accelerator WHERE web_client_accelerator.id NOT IN (SELECT accelerator_compatible_browser.accelerator_id FROM accelerator_compatible_browser)	browser_web
SELECT DISTINCT web_client_accelerator.name FROM accelerator_compatible_browser JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id JOIN browser ON accelerator_compatible_browser.browser_id = browser.id WHERE browser.market_share > 15	browser_web
SELECT browser.name FROM accelerator_compatible_browser JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id JOIN browser ON accelerator_compatible_browser.browser_id = browser.id WHERE web_client_accelerator.name = 'CACHEbox' INTERSECT SELECT browser.name FROM accelerator_compatible_browser JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id JOIN browser ON accelerator_compatible_browser.browser_id = browser.id WHERE web_client_accelerator.name = 'Fasterfox'	browser_web
SELECT web_client_accelerator.name , web_client_accelerator.operating_system FROM web_client_accelerator EXCEPT SELECT web_client_accelerator.name , web_client_accelerator.operating_system FROM accelerator_compatible_browser JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id JOIN browser ON accelerator_compatible_browser.browser_id = browser.id WHERE browser.name = 'Opera'	browser_web
SELECT web_client_accelerator.name FROM web_client_accelerator WHERE web_client_accelerator.name LIKE '%Opera%'	browser_web
SELECT web_client_accelerator.operating_system , COUNT( * ) FROM web_client_accelerator GROUP BY web_client_accelerator.operating_system	browser_web
SELECT browser.name , web_client_accelerator.name FROM accelerator_compatible_browser JOIN browser ON accelerator_compatible_browser.browser_id = browser.id JOIN web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id ORDER BY accelerator_compatible_browser.compatible_since_year DESC	browser_web
SELECT COUNT( * ) FROM wrestler	wrestler
SELECT COUNT( * ) FROM wrestler	wrestler
SELECT wrestler.name FROM wrestler ORDER BY wrestler.days_held DESC	wrestler
SELECT wrestler.name FROM wrestler ORDER BY wrestler.days_held DESC	wrestler
SELECT wrestler.name FROM wrestler ORDER BY wrestler.days_held ASC LIMIT 1	wrestler
SELECT wrestler.name FROM wrestler ORDER BY wrestler.days_held ASC LIMIT 1	wrestler
SELECT DISTINCT wrestler.reign FROM wrestler WHERE wrestler.location != 'Tokyo,Japan'	wrestler
SELECT DISTINCT wrestler.reign FROM wrestler WHERE wrestler.location != 'Tokyo, Japan'	wrestler
SELECT wrestler.name , wrestler.location FROM wrestler	wrestler
SELECT wrestler.name , wrestler.location FROM wrestler	wrestler
SELECT elimination.elimination_move FROM elimination WHERE elimination.team = 'Team Orton'	wrestler
SELECT elimination.elimination_move FROM elimination WHERE elimination.team = 'Team Orton'	wrestler
SELECT wrestler.name , elimination.elimination_move FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id	wrestler
SELECT wrestler.name , elimination.elimination_move FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id	wrestler
SELECT wrestler.name , elimination.team FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id ORDER BY wrestler.days_held DESC	wrestler
SELECT wrestler.name , elimination.team FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id ORDER BY wrestler.days_held DESC	wrestler
SELECT elimination.time FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id ORDER BY wrestler.days_held DESC LIMIT 1	wrestler
SELECT elimination.time FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id ORDER BY wrestler.days_held DESC LIMIT 1	wrestler
SELECT elimination.time FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id WHERE wrestler.days_held > 50	wrestler
SELECT elimination.time FROM elimination JOIN wrestler ON elimination.wrestler_id = wrestler.wrestler_id WHERE wrestler.days_held > 50	wrestler
SELECT elimination.team , COUNT( * ) FROM elimination GROUP BY elimination.team	wrestler
SELECT elimination.team , COUNT( * ) FROM elimination GROUP BY elimination.team	wrestler
SELECT elimination.team FROM elimination GROUP BY elimination.team HAVING COUNT( * ) > 3	wrestler
SELECT elimination.team FROM elimination GROUP BY elimination.team HAVING COUNT( * ) > 3	wrestler
SELECT wrestler.reign , wrestler.days_held FROM wrestler	wrestler
SELECT wrestler.reign , wrestler.days_held FROM wrestler	wrestler
SELECT wrestler.name FROM wrestler WHERE wrestler.days_held<100	wrestler
SELECT wrestler.name FROM wrestler WHERE wrestler.days_held<100	wrestler
SELECT wrestler.reign FROM wrestler GROUP BY wrestler.reign ORDER BY COUNT( * ) DESC LIMIT 1	wrestler
SELECT wrestler.reign FROM wrestler GROUP BY wrestler.reign ORDER BY COUNT( * ) DESC LIMIT 1	wrestler
SELECT wrestler.location FROM wrestler GROUP BY wrestler.location HAVING COUNT( * ) > 2	wrestler
SELECT wrestler.location FROM wrestler GROUP BY wrestler.location HAVING COUNT( * ) > 2	wrestler
SELECT wrestler.name FROM wrestler WHERE wrestler.wrestler_id NOT IN (SELECT elimination.wrestler_id FROM elimination)	wrestler
SELECT wrestler.name FROM wrestler WHERE wrestler.wrestler_id NOT IN (SELECT elimination.wrestler_id FROM elimination)	wrestler
SELECT elimination.team FROM elimination WHERE elimination.eliminated_by = 'Orton' INTERSECT SELECT elimination.team FROM elimination WHERE elimination.eliminated_by = 'Benjamin'	wrestler
SELECT elimination.team FROM elimination WHERE elimination.eliminated_by = 'Orton' INTERSECT SELECT elimination.team FROM elimination WHERE elimination.eliminated_by = 'Benjamin'	wrestler
SELECT COUNT( DISTINCT elimination.team ) FROM elimination	wrestler
SELECT COUNT( DISTINCT elimination.team ) FROM elimination	wrestler
SELECT elimination.time FROM elimination WHERE elimination.eliminated_by = 'Punk' OR elimination.eliminated_by = 'Orton'	wrestler
SELECT elimination.time FROM elimination WHERE elimination.eliminated_by = 'Punk' OR elimination.eliminated_by = 'Orton'	wrestler
SELECT COUNT( * ) FROM school	school_finance
SELECT COUNT( * ) FROM school	school_finance
SELECT school.school_name FROM school ORDER BY school.school_name ASC	school_finance
SELECT school.school_name , school.location , school.mascot FROM school	school_finance
SELECT SUM( school.enrollment ) , AVG( school.enrollment ) FROM school	school_finance
SELECT school.mascot FROM school WHERE school.enrollment > (SELECT AVG( school.enrollment ) FROM school)	school_finance
SELECT school.school_name FROM school ORDER BY school.enrollment ASC LIMIT 1	school_finance
SELECT AVG( school.enrollment ) , MAX( school.enrollment ) , MIN( school.enrollment ) FROM school	school_finance
SELECT school.county , COUNT( * ) , SUM( school.enrollment ) FROM school GROUP BY school.county	school_finance
SELECT COUNT( DISTINCT endowment.donator_name ) FROM endowment JOIN school ON endowment.school_id = school.school_id WHERE school.school_name = 'Glenn'	school_finance
SELECT endowment.donator_name , SUM( endowment.amount ) FROM endowment GROUP BY endowment.donator_name ORDER BY SUM( endowment.amount ) DESC	school_finance
SELECT school.school_name FROM school WHERE school.school_id NOT IN (SELECT endowment.school_id FROM endowment)	school_finance
SELECT school.school_name FROM endowment JOIN school ON endowment.school_id = school.school_id GROUP BY endowment.school_id HAVING SUM( endowment.amount ) <= 10	school_finance
SELECT endowment.donator_name FROM endowment JOIN school ON endowment.school_id = school.school_id WHERE school.school_name = 'Glenn' INTERSECT SELECT endowment.donator_name FROM endowment JOIN school ON endowment.school_id = school.school_id WHERE school.school_name = 'Triton'	school_finance
SELECT endowment.donator_name FROM endowment EXCEPT SELECT endowment.donator_name FROM endowment WHERE endowment.amount<9	school_finance
SELECT endowment.amount , endowment.donator_name FROM endowment ORDER BY endowment.amount DESC LIMIT 1	school_finance
SELECT COUNT( * ) FROM budget WHERE budget.budgeted > 3000 AND budget.year <= 2001	school_finance
SELECT COUNT( * ) FROM budget WHERE budget.budgeted > 3000 AND budget.year <= 2001	school_finance
SELECT school.school_name , budget.budgeted , budget.invested FROM budget JOIN school ON budget.school_id = school.school_id WHERE budget.year >= 2002	school_finance
SELECT DISTINCT endowment.donator_name FROM endowment	school_finance
SELECT COUNT( * ) FROM budget WHERE budget.budgeted<budget.invested	school_finance
SELECT SUM( budget.budgeted ) FROM budget JOIN school ON budget.school_id = school.school_id WHERE school.school_name = 'Glenn'	school_finance
SELECT school.school_name FROM budget JOIN school ON budget.school_id = school.school_id JOIN endowment ON school.school_id = endowment.school_id WHERE SUM( budget.budgeted ) > 100 OR SUM( endowment.amount ) > 10 GROUP BY school.school_name	school_finance
SELECT school.school_name FROM endowment JOIN school ON endowment.school_id = school.school_id WHERE endowment.amount > 8.5 GROUP BY endowment.school_id HAVING COUNT( * ) > 1	school_finance
SELECT * FROM endowment WHERE endowment.amount > 8.5 GROUP BY endowment.school_id HAVING COUNT( * ) > 1	school_finance
SELECT school.school_name , school.mascot , school.ihsaa_football_class FROM school JOIN budget ON school.school_id = budget.school_id WHERE budget.budgeted > 6000 OR budget.year<2003 ORDER BY budget.total_budget_percent_invested , budget.total_budget_percent_budgeted ASC	school_finance
SELECT COUNT( * ) FROM building	protein_institute
SELECT building.name , building.street_address , building.floors FROM building ORDER BY building.floors ASC	protein_institute
SELECT building.name FROM building ORDER BY building.height_feet DESC LIMIT 1	protein_institute
SELECT AVG( building.floors ) , MAX( building.floors ) , MIN( building.floors ) FROM building	protein_institute
SELECT COUNT( * ) FROM building WHERE building.height_feet > (SELECT AVG( building.height_feet ) FROM building) OR building.floors > (SELECT AVG( building.floors ) FROM building)	protein_institute
SELECT building.name FROM building WHERE building.height_feet >= 200 AND building.floors >= 20	protein_institute
SELECT institution.institution , institution.location FROM institution WHERE institution.founded > 1990 AND institution.type = 'Private'	protein_institute
SELECT institution.type , COUNT( * ) , SUM( institution.enrollment ) FROM institution GROUP BY institution.type	protein_institute
SELECT institution.type FROM institution GROUP BY institution.type ORDER BY COUNT( * ) DESC LIMIT 1	protein_institute
SELECT institution.type FROM institution WHERE institution.founded > 1990 AND institution.enrollment >= 1000	protein_institute
SELECT building.name FROM building WHERE building.building_id NOT IN (SELECT institution.building_id FROM institution)	protein_institute
SELECT building.name FROM building EXCEPT SELECT building.name FROM building JOIN institution ON building.building_id = institution.building_id WHERE institution.founded = 2003	protein_institute
SELECT building.name , COUNT( * ) FROM building JOIN institution ON building.building_id = institution.building_id GROUP BY building.building_id	protein_institute
SELECT building.name , building.height_feet FROM building JOIN institution ON building.building_id = institution.building_id WHERE institution.founded > 1880 GROUP BY building.building_id HAVING COUNT( * ) >= 2	protein_institute
SELECT DISTINCT institution.type FROM institution	protein_institute
SELECT institution.institution , COUNT( * ) FROM institution JOIN protein ON institution.institution_id = protein.institution_id GROUP BY institution.institution_id	protein_institute
SELECT COUNT( * ) FROM institution JOIN protein ON institution.institution_id = protein.institution_id WHERE institution.founded > 1880 OR institution.type = 'Private'	protein_institute
SELECT protein.protein_name , institution.institution FROM institution JOIN protein ON institution.institution_id = protein.institution_id	protein_institute
SELECT COUNT( * ) FROM institution JOIN protein ON institution.institution_id = protein.institution_id JOIN institution ON building.building_id = institution.building_id WHERE building.floors >= 20	protein_institute
SELECT COUNT( * ) FROM institution WHERE institution.institution_id NOT IN (SELECT protein.institution_id FROM protein)	protein_institute
SELECT cinema.location FROM cinema EXCEPT SELECT cinema.location FROM cinema WHERE cinema.capacity > 800	cinema
SELECT cinema.location FROM cinema WHERE cinema.openning_year = 2010 INTERSECT SELECT cinema.location FROM cinema WHERE cinema.openning_year = 2011	cinema
SELECT COUNT( * ) FROM cinema	cinema
SELECT COUNT( * ) FROM cinema	cinema
SELECT cinema.name , cinema.openning_year , cinema.capacity FROM cinema	cinema
SELECT cinema.name , cinema.location FROM cinema WHERE cinema.capacity > (SELECT AVG( cinema.capacity ) FROM cinema)	cinema
SELECT DISTINCT cinema.location FROM cinema	cinema
SELECT DISTINCT cinema.location FROM cinema	cinema
SELECT cinema.name , cinema.openning_year FROM cinema ORDER BY cinema.openning_year DESC	cinema
SELECT cinema.name , cinema.location FROM cinema ORDER BY cinema.capacity DESC LIMIT 1	cinema
SELECT AVG( cinema.capacity ) , MIN( cinema.capacity ) , MAX( cinema.capacity ) FROM cinema WHERE cinema.openning_year >= 2011	cinema
SELECT cinema.location , COUNT( * ) FROM cinema GROUP BY cinema.location	cinema
SELECT cinema.location FROM cinema WHERE cinema.openning_year >= 2010 GROUP BY cinema.location ORDER BY COUNT( * ) DESC LIMIT 1	cinema
SELECT cinema.location FROM cinema WHERE cinema.capacity > 300 GROUP BY cinema.location HAVING COUNT( * ) >= 2	cinema
SELECT cinema.location FROM cinema WHERE cinema.capacity > 300 GROUP BY cinema.location HAVING COUNT( * ) >= 2	cinema
SELECT film.title , film.directed_by FROM film	cinema
SELECT film.title , film.directed_by FROM film	cinema
SELECT DISTINCT film.directed_by FROM film	cinema
SELECT DISTINCT film.directed_by FROM film	cinema
SELECT film.directed_by , COUNT( * ) FROM film GROUP BY film.directed_by	cinema
SELECT cinema.name , SUM( schedule.show_times_per_day ) FROM schedule JOIN cinema ON schedule.cinema_id = cinema.cinema_id GROUP BY schedule.cinema_id	cinema
SELECT film.title , MAX( schedule.price ) FROM schedule JOIN film ON schedule.film_id = film.film_id GROUP BY schedule.film_id	cinema
SELECT film.title , MAX( schedule.price ) FROM schedule JOIN film ON schedule.film_id = film.film_id GROUP BY schedule.film_id	cinema
SELECT cinema.name , film.title , schedule.date , schedule.price FROM schedule JOIN film ON schedule.film_id = film.film_id JOIN cinema ON schedule.cinema_id = cinema.cinema_id	cinema
SELECT film.title , film.directed_by FROM film WHERE film.film_id NOT IN (SELECT schedule.film_id FROM schedule)	cinema
SELECT film.directed_by FROM schedule JOIN film ON schedule.film_id = film.film_id GROUP BY film.directed_by ORDER BY SUM( schedule.show_times_per_day ) DESC LIMIT 1	cinema
SELECT cinema.location FROM cinema WHERE cinema.capacity > 300 GROUP BY cinema.location HAVING COUNT( * ) > 1	cinema
SELECT cinema.location FROM cinema WHERE cinema.capacity > 300 GROUP BY cinema.location HAVING COUNT( * ) > 1	cinema
SELECT COUNT( * ) FROM film WHERE film.title LIKE '%Dummy%'	cinema
SELECT COUNT( * ) FROM film WHERE film.title LIKE '%Dummy%'	cinema
SELECT customers.good_or_bad_customer FROM customers JOIN discount_coupons ON customers.coupon_id = discount_coupons.coupon_id WHERE discount_coupons.coupon_amount = 500	products_for_hire
SELECT customers.customer_id , customers.first_name , COUNT( * ) FROM customers JOIN bookings ON customers.customer_id = bookings.customer_id GROUP BY customers.customer_id	products_for_hire
SELECT payments.customer_id , SUM( payments.amount_paid ) FROM payments GROUP BY payments.customer_id ORDER BY SUM( payments.amount_paid ) DESC LIMIT 1	products_for_hire
SELECT bookings.booking_id , bookings.amount_of_refund FROM bookings JOIN payments ON bookings.booking_id = payments.booking_id GROUP BY bookings.booking_id ORDER BY COUNT( * ) DESC LIMIT 1	products_for_hire
SELECT products_booked.product_id FROM products_booked GROUP BY products_booked.product_id HAVING COUNT( * ) = 3	products_for_hire
SELECT products_for_hire.product_description FROM products_booked JOIN products_for_hire ON products_booked.product_id = products_for_hire.product_id WHERE products_booked.booked_amount = 102.76	products_for_hire
SELECT bookings.booking_start_date , bookings.booking_end_date FROM products_for_hire JOIN products_booked ON products_for_hire.product_id = products_booked.product_id JOIN bookings ON products_booked.booking_id = bookings.booking_id WHERE products_for_hire.product_name = 'Book collection A'	products_for_hire
SELECT products_for_hire.product_name FROM view_product_availability JOIN products_for_hire ON view_product_availability.product_id = products_for_hire.product_id WHERE view_product_availability.available_yn = 1	products_for_hire
SELECT COUNT( DISTINCT products_for_hire.product_type_code ) FROM products_for_hire	products_for_hire
SELECT customers.first_name , customers.last_name , customers.gender_mf FROM customers WHERE customers.good_or_bad_customer = 'good' ORDER BY customers.last_name ASC	products_for_hire
SELECT AVG( payments.amount_due ) FROM payments	products_for_hire
SELECT MAX( products_booked.booked_count ) , MIN( products_booked.booked_count ) , AVG( products_booked.booked_count ) FROM products_booked	products_for_hire
SELECT DISTINCT payments.payment_type_code FROM payments	products_for_hire
SELECT products_for_hire.daily_hire_cost FROM products_for_hire WHERE products_for_hire.product_name LIKE '%Book%'	products_for_hire
SELECT COUNT( * ) FROM products_for_hire WHERE products_for_hire.product_id NOT IN (SELECT products_booked.product_id FROM products_booked WHERE products_booked.booked_amount > 200)	products_for_hire
SELECT discount_coupons.coupon_amount FROM discount_coupons JOIN customers ON discount_coupons.coupon_id = customers.coupon_id WHERE customers.good_or_bad_customer = 'good' INTERSECT SELECT discount_coupons.coupon_amount FROM discount_coupons JOIN customers ON discount_coupons.coupon_id = customers.coupon_id WHERE customers.good_or_bad_customer = 'bad'	products_for_hire
SELECT payments.payment_date FROM payments WHERE payments.amount_paid > 300 OR payments.payment_type_code = 'Check'	products_for_hire
SELECT products_for_hire.product_name , products_for_hire.product_description FROM products_for_hire WHERE products_for_hire.product_type_code = 'Cutlery' AND products_for_hire.daily_hire_cost<20	products_for_hire
SELECT COUNT( * ) FROM phone	phone_market
SELECT phone.name FROM phone ORDER BY phone.price ASC	phone_market
SELECT phone.memory_in_g , phone.carrier FROM phone	phone_market
SELECT DISTINCT phone.carrier FROM phone WHERE phone.memory_in_g > 32	phone_market
SELECT phone.name FROM phone WHERE phone.carrier = 'Sprint' OR phone.carrier = 'TMobile'	phone_market
SELECT phone.carrier FROM phone ORDER BY phone.price DESC LIMIT 1	phone_market
SELECT phone.carrier , COUNT( * ) FROM phone GROUP BY phone.carrier	phone_market
SELECT phone.carrier FROM phone GROUP BY phone.carrier ORDER BY COUNT( * ) DESC LIMIT 1	phone_market
SELECT phone.carrier FROM phone WHERE phone.memory_in_g<32 INTERSECT SELECT phone.carrier FROM phone WHERE phone.memory_in_g > 64	phone_market
SELECT phone.name , market.district FROM phone_market JOIN market ON phone_market.market_id = market.market_id JOIN phone ON phone_market.phone_id = phone.phone_id	phone_market
SELECT phone.name , market.district FROM phone_market JOIN market ON phone_market.market_id = market.market_id JOIN phone ON phone_market.phone_id = phone.phone_id ORDER BY market.ranking ASC	phone_market
SELECT phone.name FROM phone_market JOIN market ON phone_market.market_id = market.market_id JOIN phone ON phone_market.phone_id = phone.phone_id WHERE market.num_of_shops > 50	phone_market
SELECT phone.name , SUM( phone_market.num_of_stock ) FROM phone_market JOIN phone ON phone_market.phone_id = phone.phone_id GROUP BY phone.name	phone_market
SELECT phone.name FROM phone_market JOIN phone ON phone_market.phone_id = phone.phone_id GROUP BY phone.name ORDER BY SUM( phone_market.num_of_stock ) DESC HAVING SUM( phone_market.num_of_stock ) >= 2000	phone_market
SELECT phone.name FROM phone WHERE phone.phone_id NOT IN (SELECT phone_market.phone_id FROM phone_market)	phone_market
SELECT COUNT( * ) FROM company	gas_company
SELECT COUNT( * ) FROM company	gas_company
SELECT company.company , company.rank FROM company ORDER BY company.sales_billion DESC	gas_company
SELECT company.company , company.rank FROM company ORDER BY company.sales_billion DESC	gas_company
SELECT company.company , company.main_industry FROM company WHERE company.headquarters != 'USA'	gas_company
SELECT company.company , company.main_industry FROM company WHERE company.headquarters != 'United States'	gas_company
SELECT company.company , company.headquarters FROM company ORDER BY company.market_value DESC	gas_company
SELECT company.company , company.headquarters FROM company ORDER BY company.market_value DESC	gas_company
SELECT MIN( company.market_value ) , MAX( company.market_value ) , AVG( company.market_value ) FROM company	gas_company
SELECT MIN( company.market_value ) , MAX( company.market_value ) , AVG( company.market_value ) FROM company	gas_company
SELECT DISTINCT company.main_industry FROM company	gas_company
SELECT DISTINCT company.main_industry FROM company	gas_company
SELECT company.headquarters , COUNT( * ) FROM company GROUP BY company.headquarters	gas_company
SELECT company.headquarters , COUNT( * ) FROM company GROUP BY company.headquarters	gas_company
SELECT company.main_industry , SUM( company.market_value ) FROM company GROUP BY company.main_industry	gas_company
SELECT company.main_industry , SUM( company.market_value ) FROM company GROUP BY company.main_industry	gas_company
SELECT company.main_industry , COUNT( * ) FROM company GROUP BY company.main_industry ORDER BY SUM( company.market_value ) DESC LIMIT 1	gas_company
SELECT company.main_industry , COUNT( * ) FROM company GROUP BY company.main_industry ORDER BY SUM( company.market_value ) DESC LIMIT 1	gas_company
SELECT company.headquarters FROM company WHERE company.main_industry = 'banking' GROUP BY company.headquarters HAVING COUNT( * ) >= 2	gas_company
SELECT company.headquarters FROM company WHERE company.main_industry = 'banking' GROUP BY company.headquarters HAVING COUNT( * ) >= 2	gas_company
SELECT gas_station.station_id , gas_station.location , gas_station.manager_name FROM gas_station ORDER BY gas_station.open_year ASC	gas_company
SELECT gas_station.station_id , gas_station.location , gas_station.manager_name FROM gas_station ORDER BY gas_station.open_year ASC	gas_company
SELECT COUNT( * ) FROM gas_station WHERE gas_station.open_year BETWEEN 2000 and 2005	gas_company
SELECT COUNT( * ) FROM gas_station WHERE gas_station.open_year BETWEEN 2000 and 2005	gas_company
SELECT gas_station.location , COUNT( * ) FROM gas_station GROUP BY gas_station.location ORDER BY COUNT( * ) ASC	gas_company
SELECT gas_station.location , COUNT( * ) FROM gas_station GROUP BY gas_station.location ORDER BY COUNT( * ) ASC	gas_company
SELECT company.headquarters FROM company WHERE company.main_industry = 'banking' INTERSECT SELECT company.headquarters FROM company WHERE company.main_industry = 'Oil and gas'	gas_company
SELECT company.headquarters FROM company WHERE company.main_industry = 'banking' INTERSECT SELECT company.headquarters FROM company WHERE company.main_industry = 'oil and gas'	gas_company
SELECT company.headquarters FROM company EXCEPT SELECT company.headquarters FROM company WHERE company.main_industry = 'banking'	gas_company
SELECT company.headquarters FROM company EXCEPT SELECT company.headquarters FROM company WHERE company.main_industry = 'banking'	gas_company
SELECT company.company , COUNT( * ) FROM station_company JOIN company ON station_company.company_id = company.company_id GROUP BY station_company.company_id	gas_company
SELECT company.company , COUNT( * ) FROM station_company JOIN company ON station_company.company_id = company.company_id GROUP BY station_company.company_id	gas_company
SELECT company.company , company.main_industry FROM company WHERE company.company_id NOT IN (SELECT station_company.company_id FROM station_company)	gas_company
SELECT company.company , company.main_industry FROM company WHERE company.company_id NOT IN (SELECT station_company.company_id FROM station_company)	gas_company
SELECT gas_station.manager_name FROM station_company JOIN company ON station_company.company_id = company.company_id JOIN gas_station ON station_company.station_id = gas_station.station_id WHERE company.company = 'ExxonMobil'	gas_company
SELECT gas_station.manager_name FROM station_company JOIN company ON station_company.company_id = company.company_id JOIN gas_station ON station_company.station_id = gas_station.station_id WHERE company.company = 'ExxonMobil'	gas_company
SELECT gas_station.location FROM station_company JOIN company ON station_company.company_id = company.company_id JOIN gas_station ON station_company.station_id = gas_station.station_id WHERE company.market_value > 100	gas_company
SELECT gas_station.location FROM station_company JOIN company ON station_company.company_id = company.company_id JOIN gas_station ON station_company.station_id = gas_station.station_id WHERE company.market_value > 100	gas_company
SELECT gas_station.manager_name FROM gas_station WHERE gas_station.open_year > 2000 GROUP BY gas_station.manager_name ORDER BY COUNT( * ) DESC LIMIT 1	gas_company
SELECT gas_station.manager_name FROM gas_station WHERE gas_station.open_year > 2000 GROUP BY gas_station.manager_name ORDER BY COUNT( * ) DESC LIMIT 1	gas_company
SELECT gas_station.location FROM gas_station ORDER BY gas_station.open_year ASC	gas_company
SELECT gas_station.location FROM gas_station ORDER BY gas_station.open_year ASC	gas_company
SELECT company.rank , company.company , company.market_value FROM company WHERE company.main_industry = 'banking' ORDER BY company.sales_billion , company.profits_billion ASC	gas_company
SELECT company.rank , company.company , company.market_value FROM company WHERE company.main_industry = 'banking' ORDER BY company.sales_billion , company.profits_billion ASC	gas_company
SELECT gas_station.location , gas_station.representative_name FROM station_company JOIN company ON station_company.company_id = company.company_id JOIN gas_station ON station_company.station_id = gas_station.station_id ORDER BY company.assets_billion DESC LIMIT 3	gas_company
SELECT gas_station.location , gas_station.representative_name FROM station_company JOIN company ON station_company.company_id = company.company_id JOIN gas_station ON station_company.station_id = gas_station.station_id ORDER BY company.assets_billion DESC LIMIT 3	gas_company
SELECT COUNT( * ) FROM region	party_people
SELECT COUNT( * ) FROM region	party_people
SELECT DISTINCT region.region_name FROM region ORDER BY region.label ASC	party_people
SELECT DISTINCT region.region_name FROM region ORDER BY region.label ASC	party_people
SELECT COUNT( DISTINCT party.party_name ) FROM party	party_people
SELECT COUNT( DISTINCT party.party_name ) FROM party	party_people
SELECT party.minister , party.took_office , party.left_office FROM party ORDER BY party.left_office ASC	party_people
SELECT party.minister , party.took_office , party.left_office FROM party ORDER BY party.left_office ASC	party_people
SELECT party.minister FROM party WHERE party.took_office > 1961 OR party.took_office<1959	party_people
SELECT party.minister FROM party WHERE party.took_office > 1961 OR party.took_office<1959	party_people
SELECT party.minister FROM party WHERE party.party_name != 'Progress Party'	party_people
SELECT party.minister FROM party WHERE party.party_name != 'Progress Party'	party_people
SELECT party.minister , party.party_name FROM party ORDER BY party.took_office DESC	party_people
SELECT party.minister , party.party_name FROM party ORDER BY party.took_office DESC	party_people
SELECT party.minister FROM party ORDER BY party.left_office DESC LIMIT 1	party_people
SELECT party.minister FROM party ORDER BY party.left_office DESC LIMIT 1	party_people
SELECT member.member_name , party.party_name FROM member JOIN party ON member.party_id = party.party_id	party_people
SELECT member.member_name , party.party_name FROM member JOIN party ON member.party_id = party.party_id	party_people
SELECT party.party_name , COUNT( * ) FROM member JOIN party ON member.party_id = party.party_id GROUP BY member.party_id	party_people
SELECT party.party_name , COUNT( * ) FROM member JOIN party ON member.party_id = party.party_id GROUP BY member.party_id	party_people
SELECT party.party_name FROM member JOIN party ON member.party_id = party.party_id GROUP BY member.party_id ORDER BY COUNT( * ) DESC LIMIT 1	party_people
SELECT party.party_name FROM member JOIN party ON member.party_id = party.party_id GROUP BY member.party_id ORDER BY COUNT( * ) DESC LIMIT 1	party_people
SELECT party.party_name , region.region_name FROM party JOIN region ON party.region_id = region.region_id	party_people
SELECT party.party_name , region.region_name FROM party JOIN region ON party.region_id = region.region_id	party_people
SELECT party.party_name FROM party WHERE party.party_id NOT IN (SELECT member.party_id FROM member)	party_people
SELECT party.party_name FROM party WHERE party.party_id NOT IN (SELECT member.party_id FROM member)	party_people
SELECT member.member_name FROM member WHERE member.party_id = 3 INTERSECT SELECT member.member_name FROM member WHERE member.party_id = 1	party_people
SELECT member.member_name FROM member WHERE member.party_id = 3 INTERSECT SELECT member.member_name FROM member WHERE member.party_id = 1	party_people
SELECT member.member_name FROM member JOIN party ON member.party_id = party.party_id WHERE party.party_name != 'Progress Party'	party_people
SELECT member.member_name FROM member JOIN party ON member.party_id = party.party_id WHERE party.party_name != 'Progress Party'	party_people
SELECT COUNT( * ) FROM party_events	party_people
SELECT COUNT( * ) FROM party_events	party_people
SELECT party.party_name , COUNT( * ) FROM party_events JOIN party ON party_events.party_id = party.party_id GROUP BY party_events.party_id	party_people
SELECT party.party_name , COUNT( * ) FROM party_events JOIN party ON party_events.party_id = party.party_id GROUP BY party_events.party_id	party_people
SELECT member.member_name FROM member EXCEPT SELECT member.member_name FROM member JOIN party_events ON member.member_id = party_events.member_in_charge_id	party_people
SELECT member.member_name FROM member EXCEPT SELECT member.member_name FROM member JOIN party_events ON member.member_id = party_events.member_in_charge_id	party_people
SELECT party.party_name FROM party_events JOIN party ON party_events.party_id = party.party_id GROUP BY party_events.party_id HAVING COUNT( * ) >= 2	party_people
SELECT party.party_name FROM party_events JOIN party ON party_events.party_id = party.party_id GROUP BY party_events.party_id HAVING COUNT( * ) >= 2	party_people
SELECT member.member_name FROM member JOIN party_events ON member.member_id = party_events.member_in_charge_id GROUP BY party_events.member_in_charge_id ORDER BY COUNT( * ) DESC LIMIT 1	party_people
SELECT member.member_name FROM member JOIN party_events ON member.member_id = party_events.member_in_charge_id GROUP BY party_events.member_in_charge_id ORDER BY COUNT( * ) DESC LIMIT 1	party_people
SELECT party_events.event_name FROM party_events GROUP BY party_events.event_name HAVING COUNT( * ) > 2	party_people
SELECT party_events.event_name FROM party_events GROUP BY party_events.event_name HAVING COUNT( * ) > 2	party_people
SELECT COUNT( * ) FROM region JOIN party ON region.region_id = party.region_id JOIN party_events ON party.party_id = party_events.party_id WHERE region.region_name = 'United Kingdom' AND party_events.event_name = 'Annual Meeting'	party_people
SELECT COUNT( * ) FROM region JOIN party ON region.region_id = party.region_id JOIN party ON party.party_id = party.region_id JOIN party_events ON party_events.party_id = party.party_id WHERE region.region_name = 'United Kingdom'	party_people
SELECT COUNT( * ) FROM pilot	pilot_record
SELECT pilot.pilot_name FROM pilot ORDER BY pilot.rank ASC	pilot_record
SELECT pilot.position , pilot.team FROM pilot	pilot_record
SELECT DISTINCT pilot.position FROM pilot WHERE pilot.age > 30	pilot_record
SELECT pilot.pilot_name FROM pilot WHERE pilot.team = 'Bradley' OR pilot.team = 'Fordham'	pilot_record
SELECT pilot.join_year FROM pilot ORDER BY pilot.rank ASC LIMIT 1	pilot_record
SELECT pilot.nationality , COUNT( * ) FROM pilot GROUP BY pilot.nationality	pilot_record
SELECT pilot.nationality FROM pilot GROUP BY pilot.nationality ORDER BY COUNT( * ) DESC LIMIT 1	pilot_record
SELECT pilot.position FROM pilot WHERE pilot.join_year<2000 INTERSECT SELECT pilot.position FROM pilot WHERE pilot.join_year > 2005	pilot_record
SELECT pilot.pilot_name , aircraft.model FROM pilot_record JOIN aircraft ON pilot_record.aircraft_id = aircraft.aircraft_id JOIN pilot ON pilot_record.pilot_id = pilot.pilot_id	pilot_record
SELECT pilot.pilot_name , aircraft.fleet_series FROM pilot_record JOIN aircraft ON pilot_record.aircraft_id = aircraft.aircraft_id JOIN pilot ON pilot_record.pilot_id = pilot.pilot_id ORDER BY pilot.rank ASC	pilot_record
SELECT aircraft.fleet_series FROM pilot_record JOIN aircraft ON pilot_record.aircraft_id = aircraft.aircraft_id JOIN pilot ON pilot_record.pilot_id = pilot.pilot_id WHERE pilot.age<34	pilot_record
SELECT pilot.pilot_name , COUNT( * ) FROM pilot_record JOIN pilot ON pilot_record.pilot_id = pilot.pilot_id GROUP BY pilot.pilot_name	pilot_record
SELECT pilot.pilot_name , COUNT( * ) FROM pilot_record JOIN pilot ON pilot_record.pilot_id = pilot.pilot_id GROUP BY pilot.pilot_name HAVING COUNT( * ) > 1	pilot_record
SELECT pilot.pilot_name FROM pilot WHERE pilot.pilot_id NOT IN (SELECT pilot_record.pilot_id FROM pilot_record)	pilot_record
SELECT ref_document_status.document_status_code FROM ref_document_status	cre_Doc_Control_Systems
SELECT ref_document_status.document_status_description FROM ref_document_status WHERE ref_document_status.document_status_code = 'working'	cre_Doc_Control_Systems
SELECT ref_document_types.document_type_code FROM ref_document_types	cre_Doc_Control_Systems
SELECT ref_document_types.document_type_description FROM ref_document_types WHERE ref_document_types.document_type_code = 'Paper'	cre_Doc_Control_Systems
SELECT ref_shipping_agents.shipping_agent_name FROM ref_shipping_agents	cre_Doc_Control_Systems
SELECT ref_shipping_agents.shipping_agent_code FROM ref_shipping_agents WHERE ref_shipping_agents.shipping_agent_name = 'UPS'	cre_Doc_Control_Systems
SELECT roles.role_code FROM roles	cre_Doc_Control_Systems
SELECT roles.role_description FROM roles WHERE roles.role_code = 'ED'	cre_Doc_Control_Systems
SELECT COUNT( * ) FROM employees	cre_Doc_Control_Systems
SELECT roles.role_description FROM roles JOIN employees ON roles.role_code = employees.role_code WHERE employees.employee_name = 'Koby'	cre_Doc_Control_Systems
SELECT documents.document_id , documents.receipt_date FROM documents	cre_Doc_Control_Systems
SELECT roles.role_description , employees.role_code , COUNT( * ) FROM roles JOIN employees ON roles.role_code = employees.role_code GROUP BY employees.role_code	cre_Doc_Control_Systems
SELECT roles.role_description , COUNT( * ) FROM employees JOIN roles ON employees.role_code = roles.role_code HAVING COUNT( employees.employee_id ) > 1	cre_Doc_Control_Systems
SELECT ref_document_status.document_status_description FROM documents JOIN ref_document_status ON documents.document_status_code = ref_document_status.document_status_code WHERE documents.document_id = 1	cre_Doc_Control_Systems
SELECT COUNT( * ) FROM documents WHERE documents.document_status_code = 'done'	cre_Doc_Control_Systems
SELECT documents.document_type_code FROM documents WHERE documents.document_id = 2	cre_Doc_Control_Systems
SELECT documents.document_id FROM documents WHERE documents.document_status_code = 'done' AND documents.document_type_code = 'paper'	cre_Doc_Control_Systems
SELECT ref_shipping_agents.shipping_agent_name FROM documents JOIN ref_shipping_agents ON documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code WHERE documents.document_id = 2	cre_Doc_Control_Systems
SELECT COUNT( * ) FROM documents JOIN ref_shipping_agents ON documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code WHERE ref_shipping_agents.shipping_agent_name = 'USPS'	cre_Doc_Control_Systems
SELECT ref_shipping_agents.shipping_agent_name , COUNT( documents.document_id ) FROM documents JOIN ref_shipping_agents ON documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code GROUP BY ref_shipping_agents.shipping_agent_code ORDER BY COUNT( documents.document_id ) DESC LIMIT 1	cre_Doc_Control_Systems
SELECT documents.receipt_date FROM documents WHERE documents.document_id = 3	cre_Doc_Control_Systems
SELECT addresses.address_details FROM documents_mailed JOIN addresses ON documents_mailed.mailed_to_address_id = addresses.address_id WHERE documents_mailed.document_id = 4	cre_Doc_Control_Systems
SELECT documents_mailed.mailing_date FROM documents_mailed WHERE documents_mailed.document_id = 7	cre_Doc_Control_Systems
SELECT documents.document_id FROM documents WHERE documents.document_status_code = 'done' AND documents.document_type_code = 'Paper,' EXCEPT SELECT documents.document_id FROM documents JOIN ref_shipping_agents ON documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code WHERE ref_shipping_agents.shipping_agent_name = 'USPS'	cre_Doc_Control_Systems
SELECT documents.document_id FROM documents WHERE documents.document_status_code = 'done' AND documents.document_type_code = 'Paper' INTERSECT SELECT documents.document_id FROM documents JOIN ref_shipping_agents ON documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code WHERE ref_shipping_agents.shipping_agent_name = 'USPS'	cre_Doc_Control_Systems
SELECT document_drafts.draft_details FROM document_drafts WHERE document_drafts.document_id = 7	cre_Doc_Control_Systems
SELECT COUNT( * ) FROM draft_copies WHERE draft_copies.document_id = 2	cre_Doc_Control_Systems
SELECT draft_copies.document_id , COUNT( draft_copies.copy_number ) FROM draft_copies GROUP BY draft_copies.document_id ORDER BY COUNT( draft_copies.copy_number ) DESC LIMIT 1	cre_Doc_Control_Systems
SELECT draft_copies.document_id , COUNT( * ) FROM draft_copies GROUP BY draft_copies.document_id HAVING COUNT( * ) > 1	cre_Doc_Control_Systems
SELECT employees.employee_name FROM circulation_history JOIN employees ON circulation_history.employee_id = employees.employee_id WHERE circulation_history.document_id = 1	cre_Doc_Control_Systems
SELECT employees.employee_name FROM employees EXCEPT SELECT employees.employee_name FROM circulation_history JOIN employees ON circulation_history.employee_id = employees.employee_id	cre_Doc_Control_Systems
SELECT employees.employee_name , COUNT( * ) FROM circulation_history JOIN employees ON circulation_history.employee_id = employees.employee_id GROUP BY circulation_history.document_id , circulation_history.draft_number , circulation_history.draft_number ORDER BY COUNT( * ) DESC LIMIT 1	cre_Doc_Control_Systems
SELECT circulation_history.document_id , COUNT( DISTINCT circulation_history.employee_id ) FROM circulation_history GROUP BY circulation_history.document_id	cre_Doc_Control_Systems
SELECT department.dname FROM department ORDER BY department.mgr_start_date ASC	company_1
SELECT dependent.dependent_name FROM dependent WHERE dependent.relationship = 'spouse'	company_1
SELECT COUNT( * ) FROM dependent WHERE dependent.sex = 'f'	company_1
SELECT department.dname FROM department JOIN dept_locations ON department.dnumber = dept_locations.dnumber WHERE dept_locations.dlocation = 'Houston'	company_1
SELECT employee.fname , employee.lname FROM employee WHERE employee.salary > 30000	company_1
SELECT COUNT( * ) , employee.sex FROM employee WHERE employee.salary<50000 GROUP BY employee.sex	company_1
SELECT employee.fname , employee.lname , employee.address FROM employee ORDER BY employee.bdate ASC	company_1
SELECT events.event_details FROM events JOIN services ON events.service_id = services.service_id WHERE services.service_type_code = 'Marriage'	local_govt_in_alabama
SELECT events.event_id , events.event_details FROM events JOIN participants_in_events ON events.event_id = participants_in_events.event_id GROUP BY events.event_id HAVING COUNT( * ) > 1	local_govt_in_alabama
SELECT participants.participant_id , participants.participant_type_code , COUNT( * ) FROM participants JOIN participants_in_events ON participants.participant_id = participants_in_events.participant_id GROUP BY participants.participant_id	local_govt_in_alabama
SELECT participants.participant_id , participants.participant_type_code , participants.participant_details FROM participants	local_govt_in_alabama
SELECT COUNT( * ) FROM participants WHERE participants.participant_type_code = 'Organizer'	local_govt_in_alabama
SELECT services.service_type_code FROM services ORDER BY services.service_type_code ASC	local_govt_in_alabama
SELECT events.service_id , events.event_details FROM events	local_govt_in_alabama
SELECT COUNT( * ) FROM participants JOIN participants_in_events ON participants.participant_id = participants_in_events.participant_id WHERE participants.participant_details LIKE '%Dr%'	local_govt_in_alabama
SELECT participants.participant_type_code FROM participants GROUP BY participants.participant_type_code ORDER BY COUNT( * ) DESC LIMIT 1	local_govt_in_alabama
SELECT events.service_id , services.service_type_code FROM participants JOIN participants_in_events ON participants.participant_id = participants_in_events.participant_id JOIN events ON participants_in_events.event_id = events.event_id JOIN services ON events.service_id = services.service_id GROUP BY events.service_id ORDER BY COUNT( * ) ASC LIMIT 1	local_govt_in_alabama
SELECT participants_in_events.event_id FROM participants_in_events GROUP BY participants_in_events.event_id ORDER BY COUNT( * ) DESC LIMIT 1	local_govt_in_alabama
SELECT events.event_id FROM events EXCEPT SELECT participants_in_events.event_id FROM participants_in_events JOIN participants ON participants_in_events.participant_id = participants.participant_id WHERE participants.participant_details = 'Kenyatta Kuhn'	local_govt_in_alabama
SELECT services.service_type_code FROM services JOIN events ON services.service_id = events.service_id WHERE events.event_details = 'failure' INTERSECT SELECT services.service_type_code FROM services JOIN events ON services.service_id = events.service_id WHERE events.event_details = 'successful'	local_govt_in_alabama
SELECT COUNT( * ) FROM events WHERE events.event_id NOT IN (SELECT participants_in_events.event_id FROM participants_in_events)	local_govt_in_alabama
SELECT COUNT( DISTINCT participants_in_events.participant_id ) FROM participants_in_events	local_govt_in_alabama
SELECT races.name FROM races ORDER BY races.date DESC LIMIT 1	formula_1
SELECT races.name FROM races ORDER BY races.date DESC LIMIT 1	formula_1
SELECT races.name , races.date FROM races ORDER BY races.date DESC LIMIT 1	formula_1
SELECT races.name , races.date FROM races ORDER BY races.date DESC LIMIT 1	formula_1
SELECT races.date FROM races WHERE races.round = 2017	formula_1
SELECT races.date FROM races WHERE races.year = 2017	formula_1
SELECT DISTINCT races.date FROM races WHERE races.round BETWEEN 2014 and 2017	formula_1
SELECT DISTINCT races.date FROM races WHERE races.round BETWEEN 2014 and 2017	formula_1
SELECT DISTINCT drivers.forename , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.milliseconds<93000	formula_1
SELECT DISTINCT drivers.forename , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.milliseconds<93000	formula_1
SELECT DISTINCT drivers.driverid , drivers.nationality FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.milliseconds > 100000	formula_1
SELECT DISTINCT drivers.driverid , drivers.nationality FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.milliseconds > 100000	formula_1
SELECT drivers.forename , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds ASC LIMIT 1	formula_1
SELECT drivers.forename , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds ASC LIMIT 1	formula_1
SELECT drivers.driverid , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds DESC LIMIT 1	formula_1
SELECT drivers.driverid , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds DESC LIMIT 1	formula_1
SELECT drivers.driverid , drivers.forename , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.position = '1' GROUP BY drivers.driverid HAVING COUNT( * ) >= 2	formula_1
SELECT drivers.driverid , drivers.forename , drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.position = '1' GROUP BY drivers.driverid HAVING COUNT( * ) >= 2	formula_1
SELECT COUNT( * ) FROM results JOIN races ON results.raceid = races.raceid WHERE races.name = 'Australian Grand Prix' AND races.round = 2009	formula_1
SELECT COUNT( * ) FROM results JOIN races ON results.raceid = races.raceid WHERE races.name = 'Australian Grand Prix' AND races.round = 2009	formula_1
SELECT COUNT( DISTINCT results.driverid ) FROM results WHERE results.raceid NOT IN (SELECT races.raceid FROM races WHERE races.round != 2009)	formula_1
SELECT COUNT( DISTINCT results.driverid ) FROM results WHERE results.raceid NOT IN (SELECT races.raceid FROM races WHERE races.round != 2009)	formula_1
SELECT races.name , races.date FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis'	formula_1
SELECT races.name , races.date FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis'	formula_1
SELECT drivers.forename , drivers.surname FROM drivers WHERE drivers.nationality = 'German'	formula_1
SELECT drivers.forename , drivers.surname FROM drivers WHERE drivers.nationality = 'German'	formula_1
SELECT results.driverid , drivers.forename FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Australian Grand Prix' INTERSECT SELECT results.driverid , drivers.forename FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Chinese Grand Prix'	formula_1
SELECT results.driverid , drivers.forename FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Australian Grand Prix' INTERSECT SELECT results.driverid , drivers.forename FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Chinese Grand Prix'	formula_1
SELECT drivers.forename , drivers.surname FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Australian Grand Prix' EXCEPT SELECT drivers.forename , drivers.surname FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Chinese Grand Prix'	formula_1
SELECT drivers.forename , drivers.surname FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Australian Grand Prix' EXCEPT SELECT drivers.forename , drivers.surname FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Chinese Grand Prix'	formula_1
SELECT DISTINCT drivers.forename FROM drivers JOIN driverstandings ON drivers.driverid = driverstandings.driverid WHERE driverstandings.position = 1 AND driverstandings.wins = 1	formula_1
SELECT DISTINCT drivers.forename FROM drivers JOIN driverstandings ON drivers.driverid = driverstandings.driverid WHERE driverstandings.position = 1 AND driverstandings.wins = 1	formula_1
SELECT DISTINCT drivers.forename FROM drivers JOIN driverstandings ON drivers.driverid = driverstandings.driverid WHERE driverstandings.position = 1 AND driverstandings.wins = 1 AND driverstandings.points > 20	formula_1
SELECT DISTINCT drivers.forename FROM drivers JOIN driverstandings ON drivers.driverid = driverstandings.driverid WHERE driverstandings.position = 1 AND driverstandings.wins = 1 AND driverstandings.points > 20	formula_1
SELECT COUNT( * ) , constructors.nationality FROM constructors GROUP BY constructors.nationality	formula_1
SELECT COUNT( * ) , constructors.nationality FROM constructors GROUP BY constructors.nationality	formula_1
SELECT COUNT( * ) , constructorstandings.constructorid FROM constructorstandings GROUP BY constructorstandings.constructorid	formula_1
SELECT COUNT( * ) , constructorstandings.constructorid FROM constructorstandings GROUP BY constructorstandings.constructorid	formula_1
SELECT races.date FROM races JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Spain' AND races.round > 2017	formula_1
SELECT DISTINCT races.date FROM races JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Spain' AND races.round > 2017	formula_1
SELECT DISTINCT races.date , races.date FROM races JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Spain' AND races.round > 2000	formula_1
SELECT DISTINCT races.date FROM races JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Spain' AND races.round > 2000	formula_1
SELECT DISTINCT pitstops.driverid , pitstops.stop FROM pitstops WHERE pitstops.duration<(SELECT MAX( pitstops.duration ) FROM pitstops WHERE pitstops.raceid = 841)	formula_1
SELECT DISTINCT pitstops.driverid , pitstops.stop FROM pitstops WHERE pitstops.duration<(SELECT MAX( pitstops.duration ) FROM pitstops WHERE pitstops.raceid = 841)	formula_1
SELECT DISTINCT pitstops.driverid , pitstops.stop FROM pitstops WHERE pitstops.duration > (SELECT MIN( pitstops.duration ) FROM pitstops WHERE pitstops.raceid = 841)	formula_1
SELECT DISTINCT pitstops.driverid , pitstops.stop FROM pitstops WHERE pitstops.duration > (SELECT MIN( pitstops.duration ) FROM pitstops WHERE pitstops.raceid = 841)	formula_1
SELECT DISTINCT drivers.forename FROM drivers ORDER BY drivers.forename ASC	formula_1
SELECT DISTINCT drivers.forename FROM drivers ORDER BY drivers.forename ASC	formula_1
SELECT DISTINCT races.date FROM races ORDER BY races.date DESC	formula_1
SELECT DISTINCT races.date FROM races ORDER BY races.date DESC	formula_1
SELECT races.date FROM races WHERE races.round BETWEEN 2009 and 2011	formula_1
SELECT races.date FROM races WHERE races.round BETWEEN 2009 and 2011	formula_1
SELECT races.date FROM races WHERE races.date > '12:00:00' OR races.date<'09:00:00'	formula_1
SELECT races.date FROM races WHERE races.date > '12:00:00' OR races.date<'09:00:00'	formula_1
SELECT drivers.forename , drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) > 8 UNION SELECT drivers.forename , drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) > 5	formula_1
SELECT drivers.forename , drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) > 8 UNION SELECT drivers.forename , drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) > 5	formula_1
SELECT drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) = 11 INTERSECT SELECT drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) > 5	formula_1
SELECT drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) = 11 INTERSECT SELECT drivers.surname , drivers.driverid FROM drivers JOIN results ON drivers.driverid = results.driverid GROUP BY drivers.driverid HAVING COUNT( * ) > 5	formula_1
SELECT drivers.driverid , drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE races.round > 2010 GROUP BY drivers.driverid ORDER BY COUNT( * ) DESC LIMIT 1	formula_1
SELECT drivers.driverid , drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE races.round > 2010 GROUP BY drivers.driverid ORDER BY COUNT( * ) DESC LIMIT 1	formula_1
SELECT circuits.name FROM circuits WHERE circuits.country = 'UK' OR circuits.country = 'Malaysia'	formula_1
SELECT circuits.name FROM circuits WHERE circuits.country = 'UK' OR circuits.country = 'Malaysia'	formula_1
SELECT circuits.circuitid , circuits.location FROM circuits WHERE circuits.country = 'France' OR circuits.country = 'Belgium'	formula_1
SELECT circuits.circuitid , circuits.location FROM circuits WHERE circuits.country = 'France' OR circuits.country = 'Belgium'	formula_1
SELECT constructors.name FROM constructors JOIN constructorstandings ON constructors.constructorid = constructorstandings.constructorid WHERE constructors.nationality = 'Japanese' AND constructorstandings.points > 5	formula_1
SELECT constructors.name FROM constructors JOIN constructorstandings ON constructors.constructorid = constructorstandings.constructorid WHERE constructors.nationality = 'Japanese' AND constructorstandings.points > 5	formula_1
SELECT AVG( results.fastestlapspeed ) FROM races JOIN results ON races.raceid = results.raceid WHERE races.round = 2008 AND races.name = 'Monaco Grand Prix'	formula_1
SELECT AVG( results.fastestlapspeed ) FROM races JOIN results ON races.raceid = results.raceid WHERE races.round = 2008 AND races.name = 'Monaco Grand Prix'	formula_1
SELECT MAX( results.fastestlapspeed ) FROM races JOIN results ON races.raceid = results.raceid WHERE races.round = 2008 AND races.name = 'Monaco Grand Prix'	formula_1
SELECT MAX( results.fastestlapspeed ) FROM races JOIN results ON races.raceid = results.raceid WHERE races.round = 2008 AND races.name = 'Monaco Grand Prix'	formula_1
SELECT races.name , MAX( results.fastestlapspeed ) FROM races JOIN results ON races.raceid = results.raceid GROUP BY races.name ORDER BY races.year ASC	formula_1
SELECT races.name , MAX( results.fastestlapspeed ) FROM races JOIN results ON races.raceid = results.raceid GROUP BY races.name ORDER BY races.year ASC	formula_1
SELECT races.name , AVG( results.fastestlapspeed ) FROM races JOIN results ON races.raceid = results.raceid WHERE races.year >= 2004 GROUP BY races.name ORDER BY races.year ASC	formula_1
races , results	formula_1
SELECT drivers.driverid , drivers.forename , COUNT( * ) FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid GROUP BY drivers.driverid HAVING COUNT( * ) >= 2	formula_1
SELECT drivers.driverid , drivers.forename , COUNT( * ) FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid GROUP BY drivers.driverid HAVING COUNT( * ) >= 2	formula_1
SELECT drivers.driverid , COUNT( * ) FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid GROUP BY drivers.driverid HAVING COUNT( * ) <= 30	formula_1
SELECT drivers.driverid , COUNT( * ) FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid GROUP BY drivers.driverid HAVING COUNT( * ) <= 30	formula_1
SELECT drivers.driverid , drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid GROUP BY drivers.driverid ORDER BY COUNT( * ) DESC LIMIT 1	formula_1
SELECT drivers.driverid , drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid GROUP BY drivers.driverid ORDER BY COUNT( * ) DESC LIMIT 1	formula_1
SELECT COUNT( * ) FROM technician	machine_repair
SELECT COUNT( * ) FROM technician	machine_repair
SELECT technician.name FROM technician ORDER BY technician.age ASC	machine_repair
SELECT technician.name FROM technician ORDER BY technician.age ASC	machine_repair
SELECT technician.team , technician.starting_year FROM technician	machine_repair
SELECT technician.team , technician.starting_year FROM technician	machine_repair
SELECT technician.name FROM technician WHERE technician.team != 'NYY'	machine_repair
SELECT technician.name FROM technician WHERE technician.team != 'NYY'	machine_repair
SELECT technician.name FROM technician WHERE technician.age = 36 OR technician.age = 37	machine_repair
SELECT technician.name FROM technician WHERE technician.age = 36 OR technician.age = 37	machine_repair
SELECT technician.starting_year FROM technician ORDER BY technician.age DESC LIMIT 1	machine_repair
SELECT technician.starting_year FROM technician ORDER BY technician.age DESC LIMIT 1	machine_repair
SELECT technician.team , COUNT( * ) FROM technician GROUP BY technician.team	machine_repair
SELECT technician.team , COUNT( * ) FROM technician GROUP BY technician.team	machine_repair
SELECT technician.team FROM technician GROUP BY technician.team ORDER BY COUNT( * ) DESC LIMIT 1	machine_repair
SELECT technician.team FROM technician GROUP BY technician.team ORDER BY COUNT( * ) DESC LIMIT 1	machine_repair
SELECT technician.team FROM technician GROUP BY technician.team HAVING COUNT( * ) >= 2	machine_repair
SELECT technician.team FROM technician GROUP BY technician.team HAVING COUNT( * ) >= 2	machine_repair
SELECT technician.name , machine.machine_series FROM repair_assignment JOIN machine ON repair_assignment.machine_id = machine.machine_id JOIN technician ON repair_assignment.technician_id = technician.technician_id	machine_repair
SELECT technician.name , machine.machine_series FROM repair_assignment JOIN machine ON repair_assignment.machine_id = machine.machine_id JOIN technician ON repair_assignment.technician_id = technician.technician_id	machine_repair
SELECT technician.name FROM repair_assignment JOIN machine ON repair_assignment.machine_id = machine.machine_id JOIN technician ON repair_assignment.technician_id = technician.technician_id ORDER BY machine.quality_rank ASC	machine_repair
SELECT technician.name FROM repair_assignment JOIN machine ON repair_assignment.machine_id = machine.machine_id JOIN technician ON repair_assignment.technician_id = technician.technician_id ORDER BY machine.quality_rank ASC	machine_repair
SELECT technician.name FROM repair_assignment JOIN machine ON repair_assignment.machine_id = machine.machine_id JOIN technician ON repair_assignment.technician_id = technician.technician_id WHERE machine.value_points > 70	machine_repair
SELECT technician.name FROM repair_assignment JOIN machine ON repair_assignment.machine_id = machine.machine_id JOIN technician ON repair_assignment.technician_id = technician.technician_id WHERE machine.value_points > 70	machine_repair
SELECT technician.name , COUNT( * ) FROM repair_assignment JOIN technician ON repair_assignment.technician_id = technician.technician_id GROUP BY technician.name	machine_repair
SELECT technician.name , COUNT( * ) FROM repair_assignment JOIN technician ON repair_assignment.technician_id = technician.technician_id GROUP BY technician.name	machine_repair
SELECT technician.name FROM technician WHERE technician.technician_id NOT IN (SELECT repair_assignment.technician_id FROM repair_assignment)	machine_repair
SELECT technician.name FROM technician WHERE technician.technician_id NOT IN (SELECT repair_assignment.technician_id FROM repair_assignment)	machine_repair
SELECT technician.starting_year FROM technician WHERE technician.team = 'CLE' INTERSECT SELECT technician.starting_year FROM technician WHERE technician.team = 'CWS'	machine_repair
SELECT technician.starting_year FROM technician WHERE technician.team = 'CLE' INTERSECT SELECT technician.starting_year FROM technician WHERE technician.team = 'CWS'	machine_repair
SELECT COUNT( * ) FROM entrepreneur	entrepreneur
SELECT COUNT( * ) FROM entrepreneur	entrepreneur
SELECT entrepreneur.company FROM entrepreneur ORDER BY entrepreneur.money_requested DESC	entrepreneur
SELECT entrepreneur.company FROM entrepreneur ORDER BY entrepreneur.money_requested DESC	entrepreneur
SELECT entrepreneur.company , entrepreneur.investor FROM entrepreneur	entrepreneur
SELECT entrepreneur.company , entrepreneur.investor FROM entrepreneur	entrepreneur
SELECT AVG( entrepreneur.money_requested ) FROM entrepreneur	entrepreneur
SELECT AVG( entrepreneur.money_requested ) FROM entrepreneur	entrepreneur
SELECT people.name FROM people ORDER BY people.weight ASC	entrepreneur
SELECT people.name FROM people ORDER BY people.weight ASC	entrepreneur
SELECT people.name FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id	entrepreneur
SELECT people.name FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id	entrepreneur
SELECT people.name FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id WHERE entrepreneur.investor != 'Rachel Elnaugh'	entrepreneur
SELECT people.name FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id WHERE entrepreneur.investor != 'Rachel Elnaugh'	entrepreneur
SELECT people.weight FROM people ORDER BY people.height ASC LIMIT 1	entrepreneur
SELECT people.weight FROM people ORDER BY people.height ASC LIMIT 1	entrepreneur
SELECT people.name FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY people.weight DESC LIMIT 1	entrepreneur
SELECT people.name FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY people.weight DESC LIMIT 1	entrepreneur
SELECT SUM( entrepreneur.money_requested ) FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id WHERE people.height > 1.85	entrepreneur
SELECT SUM( entrepreneur.money_requested ) FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id WHERE people.height > 1.85	entrepreneur
SELECT people.date_of_birth FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id WHERE entrepreneur.investor = 'Simon Woodroffe' OR entrepreneur.investor = 'Peter Jones'	entrepreneur
SELECT people.date_of_birth FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id WHERE entrepreneur.investor = 'Simon Woodroffe' OR entrepreneur.investor = 'Peter Jones'	entrepreneur
SELECT people.weight FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY entrepreneur.money_requested DESC	entrepreneur
SELECT people.weight FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY entrepreneur.money_requested DESC	entrepreneur
SELECT entrepreneur.investor , COUNT( * ) FROM entrepreneur GROUP BY entrepreneur.investor	entrepreneur
SELECT entrepreneur.investor , COUNT( * ) FROM entrepreneur GROUP BY entrepreneur.investor	entrepreneur
SELECT entrepreneur.investor FROM entrepreneur GROUP BY entrepreneur.investor ORDER BY COUNT( * ) DESC LIMIT 1	entrepreneur
SELECT entrepreneur.investor FROM entrepreneur GROUP BY entrepreneur.investor ORDER BY COUNT( * ) DESC LIMIT 1	entrepreneur
SELECT entrepreneur.investor FROM entrepreneur GROUP BY entrepreneur.investor HAVING COUNT( * ) >= 2	entrepreneur
SELECT entrepreneur.investor FROM entrepreneur GROUP BY entrepreneur.investor HAVING COUNT( * ) >= 2	entrepreneur
SELECT people.name , entrepreneur.company FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY entrepreneur.money_requested ASC	entrepreneur
SELECT people.name , entrepreneur.company FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY entrepreneur.money_requested ASC	entrepreneur
SELECT people.name FROM people WHERE people.people_id NOT IN (SELECT entrepreneur.people_id FROM entrepreneur)	entrepreneur
SELECT people.name FROM people WHERE people.people_id NOT IN (SELECT entrepreneur.people_id FROM entrepreneur)	entrepreneur
SELECT entrepreneur.investor FROM entrepreneur WHERE entrepreneur.money_requested > 140000 INTERSECT SELECT entrepreneur.investor FROM entrepreneur WHERE entrepreneur.money_requested<120000	entrepreneur
SELECT entrepreneur.investor FROM entrepreneur WHERE entrepreneur.money_requested > 140000 INTERSECT SELECT entrepreneur.investor FROM entrepreneur WHERE entrepreneur.money_requested<120000	entrepreneur
SELECT COUNT( DISTINCT entrepreneur.company ) FROM entrepreneur	entrepreneur
SELECT COUNT( DISTINCT entrepreneur.company ) FROM entrepreneur	entrepreneur
SELECT entrepreneur.company FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY people.height DESC LIMIT 1	entrepreneur
SELECT entrepreneur.company FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id ORDER BY people.height DESC LIMIT 1	entrepreneur
SELECT COUNT( * ) FROM perpetrator	perpetrator
SELECT perpetrator.date FROM perpetrator ORDER BY perpetrator.killed DESC	perpetrator
SELECT perpetrator.injured FROM perpetrator ORDER BY perpetrator.injured ASC	perpetrator
SELECT AVG( perpetrator.injured ) FROM perpetrator	perpetrator
SELECT perpetrator.location FROM perpetrator ORDER BY perpetrator.killed DESC LIMIT 1	perpetrator
SELECT people.name FROM people ORDER BY people.height ASC	perpetrator
SELECT people.name FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id	perpetrator
SELECT people.name FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id WHERE perpetrator.country != 'China'	perpetrator
SELECT people.name FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id ORDER BY people.weight DESC LIMIT 1	perpetrator
SELECT SUM( perpetrator.killed ) FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id WHERE people.height > 1.84	perpetrator
SELECT people.name FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id WHERE perpetrator.country = 'China' OR perpetrator.country = 'Japan'	perpetrator
SELECT people.height FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id ORDER BY perpetrator.injured DESC	perpetrator
SELECT perpetrator.country , COUNT( * ) FROM perpetrator GROUP BY perpetrator.country	perpetrator
SELECT perpetrator.country , COUNT( * ) FROM perpetrator GROUP BY perpetrator.country ORDER BY COUNT( * ) DESC LIMIT 1	perpetrator
SELECT perpetrator.country , COUNT( * ) FROM perpetrator GROUP BY perpetrator.country HAVING COUNT( * ) >= 2	perpetrator
SELECT people.name FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id ORDER BY perpetrator.year DESC	perpetrator
SELECT people.name FROM people WHERE people.people_id NOT IN (SELECT perpetrator.people_id FROM perpetrator)	perpetrator
SELECT perpetrator.country FROM perpetrator WHERE perpetrator.injured > 50 INTERSECT SELECT perpetrator.country FROM perpetrator WHERE perpetrator.injured<20	perpetrator
SELECT COUNT( DISTINCT perpetrator.location ) FROM perpetrator	perpetrator
SELECT perpetrator.date FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id ORDER BY people.height DESC LIMIT 1	perpetrator
SELECT MAX( perpetrator.year ) FROM perpetrator	perpetrator
SELECT campuses.campus FROM campuses WHERE campuses.county = 'Los Angeles'	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.county = 'Los Angeles'	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.location = 'Chico'	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.location = 'Chico'	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.year = 1958	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.year = 1958	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.year<1800	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.year<1800	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.year BETWEEN 1935 and 1939	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.year BETWEEN 1935 and 1939	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.location = 'Northridge' AND campuses.county = 'Los Angeles' UNION SELECT campuses.campus FROM campuses WHERE campuses.location = 'San Francisco' AND campuses.county = ', San Francisco'	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.location = 'Northridge,' AND campuses.county = 'Los Angeles' UNION SELECT campuses.campus FROM campuses WHERE campuses.location = 'San Francisco, San Francisco' AND campuses.county = ', San Francisco'	csu_1
SELECT csu_fees.campusfee FROM campuses JOIN csu_fees ON campuses.id = csu_fees.campus WHERE campuses.campus = 'San Jose State University' AND csu_fees.year = 1996	csu_1
SELECT csu_fees.campusfee FROM campuses JOIN csu_fees ON campuses.id = csu_fees.campus WHERE campuses.campus = 'San Jose State University' AND csu_fees.year = 1996	csu_1
SELECT csu_fees.campusfee FROM campuses JOIN csu_fees ON campuses.id = csu_fees.campus WHERE campuses.campus = 'San Francisco State University' AND csu_fees.year = 1996	csu_1
SELECT csu_fees.campusfee FROM campuses JOIN csu_fees ON campuses.id = csu_fees.campus WHERE campuses.campus = 'San Francisco State University' AND csu_fees.year = 1996	csu_1
SELECT COUNT( * ) FROM csu_fees WHERE csu_fees.campusfee > (SELECT AVG( csu_fees.campusfee ) FROM csu_fees)	csu_1
SELECT COUNT( * ) FROM csu_fees WHERE csu_fees.campusfee > (SELECT AVG( csu_fees.campusfee ) FROM csu_fees)	csu_1
SELECT COUNT( * ) FROM csu_fees WHERE csu_fees.campusfee > (SELECT AVG( csu_fees.campusfee ) FROM csu_fees)	csu_1
SELECT COUNT( * ) FROM csu_fees WHERE csu_fees.campusfee > (SELECT AVG( csu_fees.campusfee ) FROM csu_fees)	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.county = 'Los Angeles' AND campuses.year > 1950	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.county = 'Los Angeles' AND campuses.year > 1950	csu_1
SELECT degrees.year FROM degrees GROUP BY degrees.year ORDER BY SUM( degrees.degrees ) DESC LIMIT 1	csu_1
SELECT degrees.year FROM degrees GROUP BY degrees.year ORDER BY SUM( degrees.degrees ) DESC LIMIT 1	csu_1
SELECT degrees.campus FROM degrees GROUP BY degrees.campus ORDER BY SUM( degrees.degrees ) DESC LIMIT 1	csu_1
SELECT degrees.campus FROM degrees GROUP BY degrees.campus ORDER BY SUM( degrees.degrees ) DESC LIMIT 1	csu_1
SELECT campuses.campus FROM campuses JOIN faculty ON campuses.id = faculty.campus WHERE faculty.year = 2003 ORDER BY faculty.faculty DESC LIMIT 1	csu_1
SELECT campuses.campus FROM campuses JOIN faculty ON campuses.id = faculty.campus WHERE faculty.year = 2003 ORDER BY faculty.faculty DESC LIMIT 1	csu_1
SELECT AVG( csu_fees.campusfee ) FROM csu_fees WHERE csu_fees.year = 1996	csu_1
SELECT AVG( csu_fees.campusfee ) FROM csu_fees WHERE csu_fees.year = 1996	csu_1
SELECT AVG( csu_fees.campusfee ) FROM csu_fees WHERE csu_fees.year = 2005	csu_1
SELECT AVG( csu_fees.campusfee ) FROM csu_fees WHERE csu_fees.year = 2005	csu_1
SELECT campuses.campus , SUM( degrees.degrees ) FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE degrees.year BETWEEN 1998 and 2002 GROUP BY campuses.campus	csu_1
SELECT campuses.campus , SUM( degrees.degrees ) FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE degrees.year BETWEEN 1998 and 2002 GROUP BY campuses.campus	csu_1
SELECT campuses.campus , SUM( degrees.degrees ) FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE campuses.county = 'Orange' AND degrees.year >= 2000 GROUP BY campuses.campus	csu_1
SELECT campuses.campus , SUM( degrees.degrees ) FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE campuses.county = 'Orange' AND degrees.year >= 2000 GROUP BY campuses.campus	csu_1
campuses , faculty	csu_1
SELECT campuses.campus FROM campuses JOIN faculty ON campuses.id = faculty.campus WHERE faculty.year = 2002 AND campuses.county = 'Orange'	csu_1
SELECT campuses.campus FROM campuses JOIN enrollments ON campuses.id = enrollments.campus WHERE enrollments.year = 1956 AND enrollments.totalenrollment_ay > 400 AND enrollments.fte_ay > 200	csu_1
SELECT campuses.campus FROM campuses JOIN enrollments ON campuses.id = enrollments.campus WHERE enrollments.year = 1956 AND enrollments.totalenrollment_ay > 400 AND enrollments.fte_ay > 200	csu_1
SELECT COUNT( * ) FROM campuses WHERE campuses.county = 'Los Angeles'	csu_1
SELECT COUNT( * ) FROM campuses WHERE campuses.county = 'LA'	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.county = 'Los Angeles'	csu_1
SELECT campuses.campus FROM campuses WHERE campuses.county = 'Los Angeles'	csu_1
SELECT degrees.degrees FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE campuses.campus = 'San Jose State University' AND degrees.year = 2000	csu_1
SELECT degrees.degrees FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE campuses.campus = 'San Jose State University' AND degrees.year = 2000	csu_1
SELECT degrees.degrees FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE campuses.campus = 'San Francisco State University' AND degrees.year = 2001	csu_1
SELECT degrees.degrees FROM campuses JOIN degrees ON campuses.id = degrees.campus WHERE campuses.campus = 'San Francisco State University' AND degrees.year = 2001	csu_1
SELECT SUM( faculty.faculty ) FROM faculty WHERE faculty.year = 2002	csu_1
SELECT SUM( faculty.faculty ) FROM faculty WHERE faculty.year = 2002	csu_1
SELECT faculty.faculty FROM faculty JOIN campuses ON faculty.campus = campuses.id WHERE faculty.year = 2002 AND campuses.campus = 'Long Beach State University'	csu_1
SELECT faculty.faculty FROM faculty JOIN campuses ON faculty.campus = campuses.id WHERE faculty.year = 2002 AND campuses.campus = 'Long Beach State University'	csu_1
SELECT faculty.faculty FROM faculty JOIN campuses ON faculty.campus = campuses.id WHERE faculty.year = 2004 AND campuses.campus = 'San Francisco State University'	csu_1
SELECT faculty.faculty FROM faculty JOIN campuses ON faculty.campus = campuses.id WHERE faculty.year = 2004 AND campuses.campus = 'San Francisco State University'	csu_1
SELECT campuses.campus FROM campuses JOIN faculty ON campuses.id = faculty.campus WHERE faculty.faculty BETWEEN 600 and 1000 AND campuses.year = 2004	csu_1
SELECT campuses.campus FROM campuses JOIN faculty ON campuses.id = faculty.campus WHERE faculty.faculty BETWEEN 600 and 1000 AND campuses.year = 2004	csu_1
SELECT faculty.faculty FROM campuses JOIN faculty ON campuses.id = faculty.campus JOIN degrees ON campuses.id = degrees.campus JOIN faculty ON faculty.year = degrees.year WHERE faculty.year = 2002 ORDER BY degrees.degrees DESC LIMIT 1	csu_1
SELECT faculty.faculty FROM campuses JOIN faculty ON campuses.id = faculty.campus JOIN degrees ON campuses.id = degrees.campus JOIN faculty ON faculty.year = degrees.year WHERE faculty.year = 2002 ORDER BY degrees.degrees DESC LIMIT 1	csu_1
SELECT faculty.faculty FROM campuses JOIN faculty ON campuses.id = faculty.campus JOIN degrees ON campuses.id = degrees.campus JOIN faculty ON faculty.year = degrees.year WHERE faculty.year = 2001 ORDER BY degrees.degrees ASC LIMIT 1	csu_1
SELECT faculty.faculty FROM campuses JOIN faculty ON campuses.id = faculty.campus JOIN degrees ON campuses.id = degrees.campus JOIN faculty ON faculty.year = degrees.year WHERE faculty.year = 2001 ORDER BY degrees.degrees ASC LIMIT 1	csu_1
SELECT SUM( discipline_enrollments.undergraduate ) FROM discipline_enrollments JOIN campuses ON discipline_enrollments.campus = campuses.id WHERE discipline_enrollments.year = 2004 AND campuses.campus = 'San Jose State University'	csu_1
SELECT SUM( discipline_enrollments.undergraduate ) FROM discipline_enrollments JOIN campuses ON discipline_enrollments.campus = campuses.id WHERE campuses.campus = 'uates are there at San'	csu_1
SELECT SUM( discipline_enrollments.graduate ) FROM discipline_enrollments JOIN campuses ON discipline_enrollments.campus = campuses.id WHERE discipline_enrollments.year = 2004 AND campuses.campus = 'San Francisco State University'	csu_1
SELECT SUM( discipline_enrollments.graduate ) FROM discipline_enrollments JOIN campuses ON discipline_enrollments.campus = campuses.id WHERE discipline_enrollments.year = 2004 AND campuses.campus = 'San Francisco State University'	csu_1
SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Francisco State University' AND csu_fees.year = 2000	csu_1
SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Francisco State University' AND csu_fees.year = 2000	csu_1
SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Jose State University' AND csu_fees.year = 2000	csu_1
SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Jose State University' AND csu_fees.year = 2000	csu_1
SELECT COUNT( * ) FROM campuses	csu_1
SELECT COUNT( * ) FROM campuses	csu_1
SELECT COUNT( * ) FROM candidate	candidate_poll
SELECT COUNT( * ) FROM candidate	candidate_poll
SELECT candidate.poll_source FROM candidate GROUP BY candidate.poll_source ORDER BY COUNT( * ) DESC LIMIT 1	candidate_poll
SELECT candidate.poll_source FROM candidate GROUP BY candidate.poll_source ORDER BY COUNT( * ) DESC LIMIT 1	candidate_poll
SELECT candidate.support_rate FROM candidate ORDER BY candidate.support_rate DESC LIMIT 3	candidate_poll
SELECT candidate.support_rate FROM candidate ORDER BY candidate.support_rate DESC LIMIT 3	candidate_poll
SELECT candidate.candidate_id FROM candidate ORDER BY candidate.oppose_rate ASC LIMIT 1	candidate_poll
SELECT candidate.candidate_id FROM candidate ORDER BY candidate.oppose_rate ASC LIMIT 1	candidate_poll
SELECT candidate.support_rate , candidate.consider_rate , candidate.oppose_rate FROM candidate ORDER BY candidate.unsure_rate ASC	candidate_poll
SELECT candidate.support_rate , candidate.consider_rate , candidate.oppose_rate FROM candidate ORDER BY candidate.unsure_rate ASC	candidate_poll
SELECT candidate.poll_source FROM candidate ORDER BY candidate.oppose_rate DESC LIMIT 1	candidate_poll
SELECT candidate.poll_source FROM candidate ORDER BY candidate.oppose_rate DESC LIMIT 1	candidate_poll
SELECT people.name FROM people ORDER BY people.date_of_birth ASC	candidate_poll
SELECT people.name FROM people ORDER BY people.date_of_birth ASC	candidate_poll
SELECT AVG( people.height ) , AVG( people.weight ) FROM people WHERE people.sex = 'M'	candidate_poll
SELECT AVG( people.height ) , AVG( people.weight ) FROM people WHERE people.sex = 'm'	candidate_poll
SELECT people.name FROM people WHERE people.height > 200 OR people.height<190	candidate_poll
SELECT people.name FROM people WHERE people.height > 200 OR people.height<190	candidate_poll
SELECT AVG( people.weight ) , MIN( people.weight ) , people.sex FROM people GROUP BY people.sex	candidate_poll
SELECT AVG( people.weight ) , MIN( people.weight ) , people.sex FROM people GROUP BY people.sex	candidate_poll
SELECT people.name , people.sex FROM people JOIN candidate ON people.people_id = candidate.people_id ORDER BY candidate.support_rate DESC LIMIT 1	candidate_poll
SELECT people.name , people.sex FROM people JOIN candidate ON people.people_id = candidate.people_id ORDER BY candidate.support_rate DESC LIMIT 1	candidate_poll
SELECT people.name , people.sex , MIN( candidate.oppose_rate ) FROM people JOIN candidate ON people.people_id = candidate.people_id GROUP BY people.sex	candidate_poll
SELECT people.name , people.sex , MIN( candidate.oppose_rate ) FROM people JOIN candidate ON people.people_id = candidate.people_id GROUP BY people.sex	candidate_poll
SELECT people.sex FROM people JOIN candidate ON people.people_id = candidate.people_id GROUP BY people.sex ORDER BY AVG( candidate.unsure_rate ) DESC LIMIT 1	candidate_poll
SELECT people.sex FROM people JOIN candidate ON people.people_id = candidate.people_id GROUP BY people.sex ORDER BY AVG( candidate.unsure_rate ) DESC LIMIT 1	candidate_poll
SELECT people.name FROM people WHERE people.people_id NOT IN (SELECT candidate.people_id FROM candidate)	candidate_poll
SELECT people.name FROM people WHERE people.people_id NOT IN (SELECT candidate.people_id FROM candidate)	candidate_poll
SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id WHERE candidate.support_rate<candidate.oppose_rate	candidate_poll
SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id WHERE candidate.support_rate<candidate.oppose_rate	candidate_poll
SELECT COUNT( * ) , people.sex FROM people WHERE people.weight > 85 GROUP BY people.sex	candidate_poll
SELECT COUNT( * ) , people.sex FROM people WHERE people.weight > 85 GROUP BY people.sex	candidate_poll
SELECT MAX( candidate.support_rate ) , MIN( candidate.consider_rate ) , MIN( candidate.oppose_rate ) FROM candidate	candidate_poll
SELECT MAX( candidate.support_rate ) , MIN( candidate.consider_rate ) , MIN( candidate.oppose_rate ) FROM candidate	candidate_poll
SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id WHERE people.sex = 'f' ORDER BY people.name ASC	candidate_poll
SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id WHERE people.sex = 'f' ORDER BY people.name ASC	candidate_poll
SELECT people.name FROM people WHERE people.height<(SELECT AVG( people.height ) FROM people)	candidate_poll
SELECT people.name FROM people WHERE people.height<(SELECT AVG( people.height ) FROM people)	candidate_poll
SELECT * FROM people	candidate_poll
SELECT * FROM people	candidate_poll
SELECT movie.title FROM movie WHERE movie.director = 'steven spielberg'	movie_1
SELECT movie.title FROM movie WHERE movie.director = 'Steven Spielberg'	movie_1
SELECT movie.title FROM movie WHERE movie.director = 'James Cameron' AND movie.year > 2000	movie_1
SELECT movie.title FROM movie WHERE movie.director = 'James Cameron' AND movie.year > 2000	movie_1
SELECT COUNT( * ) FROM movie WHERE movie.year<2000	movie_1
SELECT COUNT( * ) FROM movie WHERE movie.year<2000	movie_1
SELECT movie.director FROM movie WHERE movie.title = 'Avatar'	movie_1
SELECT movie.director FROM movie WHERE movie.title = 'Avatar'	movie_1
SELECT COUNT( * ) FROM reviewer	movie_1
SELECT COUNT( * ) FROM reviewer	movie_1
SELECT reviewer.rid FROM reviewer WHERE reviewer.name LIKE '%Mike%'	movie_1
SELECT reviewer.rid FROM reviewer WHERE reviewer.name LIKE '%Mike%'	movie_1
SELECT reviewer.rid FROM reviewer WHERE reviewer.name = 'Daniel Lewis'	movie_1
SELECT reviewer.rid FROM reviewer WHERE reviewer.name = 'Daniel Lewis'	movie_1
SELECT COUNT( * ) FROM rating WHERE rating.stars > 3	movie_1
SELECT COUNT( * ) FROM rating WHERE rating.stars > 3	movie_1
SELECT MAX( rating.stars ) , MIN( rating.stars ) FROM rating	movie_1
SELECT MAX( rating.stars ) , MIN( rating.stars ) FROM rating	movie_1
SELECT DISTINCT movie.year FROM movie JOIN rating ON movie.mid = rating.mid WHERE rating.stars >= 4 ORDER BY movie.year ASC	movie_1
SELECT DISTINCT movie.year FROM movie JOIN rating ON movie.mid = rating.mid WHERE rating.stars >= 4 ORDER BY movie.year ASC	movie_1
SELECT movie.director , movie.title FROM movie JOIN rating ON movie.mid = rating.mid WHERE rating.stars = 5	movie_1
SELECT movie.director , movie.title FROM movie JOIN rating ON movie.mid = rating.mid WHERE rating.stars = 5	movie_1
SELECT reviewer.name , AVG( rating.stars ) FROM rating JOIN reviewer ON rating.rid = reviewer.rid GROUP BY reviewer.name	movie_1
SELECT reviewer.name , AVG( rating.stars ) FROM rating JOIN reviewer ON rating.rid = reviewer.rid GROUP BY reviewer.name	movie_1
SELECT movie.title FROM movie WHERE movie.mid NOT IN (SELECT rating.mid FROM rating)	movie_1
SELECT movie.title FROM movie WHERE movie.mid NOT IN (SELECT rating.mid FROM rating)	movie_1
SELECT DISTINCT reviewer.name FROM reviewer JOIN rating ON reviewer.rid = rating.rid WHERE rating.ratingdate = 'null'	movie_1
SELECT DISTINCT reviewer.name FROM reviewer JOIN rating ON reviewer.rid = rating.rid WHERE rating.ratingdate = 'null'	movie_1
SELECT AVG( rating.stars ) , movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE movie.year = (SELECT MIN( movie.year ) FROM movie)	movie_1
SELECT AVG( rating.stars ) , movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE movie.year = (SELECT MIN( movie.year ) FROM movie)	movie_1
SELECT movie.title FROM movie WHERE movie.year = (SELECT MAX( movie.year ) FROM movie)	movie_1
SELECT movie.title FROM movie WHERE movie.year = (SELECT MAX( movie.year ) FROM movie)	movie_1
SELECT MAX( rating.stars ) , movie.year FROM rating JOIN movie ON rating.mid = movie.mid WHERE movie.year = (SELECT MAX( movie.year ) FROM movie)	movie_1
SELECT MAX( rating.stars ) , movie.year FROM rating JOIN movie ON rating.mid = movie.mid WHERE movie.year = (SELECT MAX( movie.year ) FROM movie)	movie_1
SELECT movie.title FROM movie WHERE movie.year > (SELECT MAX( movie.year ) FROM movie WHERE movie.director = 'Steven Spielberg')	movie_1
SELECT movie.title FROM movie WHERE movie.year > (SELECT MAX( movie.year ) FROM movie WHERE movie.director = 'Steven Spielberg')	movie_1
movie.director = movie.director	movie_1
movie.director , movie.title	movie_1
SELECT reviewer.name , movie.title , rating.stars , rating.ratingdate FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid ORDER BY reviewer.name , movie.title , rating.stars ASC	movie_1
SELECT reviewer.name , movie.title , rating.stars , rating.ratingdate FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid ORDER BY reviewer.name , movie.title , rating.stars ASC	movie_1
SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid GROUP BY rating.rid HAVING COUNT( * ) >= 3	movie_1
SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid GROUP BY rating.rid HAVING COUNT( * ) >= 3	movie_1
SELECT DISTINCT reviewer.name FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE movie.title = 'Gone with the Wind'	movie_1
SELECT DISTINCT reviewer.name FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE movie.title = 'Gone with the Wind'	movie_1
SELECT DISTINCT movie.director FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Sarah Martinez'	movie_1
SELECT DISTINCT movie.director FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Sarah Martinez'	movie_1
SELECT DISTINCT reviewer.name , movie.title , rating.stars FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid JOIN movie ON movie.director = reviewer.name	movie_1
SELECT DISTINCT reviewer.name , movie.title , rating.stars FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid JOIN movie ON movie.director = reviewer.name	movie_1
SELECT reviewer.name FROM reviewer UNION SELECT movie.title FROM movie	movie_1
SELECT reviewer.name FROM reviewer UNION SELECT movie.title FROM movie	movie_1
SELECT DISTINCT movie.title FROM movie EXCEPT SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Chris Jackson'	movie_1
SELECT DISTINCT movie.title FROM movie EXCEPT SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Chris Jackson'	movie_1
SELECT movie.title , movie.director FROM movie JOIN movie ON movie.director = movie.director WHERE movie.title != movie.title ORDER BY movie.director , movie.title ASC	movie_1
SELECT movie.title , movie.director FROM movie JOIN movie ON movie.director = movie.director WHERE movie.title != movie.title ORDER BY movie.director , movie.title ASC	movie_1
SELECT movie.title , movie.year FROM movie JOIN movie ON movie.director = movie.director WHERE movie.title != movie.title	movie_1
SELECT movie.title , movie.year FROM movie JOIN movie ON movie.director = movie.director WHERE movie.title != movie.title	movie_1
SELECT movie.director FROM movie GROUP BY movie.director HAVING COUNT( * ) = 1	movie_1
SELECT movie.director FROM movie GROUP BY movie.director HAVING COUNT( * ) = 1	movie_1
SELECT movie.director FROM movie WHERE movie.director != 'NULL' GROUP BY movie.director HAVING COUNT( * ) = 1	movie_1
SELECT movie.director FROM movie WHERE movie.director != 'NULL' GROUP BY movie.director HAVING COUNT( * ) = 1	movie_1
SELECT COUNT( * ) , movie.director FROM movie JOIN rating ON movie.mid = rating.mid GROUP BY movie.director	movie_1
SELECT COUNT( * ) , movie.director FROM movie JOIN rating ON movie.mid = rating.mid GROUP BY movie.director	movie_1
SELECT movie.title , AVG( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.mid ORDER BY AVG( rating.stars ) DESC LIMIT 1	movie_1
SELECT movie.title , AVG( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.mid ORDER BY AVG( rating.stars ) DESC LIMIT 1	movie_1
SELECT movie.title , AVG( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.mid ORDER BY AVG( rating.stars ) ASC LIMIT 1	movie_1
SELECT movie.title , AVG( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.mid ORDER BY AVG( rating.stars ) ASC LIMIT 1	movie_1
SELECT movie.title , movie.year FROM rating JOIN movie ON rating.mid = movie.mid ORDER BY rating.stars DESC LIMIT 3	movie_1
SELECT movie.title , movie.year FROM rating JOIN movie ON rating.mid = movie.mid ORDER BY rating.stars DESC LIMIT 3	movie_1
SELECT movie.title , rating.stars , movie.director , MAX( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid WHERE movie.director != 'null'	movie_1
SELECT movie.title , rating.stars , movie.director , MAX( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid WHERE movie.director != 'yes'	movie_1
SELECT movie.title , rating.rid , rating.stars , MIN( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.rid	movie_1
SELECT movie.title , rating.rid , rating.stars , MIN( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.rid	movie_1
SELECT movie.title , rating.stars , movie.director , MIN( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY movie.director	movie_1
SELECT movie.title , rating.stars , movie.director , MIN( rating.stars ) FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY movie.director	movie_1
SELECT movie.title , rating.mid FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.mid ORDER BY COUNT( * ) DESC LIMIT 1	movie_1
SELECT movie.title , rating.mid FROM rating JOIN movie ON rating.mid = movie.mid GROUP BY rating.mid ORDER BY COUNT( * ) DESC LIMIT 1	movie_1
SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE rating.stars BETWEEN 3 and 5	movie_1
SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE rating.stars BETWEEN 3 and 5	movie_1
SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE rating.stars > 3	movie_1
SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE rating.stars > 3	movie_1
SELECT rating.mid , AVG( rating.stars ) FROM rating WHERE rating.mid NOT IN (SELECT rating.mid FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Brittany Harris')	movie_1
SELECT rating.mid , AVG( rating.stars ) FROM rating WHERE rating.mid NOT IN (SELECT rating.mid FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Brittany Harris')	movie_1
SELECT rating.mid FROM rating EXCEPT SELECT rating.mid FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Brittany Harris'	movie_1
SELECT rating.mid FROM rating EXCEPT SELECT rating.mid FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Harris'	movie_1
SELECT rating.mid , AVG( rating.stars ) FROM rating GROUP BY rating.mid HAVING COUNT( * ) >= 2	movie_1
SELECT rating.mid , AVG( rating.stars ) FROM rating GROUP BY rating.mid HAVING COUNT( * ) >= 2	movie_1
SELECT rating.rid FROM rating EXCEPT SELECT rating.rid FROM rating WHERE rating.stars = 4	movie_1
SELECT rating.rid FROM rating EXCEPT SELECT rating.rid FROM rating WHERE rating.stars = 4	movie_1
SELECT rating.rid FROM rating WHERE rating.stars != 4	movie_1
SELECT rating.rid FROM rating WHERE rating.stars != 4	movie_1
SELECT DISTINCT movie.title FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Brittany Harris' OR movie.year > 2000	movie_1
SELECT DISTINCT movie.title FROM rating JOIN movie ON rating.mid = movie.mid JOIN reviewer ON rating.rid = reviewer.rid WHERE reviewer.name = 'Brittany Harris' OR movie.year > 2000	movie_1
SELECT movie.title FROM movie WHERE movie.director = 'James Cameron' OR movie.year<1980	movie_1
SELECT movie.title FROM movie WHERE movie.director = 'James Cameron' OR movie.year<1980	movie_1
SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE rating.stars = 3 INTERSECT SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE rating.stars = 4	movie_1
SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE rating.stars = 3 INTERSECT SELECT reviewer.name FROM rating JOIN reviewer ON rating.rid = reviewer.rid WHERE rating.stars = 4	movie_1
SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE rating.stars = 3 INTERSECT SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE rating.stars = 4	movie_1
SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE rating.stars = 3 INTERSECT SELECT movie.title FROM rating JOIN movie ON rating.mid = movie.mid WHERE rating.stars = 4	movie_1
SELECT COUNT( * ) FROM county_public_safety	county_public_safety
SELECT COUNT( * ) FROM county_public_safety	county_public_safety
SELECT county_public_safety.name FROM county_public_safety ORDER BY county_public_safety.population DESC	county_public_safety
SELECT county_public_safety.name FROM county_public_safety ORDER BY county_public_safety.population DESC	county_public_safety
SELECT DISTINCT county_public_safety.police_force FROM county_public_safety WHERE county_public_safety.location != 'east'	county_public_safety
SELECT DISTINCT county_public_safety.police_force FROM county_public_safety WHERE county_public_safety.location != 'East'	county_public_safety
SELECT MIN( county_public_safety.crime_rate ) , MAX( county_public_safety.crime_rate ) FROM county_public_safety	county_public_safety
SELECT MIN( county_public_safety.crime_rate ) , MAX( county_public_safety.crime_rate ) FROM county_public_safety	county_public_safety
SELECT county_public_safety.crime_rate FROM county_public_safety ORDER BY county_public_safety.police_officers ASC	county_public_safety
SELECT county_public_safety.crime_rate FROM county_public_safety ORDER BY county_public_safety.police_officers ASC	county_public_safety
SELECT city.name FROM city ORDER BY city.name ASC	county_public_safety
SELECT city.name FROM city ORDER BY city.name ASC	county_public_safety
SELECT city.hispanic FROM city WHERE city.black > 10	county_public_safety
SELECT city.hispanic FROM city WHERE city.black > 10	county_public_safety
SELECT county_public_safety.name FROM county_public_safety ORDER BY county_public_safety.population DESC LIMIT 1	county_public_safety
SELECT county_public_safety.name FROM county_public_safety ORDER BY county_public_safety.population DESC LIMIT 1	county_public_safety
SELECT city.name FROM city ORDER BY city.white DESC LIMIT 5	county_public_safety
SELECT city.name FROM city ORDER BY city.white DESC LIMIT 5	county_public_safety
SELECT city.name , county_public_safety.name FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id	county_public_safety
SELECT city.name , county_public_safety.name FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id	county_public_safety
SELECT city.white , county_public_safety.crime_rate FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id	county_public_safety
SELECT city.white , county_public_safety.crime_rate FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id	county_public_safety
SELECT city.name FROM city WHERE city.county_id = (SELECT county_public_safety.county_id FROM county_public_safety ORDER BY county_public_safety.police_officers DESC LIMIT 1)	county_public_safety
SELECT city.name FROM city WHERE city.county_id = (SELECT county_public_safety.county_id FROM county_public_safety ORDER BY county_public_safety.police_officers DESC LIMIT 1)	county_public_safety
SELECT COUNT( * ) FROM city WHERE city.county_id IN (SELECT county_public_safety.county_id FROM county_public_safety WHERE county_public_safety.population > 20000)	county_public_safety
SELECT COUNT( * ) FROM city WHERE city.county_id IN (SELECT county_public_safety.county_id FROM county_public_safety WHERE county_public_safety.population > 20000)	county_public_safety
SELECT county_public_safety.crime_rate FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id WHERE city.white > 90	county_public_safety
SELECT county_public_safety.crime_rate FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id WHERE city.white > 90	county_public_safety
SELECT county_public_safety.police_force , COUNT( * ) FROM county_public_safety GROUP BY county_public_safety.police_force	county_public_safety
SELECT county_public_safety.police_force , COUNT( * ) FROM county_public_safety GROUP BY county_public_safety.police_force	county_public_safety
SELECT county_public_safety.location FROM county_public_safety GROUP BY county_public_safety.location ORDER BY COUNT( * ) DESC LIMIT 1	county_public_safety
SELECT county_public_safety.location FROM county_public_safety GROUP BY county_public_safety.location ORDER BY COUNT( * ) DESC LIMIT 1	county_public_safety
SELECT county_public_safety.name FROM county_public_safety WHERE county_public_safety.county_id NOT IN (SELECT city.county_id FROM city)	county_public_safety
SELECT county_public_safety.name FROM county_public_safety WHERE county_public_safety.county_id NOT IN (SELECT city.county_id FROM city)	county_public_safety
SELECT county_public_safety.police_force FROM county_public_safety WHERE county_public_safety.location = 'east' INTERSECT SELECT county_public_safety.police_force FROM county_public_safety WHERE county_public_safety.location = 'west'	county_public_safety
SELECT county_public_safety.police_force FROM county_public_safety WHERE county_public_safety.location = 'East' INTERSECT SELECT county_public_safety.police_force FROM county_public_safety WHERE county_public_safety.location = 'West'	county_public_safety
SELECT city.name FROM city WHERE city.county_id IN (SELECT county_public_safety.county_id FROM county_public_safety WHERE county_public_safety.crime_rate<100)	county_public_safety
SELECT city.name FROM city WHERE city.county_id IN (SELECT county_public_safety.county_id FROM county_public_safety WHERE county_public_safety.crime_rate<100)	county_public_safety
SELECT county_public_safety.case_burden FROM county_public_safety ORDER BY county_public_safety.population DESC	county_public_safety
SELECT county_public_safety.case_burden FROM county_public_safety ORDER BY county_public_safety.population DESC	county_public_safety
SELECT rooms.roomname FROM rooms WHERE rooms.baseprice<160 AND rooms.beds = 2 AND rooms.decor = 'modern'	inn_1
SELECT rooms.roomname FROM rooms WHERE rooms.baseprice<160 AND rooms.beds = 2 AND rooms.decor = 'modern'	inn_1
SELECT rooms.roomname , rooms.roomid FROM rooms WHERE rooms.baseprice > 160 AND rooms.maxoccupancy > 2	inn_1
SELECT rooms.roomname , rooms.roomid FROM rooms WHERE rooms.baseprice > 160 AND rooms.maxoccupancy > 2	inn_1
SELECT rooms.roomname FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room ORDER BY COUNT( * ) DESC LIMIT 1	inn_1
SELECT rooms.roomname FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room ORDER BY COUNT( * ) DESC LIMIT 1	inn_1
SELECT reservations.kids FROM reservations WHERE reservations.firstname = 'ROY' AND reservations.lastname = 'SWEAZY'	inn_1
SELECT reservations.kids FROM reservations WHERE reservations.firstname = 'ROY' AND reservations.lastname = 'SWEAZ'	inn_1
SELECT COUNT( * ) FROM reservations WHERE reservations.firstname = 'ROY' AND reservations.lastname = 'SWEAZY'	inn_1
SELECT COUNT( * ) FROM reservations WHERE reservations.firstname = 'ROY' AND reservations.lastname = 'SWEAZY'	inn_1
SELECT rooms.roomname , reservations.rate , reservations.checkin , reservations.checkout FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room ORDER BY reservations.rate DESC LIMIT 1	inn_1
SELECT rooms.roomname , reservations.rate , reservations.checkin , reservations.checkout FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room ORDER BY reservations.rate DESC LIMIT 1	inn_1
SELECT reservations.adults FROM reservations WHERE reservations.firstname = 'CONRAD' AND reservations.lastname = 'SELBIG' AND reservations.lastname = 'SELBIG'	inn_1
SELECT reservations.adults FROM reservations WHERE reservations.firstname = 'CONRAD' AND reservations.lastname = 'SELBIG' AND reservations.lastname = 'SELBIG'	inn_1
SELECT reservations.kids FROM reservations WHERE reservations.firstname = 'DAMIEN' AND reservations.lastname = 'TRACHSEL' AND reservations.lastname = 'TRACHSEL'	inn_1
SELECT reservations.kids FROM reservations WHERE reservations.firstname = 'DAMIEN' AND reservations.lastname = 'TRACHSEL' AND reservations.lastname = 'TRACHSEL'	inn_1
SELECT SUM( rooms.beds ) FROM rooms WHERE rooms.bedtype = 'king'	inn_1
SELECT SUM( rooms.beds ) FROM rooms WHERE rooms.bedtype = 'king'	inn_1
SELECT rooms.roomname , rooms.decor FROM rooms WHERE rooms.bedtype = 'king' ORDER BY rooms.baseprice ASC	inn_1
SELECT rooms.roomname , rooms.decor FROM rooms WHERE rooms.bedtype = 'king' ORDER BY rooms.baseprice ASC	inn_1
SELECT rooms.roomname , rooms.baseprice FROM rooms ORDER BY rooms.baseprice ASC LIMIT 1	inn_1
SELECT rooms.roomname , rooms.baseprice FROM rooms ORDER BY rooms.baseprice ASC LIMIT 1	inn_1
SELECT rooms.decor FROM rooms WHERE rooms.roomname = 'Recluse and defiance'	inn_1
SELECT rooms.decor FROM rooms WHERE rooms.roomname = 'Recluse and defiance'	inn_1
SELECT rooms.bedtype , AVG( rooms.baseprice ) FROM rooms GROUP BY rooms.bedtype	inn_1
SELECT rooms.bedtype , AVG( rooms.baseprice ) FROM rooms GROUP BY rooms.bedtype	inn_1
SELECT SUM( rooms.maxoccupancy ) FROM rooms WHERE rooms.decor = 'modern'	inn_1
SELECT SUM( rooms.maxoccupancy ) FROM rooms WHERE rooms.decor = 'modern'	inn_1
SELECT rooms.decor FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY rooms.decor ORDER BY COUNT( rooms.decor ) ASC LIMIT 1	inn_1
SELECT rooms.decor FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY rooms.decor ORDER BY COUNT( rooms.decor ) ASC LIMIT 1	inn_1
SELECT COUNT( * ) FROM rooms WHERE rooms.maxoccupancy = (SELECT MAX( rooms.maxoccupancy ) FROM rooms)	inn_1
SELECT reservations.adults , reservations.kids , COUNT( * ) FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.adults , reservations.kids	inn_1
SELECT DISTINCT reservations.firstname , reservations.lastname FROM reservations JOIN rooms ON reservations.room = rooms.roomid WHERE rooms.baseprice > rooms.baseprice	inn_1
SELECT DISTINCT reservations.firstname , reservations.lastname FROM reservations JOIN rooms ON reservations.room = rooms.roomid WHERE rooms.baseprice > (SELECT MAX( rooms.baseprice ) FROM rooms)	inn_1
SELECT COUNT( * ) FROM rooms	inn_1
SELECT COUNT( * ) FROM rooms	inn_1
SELECT COUNT( * ) FROM rooms WHERE rooms.bedtype = 'king'	inn_1
SELECT COUNT( * ) FROM rooms WHERE rooms.bedtype = 'king'	inn_1
SELECT rooms.bedtype , COUNT( * ) FROM rooms GROUP BY rooms.bedtype	inn_1
SELECT rooms.bedtype , COUNT( * ) FROM rooms GROUP BY rooms.bedtype	inn_1
SELECT rooms.roomname FROM rooms ORDER BY rooms.maxoccupancy DESC LIMIT 1	inn_1
SELECT rooms.roomname FROM rooms ORDER BY rooms.maxoccupancy DESC LIMIT 1	inn_1
SELECT rooms.roomid , rooms.roomname FROM rooms ORDER BY rooms.baseprice DESC LIMIT 1	inn_1
SELECT rooms.roomid , rooms.roomname FROM rooms ORDER BY rooms.baseprice DESC LIMIT 1	inn_1
SELECT rooms.roomname , rooms.bedtype FROM rooms WHERE rooms.decor = 'traditional'	inn_1
SELECT rooms.roomname , rooms.bedtype FROM rooms WHERE rooms.decor = 'traditional'	inn_1
SELECT rooms.decor , COUNT( * ) FROM rooms WHERE rooms.bedtype = 'king' GROUP BY rooms.decor	inn_1
SELECT rooms.decor , COUNT( * ) FROM rooms WHERE rooms.bedtype = 'king' GROUP BY rooms.decor	inn_1
SELECT rooms.decor , AVG( rooms.baseprice ) , MIN( rooms.baseprice ) FROM rooms GROUP BY rooms.decor	inn_1
SELECT rooms.decor , AVG( rooms.baseprice ) , MIN( rooms.baseprice ) FROM rooms GROUP BY rooms.decor	inn_1
SELECT rooms.roomname FROM rooms ORDER BY rooms.baseprice ASC	inn_1
SELECT rooms.roomname FROM rooms ORDER BY rooms.baseprice ASC	inn_1
SELECT rooms.decor , COUNT( * ) FROM rooms WHERE rooms.baseprice > 120 GROUP BY rooms.decor	inn_1
SELECT rooms.decor , COUNT( * ) FROM rooms WHERE rooms.baseprice > 120 GROUP BY rooms.decor	inn_1
SELECT rooms.bedtype , AVG( rooms.baseprice ) FROM rooms GROUP BY rooms.bedtype	inn_1
SELECT rooms.bedtype , AVG( rooms.baseprice ) FROM rooms GROUP BY rooms.bedtype	inn_1
SELECT rooms.roomname FROM rooms WHERE rooms.bedtype = 'king' OR rooms.bedtype = 'queen'	inn_1
SELECT rooms.roomname FROM rooms WHERE rooms.bedtype = 'king' OR rooms.bedtype = 'queen'	inn_1
SELECT COUNT( DISTINCT rooms.bedtype ) FROM rooms	inn_1
SELECT COUNT( DISTINCT rooms.bedtype ) FROM rooms	inn_1
SELECT rooms.roomid , rooms.roomname FROM rooms ORDER BY rooms.baseprice DESC LIMIT 3	inn_1
SELECT rooms.roomid , rooms.roomname FROM rooms ORDER BY rooms.baseprice DESC LIMIT 3	inn_1
SELECT rooms.roomname FROM rooms WHERE rooms.baseprice > (SELECT AVG( rooms.baseprice ) FROM rooms)	inn_1
SELECT rooms.roomname FROM rooms WHERE rooms.baseprice > (SELECT AVG( rooms.baseprice ) FROM rooms)	inn_1
SELECT COUNT( * ) FROM rooms WHERE rooms.roomid NOT IN (SELECT DISTINCT reservations.room FROM reservations)	inn_1
SELECT COUNT( * ) FROM rooms WHERE rooms.roomid NOT IN (SELECT DISTINCT reservations.room FROM reservations)	inn_1
SELECT rooms.roomname , COUNT( * ) , reservations.room FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room	inn_1
SELECT rooms.roomname , COUNT( * ) , reservations.room FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room	inn_1
SELECT rooms.roomname FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room HAVING COUNT( * ) > 60	inn_1
SELECT rooms.roomname FROM reservations JOIN rooms ON reservations.room = rooms.roomid GROUP BY reservations.room HAVING COUNT( * ) > 60	inn_1
SELECT rooms.roomname FROM rooms WHERE rooms.baseprice BETWEEN 120 and 150	inn_1
SELECT rooms.roomname FROM rooms WHERE rooms.baseprice BETWEEN 120 and 150	inn_1
SELECT rooms.roomname FROM reservations JOIN rooms ON reservations.room = rooms.roomid WHERE reservations.firstname LIKE '%ROY%'	inn_1
SELECT rooms.roomname FROM reservations JOIN rooms ON reservations.room = rooms.roomid WHERE reservations.firstname LIKE '%ROY%'	inn_1
SELECT customer_master_index.cmi_details FROM customer_master_index JOIN cmi_cross_references ON customer_master_index.master_customer_id = cmi_cross_references.master_customer_id WHERE cmi_cross_references.source_system_code = 'Tax'	local_govt_mdm
SELECT cmi_cross_references.cmi_cross_ref_id , cmi_cross_references.source_system_code FROM cmi_cross_references JOIN council_tax ON cmi_cross_references.cmi_cross_ref_id = council_tax.cmi_cross_ref_id GROUP BY cmi_cross_references.cmi_cross_ref_id HAVING COUNT( * ) >= 1	local_govt_mdm
SELECT cmi_cross_references.cmi_cross_ref_id , cmi_cross_references.master_customer_id , COUNT( * ) FROM business_rates JOIN cmi_cross_references ON business_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id GROUP BY cmi_cross_references.cmi_cross_ref_id	local_govt_mdm
SELECT cmi_cross_references.source_system_code , benefits_overpayments.council_tax_id FROM cmi_cross_references JOIN benefits_overpayments ON cmi_cross_references.cmi_cross_ref_id = benefits_overpayments.cmi_cross_ref_id ORDER BY benefits_overpayments.council_tax_id ASC	local_govt_mdm
SELECT cmi_cross_references.source_system_code , cmi_cross_references.master_customer_id , parking_fines.council_tax_id FROM cmi_cross_references JOIN parking_fines ON cmi_cross_references.cmi_cross_ref_id = parking_fines.cmi_cross_ref_id	local_govt_mdm
SELECT rent_arrears.council_tax_id FROM rent_arrears JOIN cmi_cross_references ON rent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id JOIN customer_master_index ON customer_master_index.master_customer_id = cmi_cross_references.master_customer_id WHERE customer_master_index.cmi_details != 'Schmidt, Kertzmann and Lubowitz'	local_govt_mdm
SELECT electoral_register.electoral_register_id FROM electoral_register JOIN cmi_cross_references ON electoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id WHERE cmi_cross_references.source_system_code = 'Electoral' OR cmi_cross_references.source_system_code = 'Tax'	local_govt_mdm
SELECT COUNT( DISTINCT cmi_cross_references.source_system_code ) FROM cmi_cross_references	local_govt_mdm
SELECT * FROM customer_master_index ORDER BY customer_master_index.cmi_details DESC	local_govt_mdm
SELECT parking_fines.council_tax_id , parking_fines.cmi_cross_ref_id FROM parking_fines	local_govt_mdm
SELECT COUNT( * ) FROM rent_arrears	local_govt_mdm
SELECT DISTINCT cmi_cross_references.source_system_code FROM customer_master_index JOIN cmi_cross_references ON customer_master_index.master_customer_id = cmi_cross_references.master_customer_id WHERE customer_master_index.cmi_details = 'Becker and Wyman'	local_govt_mdm
SELECT cmi_cross_references.cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT parking_fines.cmi_cross_ref_id FROM parking_fines	local_govt_mdm
SELECT DISTINCT cmi_cross_references.source_system_code FROM cmi_cross_references WHERE cmi_cross_references.source_system_code LIKE '%en%'	local_govt_mdm
SELECT COUNT( * ) FROM party	party_host
SELECT COUNT( * ) FROM party	party_host
SELECT party.party_theme FROM party ORDER BY party.number_of_hosts ASC	party_host
SELECT party.party_theme FROM party ORDER BY party.number_of_hosts ASC	party_host
SELECT party.party_theme , party.location FROM party	party_host
SELECT party.party_theme , party.location FROM party	party_host
SELECT party.first_year , party.last_year FROM party WHERE party.party_theme = 'Spring' OR party.party_theme = 'Teqnology'	party_host
SELECT party.first_year , party.last_year FROM party WHERE party.party_theme = 'Spring' OR party.party_theme = 'Teqnology'	party_host
SELECT AVG( party.number_of_hosts ) FROM party	party_host
SELECT AVG( party.number_of_hosts ) FROM party	party_host
SELECT party.location FROM party ORDER BY party.number_of_hosts DESC LIMIT 1	party_host
SELECT party.location FROM party ORDER BY party.number_of_hosts DESC LIMIT 1	party_host
SELECT host.nationality , COUNT( * ) FROM host GROUP BY host.nationality	party_host
SELECT host.nationality , COUNT( * ) FROM host GROUP BY host.nationality	party_host
SELECT host.nationality FROM host GROUP BY host.nationality ORDER BY COUNT( * ) DESC LIMIT 1	party_host
SELECT host.nationality FROM host GROUP BY host.nationality ORDER BY COUNT( * ) DESC LIMIT 1	party_host
SELECT host.nationality FROM host WHERE host.age > 45 INTERSECT SELECT host.nationality FROM host WHERE host.age<35	party_host
SELECT host.nationality FROM host WHERE host.age > 45 INTERSECT SELECT host.nationality FROM host WHERE host.age<35	party_host
SELECT party.party_theme , host.name FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id	party_host
SELECT party.party_theme , host.name FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id	party_host
SELECT party.location , host.name FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id ORDER BY host.age ASC	party_host
SELECT party.location , host.name FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id ORDER BY host.age ASC	party_host
SELECT party.location FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id WHERE host.age > 50	party_host
SELECT party.location FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id WHERE host.age > 50	party_host
SELECT host.name FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id WHERE party.number_of_hosts > 20	party_host
SELECT host.name FROM party_host JOIN host ON party_host.host_id = host.host_id JOIN party ON party_host.party_id = party.party_id WHERE party.number_of_hosts > 20	party_host
SELECT host.name , host.nationality FROM host ORDER BY host.age DESC LIMIT 1	party_host
SELECT host.name , host.nationality FROM host ORDER BY host.age DESC LIMIT 1	party_host
SELECT host.name FROM host WHERE host.host_id NOT IN (SELECT party_host.host_id FROM party_host)	party_host
SELECT host.name FROM host WHERE host.host_id NOT IN (SELECT party_host.host_id FROM party_host)	party_host
SELECT COUNT( * ) FROM region	storm_record
SELECT COUNT( * ) FROM region	storm_record
SELECT region.region_code , region.region_name FROM region ORDER BY region.region_code ASC	storm_record
SELECT region.region_code , region.region_name FROM region ORDER BY region.region_code ASC	storm_record
SELECT region.region_name FROM region ORDER BY region.region_name ASC	storm_record
SELECT region.region_name FROM region ORDER BY region.region_name ASC	storm_record
SELECT region.region_name FROM region WHERE region.region_name != 'Denmark'	storm_record
SELECT region.region_name FROM region WHERE region.region_name != 'Denmark'	storm_record
SELECT COUNT( * ) FROM storm WHERE storm.number_deaths = 1	storm_record
SELECT COUNT( * ) FROM storm WHERE storm.number_deaths > 1	storm_record
SELECT storm.name , storm.dates_active , storm.number_deaths FROM storm WHERE storm.number_deaths >= 1	storm_record
SELECT storm.name , storm.dates_active , storm.number_deaths FROM storm WHERE storm.number_deaths >= 1	storm_record
SELECT AVG( storm.damage_millions_usd ) , MAX( storm.damage_millions_usd ) FROM storm WHERE storm.max_speed > 1000	storm_record
SELECT AVG( storm.damage_millions_usd ) , MAX( storm.damage_millions_usd ) FROM storm WHERE storm.max_speed > 1000	storm_record
SELECT SUM( storm.number_deaths ) , SUM( storm.damage_millions_usd ) FROM storm WHERE storm.max_speed > (SELECT AVG( storm.max_speed ) FROM storm)	storm_record
SELECT SUM( storm.number_deaths ) , SUM( storm.damage_millions_usd ) FROM storm WHERE storm.max_speed > (SELECT AVG( storm.max_speed ) FROM storm)	storm_record
SELECT storm.name , storm.damage_millions_usd FROM storm ORDER BY storm.max_speed DESC	storm_record
SELECT storm.name , storm.damage_millions_usd FROM storm ORDER BY storm.max_speed DESC	storm_record
SELECT COUNT( DISTINCT affected_region.region_id ) FROM affected_region	storm_record
SELECT COUNT( DISTINCT affected_region.region_id ) FROM affected_region	storm_record
SELECT region.region_name FROM region WHERE region.region_id NOT IN (SELECT affected_region.region_id FROM affected_region)	storm_record
SELECT region.region_name FROM region WHERE region.region_id NOT IN (SELECT affected_region.region_id FROM affected_region)	storm_record
SELECT region.region_name , COUNT( * ) FROM region JOIN affected_region ON region.region_id = affected_region.region_id GROUP BY region.region_id	storm_record
SELECT region.region_name , COUNT( * ) FROM region JOIN affected_region ON region.region_id = affected_region.region_id GROUP BY region.region_id	storm_record
SELECT storm.name , COUNT( * ) FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id	storm_record
SELECT storm.name , COUNT( * ) FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id	storm_record
SELECT storm.name , storm.max_speed FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id ORDER BY COUNT( * ) DESC LIMIT 1	storm_record
SELECT storm.name , storm.max_speed FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id ORDER BY COUNT( * ) DESC LIMIT 1	storm_record
SELECT storm.name FROM storm WHERE storm.storm_id NOT IN (SELECT affected_region.storm_id FROM affected_region)	storm_record
SELECT storm.name FROM storm WHERE storm.storm_id NOT IN (SELECT affected_region.storm_id FROM affected_region)	storm_record
SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id HAVING COUNT( * ) >= 2 INTERSECT SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id HAVING SUM( affected_region.number_city_affected ) >= 10	storm_record
SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id HAVING COUNT( * ) >= 2 INTERSECT SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id HAVING SUM( affected_region.number_city_affected ) >= 10	storm_record
SELECT storm.name FROM storm EXCEPT SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id HAVING COUNT( * ) >= 2	storm_record
SELECT storm.name FROM storm EXCEPT SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id GROUP BY storm.storm_id HAVING COUNT( * ) >= 2	storm_record
SELECT region.region_name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE storm.number_deaths >= 10	storm_record
SELECT region.region_name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE storm.number_deaths >= 10	storm_record
SELECT storm.name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE region.region_name = 'Denmark'	storm_record
SELECT storm.name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE region.region_name = 'Denmark'	storm_record
SELECT region.region_name FROM region JOIN affected_region ON region.region_id = affected_region.region_id GROUP BY region.region_id HAVING COUNT( * ) >= 2	storm_record
SELECT region.region_name FROM region JOIN affected_region ON region.region_id = affected_region.region_id GROUP BY region.region_id HAVING COUNT( * ) >= 2	storm_record
SELECT region.region_name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id ORDER BY storm.number_deaths DESC LIMIT 1	storm_record
SELECT region.region_name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id ORDER BY storm.number_deaths DESC LIMIT 1	storm_record
SELECT storm.name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE region.region_name = 'Afghanistan' INTERSECT SELECT storm.name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE region.region_name = 'Albania'	storm_record
SELECT storm.name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE region.region_name = 'Afghanistan' INTERSECT SELECT storm.name FROM affected_region JOIN region ON affected_region.region_id = region.region_id JOIN storm ON affected_region.storm_id = storm.storm_id WHERE region.region_name = 'Albania'	storm_record
SELECT COUNT( * ) FROM county	election
SELECT COUNT( * ) FROM county	election
SELECT county.county_name , county.population FROM county	election
SELECT county.county_name , county.population FROM county	election
SELECT AVG( county.population ) FROM county	election
SELECT AVG( county.population ) FROM county	election
SELECT MAX( county.population ) , MIN( county.population ) FROM county	election
SELECT MAX( county.population ) , MIN( county.population ) FROM county	election
SELECT DISTINCT election.district FROM election	election
SELECT DISTINCT election.district FROM election	election
SELECT county.zip_code FROM county WHERE county.county_name = 'Howard'	election
SELECT county.zip_code FROM county WHERE county.county_name = 'Howard'	election
SELECT election.delegate FROM election WHERE election.district = 1	election
SELECT election.delegate FROM election WHERE election.district = 1	election
SELECT election.delegate , election.committee FROM election	election
SELECT election.delegate , election.committee FROM election	election
SELECT COUNT( DISTINCT party.governor ) FROM party	election
SELECT COUNT( DISTINCT party.governor ) FROM party	election
SELECT party.lieutenant_governor , party.comptroller FROM party WHERE party.party = 'democratic'	election
SELECT party.lieutenant_governor , party.comptroller FROM party WHERE party.party = 'democratic'	election
SELECT DISTINCT party.year FROM party WHERE party.governor = 'Eliot Spitzer'	election
SELECT DISTINCT party.year FROM party WHERE party.governor = 'Eliot Spitzer'	election
SELECT * FROM election	election
SELECT * FROM election	election
SELECT election.delegate , county.county_name FROM county JOIN election ON county.county_id = election.district	election
SELECT election.delegate , county.county_name FROM county JOIN election ON county.county_id = election.district	election
SELECT election.delegate FROM county JOIN election ON county.county_id = election.district WHERE county.population<100000	election
SELECT election.delegate FROM county JOIN election ON county.county_id = election.district WHERE county.population<100000	election
SELECT COUNT( DISTINCT election.delegate ) FROM county JOIN election ON county.county_id = election.district WHERE county.population > 50000	election
SELECT COUNT( DISTINCT election.delegate ) FROM county JOIN election ON county.county_id = election.district WHERE county.population > 50000	election
SELECT county.county_name FROM county JOIN election ON county.county_id = election.district WHERE election.committee = 'Appropriations'	election
SELECT county.county_name FROM county JOIN election ON county.county_id = election.district WHERE election.committee = 'Appropriations'	election
SELECT election.delegate , party.party FROM election JOIN party ON election.party = party.party_id	election
SELECT election.delegate , party.party FROM election JOIN party ON election.party = party.party_id	election
SELECT party.governor FROM election JOIN party ON election.party = party.party_id WHERE election.district = 1	election
SELECT party.governor FROM election JOIN party ON election.party = party.party_id WHERE election.district = 1	election
SELECT party.comptroller FROM election JOIN party ON election.party = party.party_id WHERE election.district = 1 OR election.district = 2	election
SELECT party.comptroller FROM election JOIN party ON election.party = party.party_id WHERE election.district = 1 OR election.district = 2	election
SELECT election.committee FROM election JOIN party ON election.party = party.party_id WHERE party.party = 'Democratic'	election
SELECT election.committee FROM election JOIN party ON election.party = party.party_id WHERE party.party = 'Democratic'	election
SELECT county.county_name , COUNT( * ) FROM county JOIN election ON county.county_id = election.district GROUP BY county.county_id	election
SELECT county.county_name , COUNT( * ) FROM county JOIN election ON county.county_id = election.district GROUP BY county.county_id	election
SELECT party.party , COUNT( * ) FROM election JOIN party ON election.party = party.party_id GROUP BY election.party	election
SELECT party.party , COUNT( * ) FROM election JOIN party ON election.party = party.party_id GROUP BY election.party	election
SELECT county.county_name FROM county ORDER BY county.population ASC	election
SELECT county.county_name FROM county ORDER BY county.population ASC	election
SELECT county.county_name FROM county ORDER BY county.county_name DESC	election
SELECT county.county_name FROM county ORDER BY county.county_name DESC	election
SELECT county.county_name FROM county ORDER BY county.population DESC LIMIT 1	election
SELECT county.county_name FROM county ORDER BY county.population DESC LIMIT 1	election
SELECT county.county_name FROM county ORDER BY county.population ASC LIMIT 3	election
SELECT county.county_name FROM county ORDER BY county.population ASC LIMIT 3	election
SELECT county.county_name FROM county JOIN election ON county.county_id = election.district GROUP BY county.county_id HAVING COUNT( * ) >= 2	election
SELECT county.county_name FROM county JOIN election ON county.county_id = election.district GROUP BY county.county_id HAVING COUNT( * ) >= 2	election
SELECT party.party FROM party GROUP BY party.party HAVING COUNT( * ) >= 2	election
SELECT party.party FROM party GROUP BY party.party HAVING COUNT( * ) >= 2	election
SELECT party.party FROM election JOIN party ON election.party = party.party_id GROUP BY election.party ORDER BY COUNT( * ) DESC LIMIT 1	election
SELECT party.party FROM election JOIN party ON election.party = party.party_id GROUP BY election.party ORDER BY COUNT( * ) DESC LIMIT 1	election
SELECT party.governor FROM party GROUP BY party.governor ORDER BY COUNT( * ) DESC LIMIT 1	election
SELECT party.governor FROM party GROUP BY party.governor ORDER BY COUNT( * ) DESC LIMIT 1	election
SELECT party.comptroller , COUNT( * ) FROM party GROUP BY party.comptroller ORDER BY COUNT( * ) DESC LIMIT 1	election
SELECT party.comptroller , COUNT( * ) FROM party GROUP BY party.comptroller ORDER BY COUNT( * ) DESC LIMIT 1	election
SELECT party.party FROM party WHERE party.party_id NOT IN (SELECT election.party FROM election)	election
SELECT party.party FROM party WHERE party.party_id NOT IN (SELECT election.party FROM election)	election
SELECT party.party FROM election JOIN party ON election.party = party.party_id WHERE election.committee = '1' INTERSECT SELECT party.party FROM election JOIN party ON election.party = party.party_id WHERE election.committee = 'Appropriations'	election
SELECT party.party FROM election JOIN party ON election.party = party.party_id WHERE election.committee = 'Appropriations' INTERSECT SELECT party.party FROM election JOIN party ON election.party = party.party_id WHERE election.committee = 'Economic Matters'	election
SELECT election.committee FROM election JOIN party ON election.party = party.party_id WHERE party.party = 'democratic' INTERSECT SELECT election.committee FROM election JOIN party ON election.party = party.party_id WHERE party.party = 'liberal'	election
SELECT election.committee FROM election JOIN party ON election.party = party.party_id WHERE party.party = 'democratic' INTERSECT SELECT election.committee FROM election JOIN party ON election.party = party.party_id WHERE party.party = 'liberal'	election
SELECT COUNT( * ) FROM journalist	news_report
SELECT journalist.name FROM journalist ORDER BY journalist.years_working ASC	news_report
SELECT journalist.nationality , journalist.age FROM journalist	news_report
SELECT journalist.name FROM journalist WHERE journalist.nationality = 'England' OR journalist.nationality = 'Wales'	news_report
SELECT AVG( journalist.years_working ) FROM journalist	news_report
SELECT journalist.nationality FROM journalist ORDER BY journalist.years_working DESC LIMIT 1	news_report
SELECT journalist.nationality , COUNT( * ) FROM journalist GROUP BY journalist.nationality	news_report
SELECT journalist.nationality FROM journalist GROUP BY journalist.nationality ORDER BY COUNT( * ) DESC LIMIT 1	news_report
SELECT journalist.nationality FROM journalist WHERE journalist.years_working > 10 INTERSECT SELECT journalist.nationality FROM journalist WHERE journalist.years_working<3	news_report
SELECT event.date , event.name , event.venue FROM event ORDER BY event.event_attendance DESC	news_report
SELECT journalist.name , event.date FROM news_report JOIN event ON news_report.event_id = event.event_id JOIN journalist ON news_report.journalist_id = journalist.journalist_id	news_report
SELECT journalist.name , event.name FROM news_report JOIN event ON news_report.event_id = event.event_id JOIN journalist ON news_report.journalist_id = journalist.journalist_id ORDER BY event.event_attendance ASC	news_report
SELECT journalist.name , COUNT( * ) FROM news_report JOIN event ON news_report.event_id = event.event_id JOIN journalist ON news_report.journalist_id = journalist.journalist_id GROUP BY journalist.name	news_report
SELECT journalist.name FROM news_report JOIN event ON news_report.event_id = event.event_id JOIN journalist ON news_report.journalist_id = journalist.journalist_id GROUP BY journalist.name HAVING COUNT( * ) > 1	news_report
SELECT journalist.name FROM journalist WHERE journalist.journalist_id NOT IN (SELECT news_report.journalist_id FROM news_report)	news_report
SELECT AVG( event.event_attendance ) , MAX( event.event_attendance ) FROM event	news_report
SELECT AVG( journalist.age ) , AVG( journalist.years_working ) , news_report.work_type FROM journalist JOIN news_report ON journalist.journalist_id = news_report.journalist_id GROUP BY news_report.work_type	news_report
SELECT event.venue , event.name FROM event ORDER BY event.event_attendance DESC LIMIT 2	news_report
SELECT restaurant.resname FROM restaurant	restaurant_1
SELECT restaurant.address FROM restaurant WHERE restaurant.resname = 'Subway'	restaurant_1
SELECT restaurant.rating FROM restaurant WHERE restaurant.resname = 'Subway'	restaurant_1
SELECT restaurant_type.restypename FROM restaurant_type	restaurant_1
SELECT restaurant_type.restypedescription FROM restaurant_type WHERE restaurant_type.restypename = 'Sandwich'	restaurant_1
SELECT restaurant.resname , restaurant.rating FROM restaurant ORDER BY restaurant.rating DESC LIMIT 1	restaurant_1
SELECT student.age FROM student WHERE student.fname = 'Linda' AND student.lname = 'Smith'	restaurant_1
SELECT student.sex FROM student WHERE student.fname = 'Linda' AND student.lname = 'Smith'	restaurant_1
SELECT student.fname , student.lname FROM student WHERE student.major = 600	restaurant_1
SELECT student.city_code FROM student WHERE student.fname = 'Linda' AND student.lname = 'Smith'	restaurant_1
SELECT COUNT( * ) FROM student WHERE student.advisor = 1121	restaurant_1
SELECT student.advisor , COUNT( * ) FROM student GROUP BY student.advisor ORDER BY COUNT( student.advisor ) DESC LIMIT 1	restaurant_1
SELECT student.major , COUNT( * ) FROM student GROUP BY student.major ORDER BY COUNT( student.major ) ASC LIMIT 1	restaurant_1
SELECT student.major , COUNT( * ) FROM student GROUP BY student.major HAVING COUNT( student.major ) BETWEEN 2 and 30	restaurant_1
SELECT student.fname , student.lname FROM student WHERE student.age > 18 AND student.major = 600	restaurant_1
SELECT student.fname , student.lname FROM student WHERE student.age > 18 AND student.major != 600 AND student.sex = 'f'	restaurant_1
SELECT COUNT( * ) FROM restaurant JOIN type_of_restaurant ON restaurant.resid = type_of_restaurant.resid JOIN restaurant_type ON type_of_restaurant.restypeid = restaurant_type.restypeid WHERE restaurant_type.restypename = 'Sandwich' GROUP BY type_of_restaurant.restypeid	restaurant_1
SELECT SUM( visits_restaurant.spent ) FROM student JOIN visits_restaurant ON student.stuid = visits_restaurant.stuid WHERE student.fname = 'Linda' AND student.lname = 'Smith'	restaurant_1
SELECT COUNT( * ) FROM student JOIN visits_restaurant ON student.stuid = visits_restaurant.stuid JOIN restaurant ON visits_restaurant.resid = restaurant.resid WHERE student.fname = 'Linda' AND student.lname = 'Smith' AND restaurant.resname = 'Subway'	restaurant_1
SELECT visits_restaurant.time FROM student JOIN visits_restaurant ON student.stuid = visits_restaurant.stuid JOIN restaurant ON visits_restaurant.resid = restaurant.resid WHERE student.fname = 'Linda' AND student.lname = 'Smith' AND restaurant.resname = 'Subway'	restaurant_1
SELECT restaurant.resname , SUM( visits_restaurant.spent ) FROM visits_restaurant JOIN restaurant ON visits_restaurant.resid = restaurant.resid GROUP BY restaurant.resid ORDER BY SUM( visits_restaurant.spent ) ASC LIMIT 1	restaurant_1
SELECT student.fname , student.lname FROM student JOIN visits_restaurant ON student.stuid = visits_restaurant.stuid GROUP BY student.stuid ORDER BY COUNT( * ) DESC LIMIT 1	restaurant_1
SELECT actual_orders.actual_order_id FROM actual_orders WHERE actual_orders.order_status_code = 'Success'	customer_deliveries
SELECT products.product_name , products.product_price FROM products JOIN regular_order_products ON products.product_id = regular_order_products.product_id GROUP BY regular_order_products.product_id ORDER BY COUNT( * ) DESC LIMIT 1	customer_deliveries
SELECT COUNT( * ) FROM customers	customer_deliveries
SELECT COUNT( DISTINCT customers.payment_method ) FROM customers	customer_deliveries
SELECT trucks.truck_details FROM trucks ORDER BY trucks.truck_details ASC	customer_deliveries
SELECT products.product_name FROM products ORDER BY products.product_price DESC LIMIT 1	customer_deliveries
SELECT customers.customer_name FROM customers EXCEPT SELECT customers.customer_name FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'California'	customer_deliveries
SELECT customers.customer_email , customers.customer_name FROM customers WHERE customers.payment_method = 'Visa'	customer_deliveries
SELECT customers.customer_name , customers.customer_phone FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'California'	customer_deliveries
SELECT addresses.state_province_county FROM addresses WHERE addresses.address_id NOT IN (SELECT employees.employee_address_id FROM employees)	customer_deliveries
SELECT customers.customer_name , customers.customer_phone , customers.customer_email FROM customers ORDER BY customers.date_became_customer ASC	customer_deliveries
SELECT customers.customer_name FROM customers ORDER BY customers.date_became_customer ASC LIMIT 5	customer_deliveries
SELECT customers.payment_method FROM customers GROUP BY customers.payment_method ORDER BY COUNT( * ) DESC LIMIT 1	customer_deliveries
SELECT delivery_routes.route_name FROM delivery_routes ORDER BY delivery_routes.route_name ASC	customer_deliveries
SELECT delivery_routes.route_name FROM delivery_routes JOIN delivery_route_locations ON delivery_routes.route_id = delivery_route_locations.route_id GROUP BY delivery_routes.route_id ORDER BY COUNT( * ) DESC LIMIT 1	customer_deliveries
SELECT addresses.state_province_county , COUNT( * ) FROM customer_addresses JOIN addresses ON customer_addresses.address_id = addresses.address_id GROUP BY addresses.state_province_county	customer_deliveries
SELECT COUNT( * ) FROM authors	icfp_1
SELECT COUNT( * ) FROM authors	icfp_1
SELECT COUNT( * ) FROM inst	icfp_1
SELECT COUNT( * ) FROM inst	icfp_1
SELECT COUNT( * ) FROM papers	icfp_1
SELECT COUNT( * ) FROM papers	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Jeremy' AND authors.lname = 'Gibbons'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Jeremy' AND authors.lname = 'Gibbons'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Aaron' AND authors.lname = 'Turon'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Aaron' AND authors.lname = 'Turon'	icfp_1
SELECT COUNT( * ) FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Atsushi' AND authors.lname = 'Ohori'	icfp_1
SELECT COUNT( * ) FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Atsushi' AND authors.lname = 'Ohori'	icfp_1
SELECT DISTINCT inst.name FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE authors.fname = 'Matthias' AND authors.lname = 'Blume'	icfp_1
SELECT DISTINCT inst.name FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE authors.fname = 'Matthias' AND authors.lname = 'Blume'	icfp_1
SELECT DISTINCT inst.name FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE authors.fname = 'Katsuhiro' AND authors.lname = 'Ueno'	icfp_1
SELECT DISTINCT inst.name FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE authors.fname = 'Katsuhiro' AND authors.lname = 'Ueno'	icfp_1
SELECT DISTINCT authors.fname , authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'University of Oxford'	icfp_1
SELECT DISTINCT authors.fname , authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'University of Oxford'	icfp_1
SELECT DISTINCT authors.fname , authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Google'	icfp_1
SELECT DISTINCT authors.fname , authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Google'	icfp_1
SELECT authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title = 'Binders Unbound'	icfp_1
SELECT authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title = 'Binders Unbound'	icfp_1
SELECT authors.fname , authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title = 'Nameless, Painless'	icfp_1
SELECT authors.fname , authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title = 'Nameless, Painless'	icfp_1
SELECT DISTINCT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Indiana University'	icfp_1
SELECT DISTINCT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Indiana University'	icfp_1
SELECT DISTINCT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Google'	icfp_1
SELECT DISTINCT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Google'	icfp_1
SELECT COUNT( DISTINCT papers.title ) FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Tokohu University'	icfp_1
SELECT COUNT( DISTINCT papers.title ) FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Tokohu University'	icfp_1
SELECT COUNT( DISTINCT papers.title ) FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'University of Pennsylvania'	icfp_1
SELECT COUNT( DISTINCT papers.title ) FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'University of Pennsylvania'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Olin' AND authors.lname = 'Shivers'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Olin' AND authors.lname = 'Shivers'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Stephanie' AND authors.lname = 'Weirich'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE authors.fname = 'Stephanie' AND authors.lname = 'Weirich'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid JOIN inst ON authorship.instid = inst.instid JOIN authorship ON authorship.authorder = papers.paperid WHERE authors.fname = 'USA' AND authors.lname = 'Turon'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.country = 'USA' AND authorship.authorder = 2 AND authors.lname = 'Turon'	icfp_1
SELECT DISTINCT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid JOIN inst ON authorship.instid = inst.instid JOIN authorship ON authorship.authorder = papers.paperid WHERE authors.fname = 'Japan' AND authors.lname = 'Ohori'	icfp_1
SELECT papers.title FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid JOIN inst ON authorship.instid = inst.instid JOIN authorship ON authorship.authorder = papers.paperid WHERE authors.fname = 'Japan' AND authors.lname = 'Ohori'	icfp_1
SELECT authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid GROUP BY authors.fname , authors.lname ORDER BY COUNT( * ) DESC LIMIT 1	icfp_1
SELECT authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid GROUP BY authors.fname , authors.lname ORDER BY COUNT( * ) DESC LIMIT 1	icfp_1
SELECT inst.country FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN papers ON authorship.paperid = papers.paperid GROUP BY inst.country ORDER BY COUNT( * ) DESC LIMIT 1	icfp_1
SELECT inst.country FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN papers ON authorship.paperid = papers.paperid GROUP BY inst.country ORDER BY COUNT( * ) DESC LIMIT 1	icfp_1
SELECT inst.name FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN papers ON authorship.paperid = papers.paperid GROUP BY inst.name ORDER BY COUNT( * ) DESC LIMIT 1	icfp_1
SELECT inst.name FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN papers ON authorship.paperid = papers.paperid GROUP BY inst.name ORDER BY COUNT( * ) DESC LIMIT 1	icfp_1
SELECT papers.title FROM papers WHERE papers.title LIKE '%ML%'	icfp_1
SELECT papers.title FROM papers WHERE papers.title LIKE '%ML%'	icfp_1
SELECT papers.title FROM papers WHERE papers.title LIKE '%Database%'	icfp_1
SELECT papers.title FROM papers WHERE papers.title LIKE '%Database%'	icfp_1
SELECT authors.fname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title LIKE '%Functional%'	icfp_1
SELECT authors.fname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title LIKE '%Functional%'	icfp_1
SELECT authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title LIKE '%Monadic%'	icfp_1
SELECT authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title LIKE '%Monadic%'	icfp_1
SELECT papers.title FROM authorship JOIN papers ON authorship.paperid = papers.paperid WHERE authorship.authorder = (SELECT MAX( authorship.authorder ) FROM authorship)	icfp_1
SELECT papers.title FROM authorship JOIN papers ON authorship.paperid = papers.paperid WHERE authorship.authorder = (SELECT MAX( authorship.authorder ) FROM authorship)	icfp_1
SELECT authors.fname FROM authors WHERE authors.lname = 'Ueno'	icfp_1
SELECT authors.fname FROM authors WHERE authors.lname = 'Ueno'	icfp_1
SELECT authors.lname FROM authors WHERE authors.fname = 'Amal'	icfp_1
SELECT authors.lname FROM authors WHERE authors.fname = 'Amal'	icfp_1
SELECT authors.fname FROM authors ORDER BY authors.fname ASC	icfp_1
SELECT authors.fname FROM authors ORDER BY authors.fname ASC	icfp_1
SELECT authors.lname FROM authors ORDER BY authors.lname ASC	icfp_1
SELECT authors.lname FROM authors ORDER BY authors.lname ASC	icfp_1
SELECT authors.fname , authors.lname FROM authors ORDER BY authors.lname ASC	icfp_1
SELECT authors.fname , authors.lname FROM authors ORDER BY authors.lname ASC	icfp_1
SELECT COUNT( DISTINCT actor.last_name ) FROM actor	sakila_1
SELECT COUNT( DISTINCT actor.last_name ) FROM actor	sakila_1
SELECT actor.first_name FROM actor GROUP BY actor.first_name ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT actor.first_name FROM actor GROUP BY actor.first_name ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT actor.first_name , actor.last_name FROM actor GROUP BY actor.first_name , actor.last_name ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT actor.first_name , actor.last_name FROM actor GROUP BY actor.first_name , actor.last_name ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT address.district FROM address GROUP BY address.district HAVING COUNT( * ) >= 2	sakila_1
SELECT address.district FROM address GROUP BY address.district HAVING COUNT( * ) >= 2	sakila_1
SELECT address.phone , address.postal_code FROM address WHERE address.address = '1031 Daugavpils Parkway'	sakila_1
SELECT address.phone , address.postal_code FROM address WHERE address.address = '1031 Daugavpils Parkway'	sakila_1
SELECT city.city , COUNT( * ) , address.city_id FROM address JOIN city ON address.city_id = city.city_id GROUP BY address.city_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT city.city , COUNT( * ) , address.city_id FROM address JOIN city ON address.city_id = city.city_id GROUP BY address.city_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT COUNT( * ) FROM address WHERE address.district = 'California'	sakila_1
SELECT COUNT( * ) FROM address WHERE address.district = 'California'	sakila_1
SELECT film.title , film.film_id FROM film WHERE film.rental_rate = 0.99 INTERSECT SELECT film.title , film.film_id FROM film JOIN inventory ON film.film_id = inventory.film_id GROUP BY film.film_id HAVING COUNT( * )<3	sakila_1
SELECT film.title , film.film_id FROM film WHERE film.rental_rate = 0.99 INTERSECT SELECT film.title , film.film_id FROM film JOIN inventory ON film.film_id = inventory.film_id GROUP BY film.film_id HAVING COUNT( * )<3	sakila_1
SELECT COUNT( * ) FROM city JOIN country ON city.country_id = country.country_id WHERE country.country = 'Australia'	sakila_1
SELECT COUNT( * ) FROM city JOIN country ON city.country_id = country.country_id WHERE country.country = 'Australia'	sakila_1
SELECT country.country FROM city JOIN country ON city.country_id = country.country_id GROUP BY country.country_id HAVING COUNT( * ) >= 3	sakila_1
SELECT country.country FROM city JOIN country ON city.country_id = country.country_id GROUP BY country.country_id HAVING COUNT( * ) >= 3	sakila_1
SELECT payment.payment_date FROM payment WHERE payment.amount > 10 UNION SELECT payment.payment_date FROM payment JOIN staff ON payment.staff_id = staff.staff_id WHERE staff.first_name = 'Elsa'	sakila_1
SELECT payment.payment_date FROM payment WHERE payment.amount > 10 UNION SELECT payment.payment_date FROM payment JOIN staff ON payment.staff_id = staff.staff_id WHERE staff.first_name = 'Elsa'	sakila_1
SELECT COUNT( * ) FROM customer WHERE customer.active = '1'	sakila_1
SELECT COUNT( * ) FROM customer WHERE customer.active = '1'	sakila_1
SELECT film.title , film.rental_rate FROM film ORDER BY film.rental_rate DESC LIMIT 1	sakila_1
SELECT film.title , film.rental_rate FROM film ORDER BY film.rental_rate DESC LIMIT 1	sakila_1
SELECT film.title , film.film_id , film.description FROM film_actor JOIN film ON film_actor.film_id = film.film_id GROUP BY film.film_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT film.title , film.film_id , film.description FROM film_actor JOIN film ON film_actor.film_id = film.film_id GROUP BY film.film_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT actor.first_name , actor.last_name , actor.actor_id FROM film_actor JOIN actor ON film_actor.actor_id = actor.actor_id GROUP BY actor.actor_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT actor.first_name , actor.last_name , actor.actor_id FROM film_actor JOIN actor ON film_actor.actor_id = actor.actor_id GROUP BY actor.actor_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT actor.first_name , actor.last_name FROM film_actor JOIN actor ON film_actor.actor_id = actor.actor_id GROUP BY actor.actor_id HAVING COUNT( * ) > 30	sakila_1
SELECT actor.first_name , actor.last_name FROM film_actor JOIN actor ON film_actor.actor_id = actor.actor_id GROUP BY actor.actor_id HAVING COUNT( * ) > 30	sakila_1
SELECT inventory.store_id FROM inventory GROUP BY inventory.store_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT inventory.store_id FROM inventory GROUP BY inventory.store_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT SUM( payment.amount ) FROM payment	sakila_1
SELECT SUM( payment.amount ) FROM payment	sakila_1
SELECT customer.first_name , customer.last_name , customer.customer_id FROM customer JOIN payment ON customer.customer_id = payment.customer_id GROUP BY customer.customer_id ORDER BY SUM( payment.amount ) ASC LIMIT 1	sakila_1
SELECT customer.first_name , customer.last_name , customer.customer_id FROM customer JOIN payment ON customer.customer_id = payment.customer_id GROUP BY customer.customer_id ORDER BY SUM( payment.amount ) ASC LIMIT 1	sakila_1
SELECT category.name FROM category JOIN film_category ON category.category_id = film_category.category_id JOIN film ON film_category.film_id = film.film_id WHERE film.title = 'HUNGER ROOF'	sakila_1
SELECT category.name FROM category JOIN film_category ON category.category_id = film_category.category_id JOIN film ON film_category.film_id = film.film_id WHERE film.title = 'HUNGER ROOF'	sakila_1
SELECT category.name , film_category.category_id , COUNT( * ) FROM film_category JOIN category ON film_category.category_id = category.category_id GROUP BY film_category.category_id	sakila_1
SELECT category.name , film_category.category_id , COUNT( * ) FROM film_category JOIN category ON film_category.category_id = category.category_id GROUP BY film_category.category_id	sakila_1
SELECT film.title , film.film_id FROM film JOIN inventory ON film.film_id = inventory.film_id GROUP BY film.film_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT film.title , film.film_id FROM film JOIN inventory ON film.film_id = inventory.film_id GROUP BY film.film_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT film.title , inventory.inventory_id FROM film JOIN inventory ON film.film_id = inventory.film_id JOIN rental ON inventory.inventory_id = rental.inventory_id GROUP BY inventory.inventory_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT film.title , inventory.inventory_id FROM film JOIN inventory ON film.film_id = inventory.film_id JOIN rental ON inventory.inventory_id = rental.inventory_id GROUP BY inventory.inventory_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT COUNT( DISTINCT film.language_id ) FROM film	sakila_1
SELECT COUNT( DISTINCT film.language_id ) FROM film	sakila_1
SELECT film.title FROM film WHERE film.rating = 'R'	sakila_1
SELECT film.title FROM film WHERE film.rating = 'R'	sakila_1
SELECT address.address FROM store JOIN address ON store.address_id = address.address_id WHERE store.store_id = 1	sakila_1
SELECT address.address FROM store JOIN address ON store.address_id = address.address_id WHERE store.store_id = 1	sakila_1
SELECT staff.staff_id , staff.active FROM staff JOIN payment ON staff.staff_id = payment.staff_id GROUP BY staff.staff_id ORDER BY COUNT( * ) ASC LIMIT 1	sakila_1
SELECT staff.staff_id , staff.active FROM staff JOIN payment ON staff.staff_id = payment.staff_id GROUP BY staff.staff_id ORDER BY COUNT( * ) ASC LIMIT 1	sakila_1
SELECT language.name FROM film JOIN language ON film.language_id = language.language_id WHERE film.title = 'AIRPORT POLLOCK'	sakila_1
SELECT language.name FROM film JOIN language ON film.language_id = language.language_id WHERE film.title = 'AIRPORT POLLOCK'	sakila_1
SELECT COUNT( * ) FROM store	sakila_1
SELECT COUNT( * ) FROM store	sakila_1
SELECT COUNT( DISTINCT film.rating ) FROM film	sakila_1
SELECT COUNT( DISTINCT film.rating ) FROM film	sakila_1
SELECT film.title FROM film WHERE film.special_features LIKE '%Deleted Scenes%'	sakila_1
SELECT film.title FROM film WHERE film.special_features LIKE '%Deleted Scenes%'	sakila_1
SELECT COUNT( * ) FROM inventory WHERE inventory.store_id = 1	sakila_1
SELECT COUNT( * ) FROM inventory WHERE inventory.store_id = 1	sakila_1
SELECT payment.payment_date FROM payment ORDER BY payment.payment_date ASC LIMIT 1	sakila_1
SELECT payment.payment_date FROM payment ORDER BY payment.payment_date ASC LIMIT 1	sakila_1
SELECT address.address , customer.email FROM address JOIN customer ON address.address_id = customer.address_id WHERE customer.first_name = 'Linda'	sakila_1
SELECT address.address , customer.email FROM address JOIN customer ON address.address_id = customer.address_id WHERE customer.first_name = 'Linda'	sakila_1
SELECT film.title FROM film WHERE film.length > 100 OR film.rating = 'PG,' EXCEPT SELECT film.title FROM film WHERE film.replacement_cost > 200	sakila_1
SELECT film.title FROM film WHERE film.length > 100 OR film.rating = 'PG' EXCEPT SELECT film.title FROM film WHERE film.replacement_cost > 200	sakila_1
SELECT customer.first_name , customer.last_name FROM customer JOIN rental ON customer.customer_id = rental.customer_id ORDER BY rental.rental_date ASC LIMIT 1	sakila_1
SELECT customer.first_name , customer.last_name FROM customer JOIN rental ON customer.customer_id = rental.customer_id ORDER BY rental.rental_date ASC LIMIT 1	sakila_1
SELECT DISTINCT staff.first_name , staff.last_name FROM staff JOIN rental ON staff.staff_id = rental.staff_id JOIN customer ON rental.customer_id = customer.customer_id WHERE customer.first_name = 'April' AND customer.last_name = 'Burns'	sakila_1
SELECT DISTINCT staff.first_name , staff.last_name FROM staff JOIN rental ON staff.staff_id = rental.staff_id JOIN customer ON rental.customer_id = customer.customer_id WHERE customer.first_name = 'April' AND customer.last_name = 'Burns'	sakila_1
SELECT customer.store_id FROM customer GROUP BY customer.store_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT customer.store_id FROM customer GROUP BY customer.store_id ORDER BY COUNT( * ) DESC LIMIT 1	sakila_1
SELECT payment.amount FROM payment ORDER BY payment.amount DESC LIMIT 1	sakila_1
SELECT payment.amount FROM payment ORDER BY payment.amount DESC LIMIT 1	sakila_1
SELECT address.address FROM staff JOIN address ON staff.address_id = address.address_id WHERE staff.first_name = 'Elsa'	sakila_1
SELECT address.address FROM staff JOIN address ON staff.address_id = address.address_id WHERE staff.first_name = 'Elsa'	sakila_1
SELECT customer.first_name FROM customer WHERE customer.customer_id NOT IN (SELECT rental.customer_id FROM rental WHERE rental.last_update > '2005-08-23 02:06:01')	sakila_1
SELECT customer.first_name FROM customer WHERE customer.customer_id NOT IN (SELECT rental.customer_id FROM rental WHERE rental.last_update > '2005-08-23 02:06:01')	sakila_1
SELECT COUNT( * ) FROM bank	loan_1
SELECT COUNT( * ) FROM bank	loan_1
SELECT SUM( bank.no_of_customers ) FROM bank	loan_1
SELECT SUM( bank.no_of_customers ) FROM bank	loan_1
SELECT SUM( bank.no_of_customers ) FROM bank WHERE bank.city = 'New York City'	loan_1
SELECT SUM( bank.no_of_customers ) FROM bank WHERE bank.city = 'New York City'	loan_1
SELECT AVG( bank.no_of_customers ) FROM bank WHERE bank.state = 'Utah'	loan_1
SELECT AVG( bank.no_of_customers ) FROM bank WHERE bank.state = 'Utah'	loan_1
SELECT AVG( bank.no_of_customers ) FROM bank	loan_1
SELECT AVG( bank.no_of_customers ) FROM bank	loan_1
SELECT bank.city , bank.state FROM bank WHERE bank.bname = 'morningside'	loan_1
SELECT bank.city , bank.state FROM bank WHERE bank.bname = 'morningside'	loan_1
SELECT bank.bname FROM bank WHERE bank.state = 'New York'	loan_1
SELECT bank.bname FROM bank WHERE bank.state = 'New York'	loan_1
SELECT customer.cust_name FROM customer ORDER BY customer.acc_bal ASC	loan_1
SELECT customer.cust_name FROM customer ORDER BY customer.acc_bal ASC	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name ORDER BY SUM( loan.amount ) ASC	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name ORDER BY SUM( loan.amount ) ASC	loan_1
SELECT customer.state , customer.acc_type , customer.credit_score FROM customer WHERE customer.no_of_loans = 0	loan_1
SELECT customer.state , customer.acc_type , customer.credit_score FROM customer WHERE customer.no_of_loans = 0	loan_1
SELECT COUNT( DISTINCT bank.city ) FROM bank	loan_1
SELECT COUNT( DISTINCT bank.city ) FROM bank	loan_1
SELECT COUNT( DISTINCT bank.state ) FROM bank	loan_1
SELECT COUNT( DISTINCT bank.state ) FROM bank	loan_1
SELECT COUNT( DISTINCT customer.acc_type ) FROM customer	loan_1
SELECT COUNT( DISTINCT customer.acc_type ) FROM customer	loan_1
SELECT customer.cust_name , customer.acc_bal FROM customer WHERE customer.cust_name LIKE '%a%'	loan_1
SELECT customer.cust_name , customer.acc_bal FROM customer WHERE customer.cust_name LIKE '%a%'	loan_1
SELECT SUM( customer.acc_bal ) FROM customer WHERE customer.state = 'Utah' OR customer.state = 'Texas'	loan_1
SELECT SUM( customer.acc_bal ) FROM customer WHERE customer.state = 'Utah' OR customer.state = 'Texas'	loan_1
SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'saving' INTERSECT SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'checking'	loan_1
SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'savings' INTERSECT SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'checking'	loan_1
SELECT customer.cust_name FROM customer EXCEPT SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'saving'	loan_1
SELECT customer.cust_name FROM customer EXCEPT SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'saving'	loan_1
SELECT customer.cust_name FROM customer EXCEPT SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type = 'Mortgages'	loan_1
SELECT customer.cust_name FROM customer EXCEPT SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type = 'Mortage'	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type = 'Mortgages' INTERSECT SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type = 'Auto'	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type = 'Mortgage' INTERSECT SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type = 'Auto'	loan_1
SELECT customer.cust_name FROM customer WHERE customer.credit_score<(SELECT AVG( customer.credit_score ) FROM customer)	loan_1
SELECT customer.cust_name FROM customer WHERE customer.credit_score<(SELECT AVG( customer.credit_score ) FROM customer)	loan_1
SELECT bank.bname FROM bank ORDER BY bank.no_of_customers DESC LIMIT 1	loan_1
SELECT bank.bname FROM bank ORDER BY bank.no_of_customers DESC LIMIT 1	loan_1
SELECT customer.cust_name FROM customer ORDER BY customer.credit_score ASC LIMIT 1	loan_1
SELECT customer.cust_name FROM customer ORDER BY customer.credit_score ASC LIMIT 1	loan_1
SELECT customer.cust_name , customer.acc_type , customer.acc_bal FROM customer ORDER BY customer.credit_score DESC LIMIT 1	loan_1
SELECT customer.cust_name , customer.acc_type , customer.acc_bal FROM customer ORDER BY customer.credit_score DESC LIMIT 1	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name ORDER BY SUM( loan.amount ) DESC LIMIT 1	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name ORDER BY SUM( loan.amount ) DESC LIMIT 1	loan_1
SELECT bank.state FROM bank GROUP BY bank.state ORDER BY SUM( bank.no_of_customers ) DESC LIMIT 1	loan_1
SELECT bank.state FROM bank GROUP BY bank.state ORDER BY SUM( bank.no_of_customers ) DESC LIMIT 1	loan_1
SELECT AVG( customer.acc_bal ) , customer.acc_type FROM customer WHERE customer.credit_score<50 GROUP BY customer.acc_type	loan_1
SELECT AVG( customer.acc_bal ) , customer.acc_type FROM customer WHERE customer.credit_score<50 GROUP BY customer.acc_type	loan_1
SELECT SUM( customer.acc_bal ) , customer.state FROM customer WHERE customer.credit_score > 100 GROUP BY customer.state	loan_1
SELECT SUM( customer.acc_bal ) , customer.state FROM customer WHERE customer.credit_score > 100 GROUP BY customer.state	loan_1
SELECT SUM( loan.amount ) , bank.bname FROM bank JOIN loan ON bank.branch_id = loan.branch_id GROUP BY bank.bname	loan_1
SELECT SUM( loan.amount ) , bank.bname FROM bank JOIN loan ON bank.branch_id = loan.branch_id GROUP BY bank.bname	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name HAVING COUNT( * ) > 1	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name HAVING COUNT( * ) > 1	loan_1
SELECT customer.cust_name , customer.acc_type FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name HAVING SUM( loan.amount ) > 5000	loan_1
SELECT customer.cust_name , customer.acc_type FROM customer JOIN loan ON customer.cust_id = loan.cust_id GROUP BY customer.cust_name HAVING SUM( loan.amount ) > 5000	loan_1
SELECT bank.bname FROM bank JOIN loan ON bank.branch_id = loan.branch_id GROUP BY bank.bname ORDER BY SUM( loan.amount ) DESC LIMIT 1	loan_1
SELECT bank.bname FROM bank JOIN loan ON bank.branch_id = loan.branch_id GROUP BY bank.bname ORDER BY SUM( loan.amount ) DESC LIMIT 1	loan_1
SELECT bank.bname FROM loan JOIN bank ON loan.branch_id = bank.branch_id JOIN customer ON loan.cust_id = customer.cust_id WHERE customer.credit_score<100 GROUP BY bank.bname ORDER BY SUM( loan.amount ) DESC LIMIT 1	loan_1
SELECT bank.bname FROM loan JOIN bank ON loan.branch_id = bank.branch_id JOIN customer ON loan.cust_id = customer.cust_id WHERE customer.credit_score<100 GROUP BY bank.bname ORDER BY SUM( loan.amount ) DESC LIMIT 1	loan_1
SELECT DISTINCT bank.bname FROM bank JOIN loan ON bank.branch_id = loan.branch_id	loan_1
SELECT DISTINCT bank.bname FROM bank JOIN loan ON bank.branch_id = loan.branch_id	loan_1
SELECT DISTINCT customer.cust_name , customer.credit_score FROM customer JOIN loan ON customer.cust_id = loan.cust_id	loan_1
SELECT DISTINCT customer.cust_name , customer.credit_score FROM customer JOIN loan ON customer.cust_id = loan.cust_id	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.amount > 3000	loan_1
SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.amount > 3000	loan_1
SELECT bank.bname , bank.city FROM bank JOIN loan ON bank.branch_id = loan.branch_id WHERE loan.loan_type = 'business'	loan_1
SELECT bank.bname , bank.city FROM bank JOIN loan ON bank.branch_id = loan.branch_id WHERE loan.loan_type = 'business'	loan_1
SELECT bank.bname FROM loan JOIN bank ON loan.branch_id = bank.branch_id JOIN customer ON loan.cust_id = customer.cust_id WHERE customer.credit_score<100	loan_1
SELECT bank.bname FROM loan JOIN bank ON loan.branch_id = bank.branch_id JOIN customer ON loan.cust_id = customer.cust_id WHERE customer.credit_score<100	loan_1
SELECT SUM( loan.amount ) FROM bank JOIN loan ON bank.branch_id = loan.branch_id WHERE bank.state = 'New York'	loan_1
SELECT SUM( loan.amount ) FROM bank JOIN loan ON bank.branch_id = loan.branch_id WHERE bank.state = 'New York'	loan_1
SELECT AVG( customer.credit_score ) FROM customer WHERE customer.cust_id IN (SELECT loan.cust_id FROM loan)	loan_1
SELECT AVG( customer.credit_score ) FROM customer WHERE customer.cust_id IN (SELECT loan.cust_id FROM loan)	loan_1
SELECT AVG( customer.credit_score ) FROM customer WHERE customer.cust_id NOT IN (SELECT loan.cust_id FROM loan)	loan_1
SELECT AVG( customer.credit_score ) FROM customer WHERE customer.cust_id NOT IN (SELECT loan.cust_id FROM loan)	loan_1
SELECT COUNT( * ) FROM assessment_notes	behavior_monitoring
SELECT assessment_notes.date_of_notes FROM assessment_notes	behavior_monitoring
SELECT COUNT( * ) FROM addresses WHERE addresses.zip_postcode = '197'	behavior_monitoring
SELECT COUNT( DISTINCT behavior_incident.incident_type_code ) FROM behavior_incident	behavior_monitoring
SELECT DISTINCT detention.detention_type_code FROM detention	behavior_monitoring
SELECT behavior_incident.date_incident_start , behavior_incident.date_incident_end FROM behavior_incident WHERE behavior_incident.incident_type_code = 'NOISE'	behavior_monitoring
SELECT detention.detention_summary FROM detention	behavior_monitoring
SELECT students.cell_mobile_number , students.email_address FROM students	behavior_monitoring
SELECT students.email_address FROM students WHERE students.first_name = 'Emma' AND students.last_name = 'Rohan'	behavior_monitoring
SELECT COUNT( DISTINCT students_in_detention.student_id ) FROM students_in_detention	behavior_monitoring
SELECT teachers.gender FROM teachers WHERE teachers.last_name = 'Medhurst'	behavior_monitoring
SELECT ref_incident_type.incident_type_description FROM ref_incident_type WHERE ref_incident_type.incident_type_code = 'VIOLENCE'	behavior_monitoring
SELECT MAX( student_addresses.monthly_rental ) , MIN( student_addresses.monthly_rental ) FROM student_addresses	behavior_monitoring
SELECT teachers.first_name FROM teachers WHERE teachers.email_address LIKE '%man%'	behavior_monitoring
SELECT * FROM assessment_notes ORDER BY assessment_notes.date_of_notes ASC	behavior_monitoring
SELECT addresses.city FROM addresses ORDER BY addresses.city ASC	behavior_monitoring
SELECT teachers.first_name , teachers.last_name FROM teachers ORDER BY teachers.last_name ASC	behavior_monitoring
SELECT * FROM student_addresses ORDER BY student_addresses.monthly_rental DESC	behavior_monitoring
SELECT assessment_notes.student_id , students.first_name FROM assessment_notes JOIN students ON assessment_notes.student_id = students.student_id GROUP BY assessment_notes.student_id ORDER BY COUNT( * ) DESC LIMIT 1	behavior_monitoring
SELECT assessment_notes.teacher_id , teachers.first_name FROM assessment_notes JOIN teachers ON assessment_notes.teacher_id = teachers.teacher_id GROUP BY assessment_notes.teacher_id ORDER BY COUNT( * ) DESC LIMIT 3	behavior_monitoring
SELECT behavior_incident.student_id , students.last_name FROM behavior_incident JOIN students ON behavior_incident.student_id = students.student_id GROUP BY behavior_incident.student_id ORDER BY COUNT( * ) DESC LIMIT 1	behavior_monitoring
SELECT detention.teacher_id , teachers.last_name FROM detention JOIN teachers ON detention.teacher_id = teachers.teacher_id WHERE detention.detention_type_code = 'AFTER' GROUP BY detention.teacher_id ORDER BY COUNT( * ) DESC LIMIT 1	behavior_monitoring
SELECT student_addresses.student_id , students.first_name FROM student_addresses JOIN students ON student_addresses.student_id = students.student_id GROUP BY student_addresses.student_id ORDER BY AVG( student_addresses.monthly_rental ) DESC LIMIT 1	behavior_monitoring
SELECT student_addresses.address_id , addresses.city FROM addresses JOIN student_addresses ON addresses.address_id = student_addresses.address_id GROUP BY student_addresses.address_id ORDER BY AVG( student_addresses.monthly_rental ) DESC LIMIT 1	behavior_monitoring
SELECT behavior_incident.incident_type_code , ref_incident_type.incident_type_description FROM behavior_incident JOIN ref_incident_type ON behavior_incident.incident_type_code = ref_incident_type.incident_type_code GROUP BY behavior_incident.incident_type_code ORDER BY COUNT( * ) DESC LIMIT 1	behavior_monitoring
SELECT detention.detention_type_code , ref_detention_type.detention_type_description FROM detention JOIN ref_detention_type ON detention.detention_type_code = ref_detention_type.detention_type_code GROUP BY detention.detention_type_code ORDER BY COUNT( * ) ASC LIMIT 1	behavior_monitoring
SELECT assessment_notes.date_of_notes FROM assessment_notes JOIN students ON assessment_notes.student_id = students.student_id WHERE students.first_name = 'Fanny'	behavior_monitoring
SELECT assessment_notes.text_of_notes FROM assessment_notes JOIN teachers ON assessment_notes.teacher_id = teachers.teacher_id WHERE teachers.last_name = 'Schuster'	behavior_monitoring
SELECT behavior_incident.date_incident_start , behavior_incident.date_incident_end FROM behavior_incident JOIN students ON behavior_incident.student_id = students.student_id WHERE students.last_name = 'Fahey'	behavior_monitoring
SELECT detention.datetime_detention_start , detention.datetime_detention_end FROM detention JOIN teachers ON detention.teacher_id = teachers.teacher_id WHERE teachers.last_name = 'Schultz'	behavior_monitoring
SELECT student_addresses.address_id , addresses.zip_postcode FROM addresses JOIN student_addresses ON addresses.address_id = student_addresses.address_id ORDER BY student_addresses.monthly_rental DESC LIMIT 1	behavior_monitoring
SELECT students.cell_mobile_number FROM student_addresses JOIN students ON student_addresses.student_id = students.student_id ORDER BY student_addresses.monthly_rental ASC LIMIT 1	behavior_monitoring
SELECT student_addresses.monthly_rental FROM addresses JOIN student_addresses ON addresses.address_id = student_addresses.address_id WHERE addresses.state_province_county = 'Texas'	behavior_monitoring
SELECT students.first_name , students.last_name FROM addresses JOIN students ON addresses.address_id = students.address_id WHERE addresses.state_province_county = 'Wisconsin'	behavior_monitoring
SELECT addresses.line_1 , AVG( student_addresses.monthly_rental ) FROM addresses JOIN student_addresses ON addresses.address_id = student_addresses.address_id GROUP BY student_addresses.address_id	behavior_monitoring
SELECT addresses.zip_postcode FROM addresses JOIN teachers ON addresses.address_id = teachers.address_id WHERE teachers.first_name = 'Lyla'	behavior_monitoring
SELECT teachers.email_address FROM addresses JOIN teachers ON addresses.address_id = teachers.address_id WHERE addresses.zip_postcode = '918'	behavior_monitoring
SELECT COUNT( * ) FROM students WHERE students.student_id NOT IN (SELECT behavior_incident.student_id FROM behavior_incident)	behavior_monitoring
SELECT teachers.last_name FROM teachers EXCEPT SELECT teachers.last_name FROM teachers JOIN detention ON teachers.teacher_id = detention.teacher_id	behavior_monitoring
SELECT addresses.line_1 FROM addresses JOIN teachers ON addresses.address_id = teachers.address_id INTERSECT SELECT addresses.line_1 FROM addresses JOIN teachers ON addresses.address_id = teachers.address_id	behavior_monitoring
SELECT assets.asset_id , assets.asset_details FROM assets JOIN fault_log ON assets.asset_id = fault_log.asset_id HAVING COUNT( * ) = 2 INTERSECT SELECT assets.asset_id , assets.asset_details FROM assets JOIN fault_log ON assets.asset_id = fault_log.asset_id HAVING COUNT( * )<2	assets_maintenance
SELECT COUNT( * ) , maintenance_contracts.maintenance_contract_id FROM maintenance_contracts JOIN assets ON maintenance_contracts.maintenance_contract_id = assets.maintenance_contract_id GROUP BY maintenance_contracts.maintenance_contract_id	assets_maintenance
SELECT COUNT( * ) , third_party_companies.company_id FROM third_party_companies JOIN assets ON third_party_companies.company_id = assets.supplier_company_id GROUP BY third_party_companies.company_id	assets_maintenance
SELECT third_party_companies.company_id , third_party_companies.company_type FROM third_party_companies JOIN maintenance_engineers ON third_party_companies.company_id = maintenance_engineers.company_id HAVING COUNT( * ) >= 2 EXCEPT SELECT third_party_companies.company_id , third_party_companies.company_address FROM third_party_companies JOIN maintenance_contracts ON third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id HAVING COUNT( * ) >= 2	assets_maintenance
SELECT staff.staff_name , staff.staff_id FROM staff JOIN fault_log ON staff.staff_id = fault_log.recorded_by_staff_id EXCEPT SELECT staff.staff_name , staff.staff_id FROM staff JOIN engineer_visits ON staff.staff_id = engineer_visits.contact_staff_id	assets_maintenance
SELECT maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name FROM maintenance_engineers , engineer_visits GROUP BY maintenance_engineers.engineer_id ORDER BY COUNT( * ) DESC LIMIT 1	assets_maintenance
SELECT parts.part_name , parts.part_id FROM parts JOIN part_faults ON parts.part_id = part_faults.part_id GROUP BY parts.part_id HAVING COUNT( * ) > 2	assets_maintenance
SELECT maintenance_engineers.first_name , maintenance_engineers.last_name , maintenance_engineers.other_details , skills.skill_description FROM maintenance_engineers JOIN engineer_skills ON maintenance_engineers.engineer_id = engineer_skills.engineer_id JOIN skills ON engineer_skills.skill_id = skills.skill_id	assets_maintenance
SELECT part_faults.fault_short_name , skills.skill_description FROM part_faults JOIN skills_required_to_fix ON part_faults.part_fault_id = skills_required_to_fix.part_fault_id JOIN skills ON skills_required_to_fix.skill_id = skills.skill_id	assets_maintenance
SELECT parts.part_name , COUNT( * ) FROM parts JOIN asset_parts ON parts.part_id = asset_parts.part_id GROUP BY parts.part_name	assets_maintenance
SELECT fault_log.fault_description , fault_log_parts.fault_status FROM fault_log JOIN fault_log_parts ON fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id	assets_maintenance
SELECT COUNT( * ) , fault_log.fault_log_entry_id FROM fault_log JOIN engineer_visits ON fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id GROUP BY fault_log.fault_log_entry_id ORDER BY COUNT( * ) DESC LIMIT 1	assets_maintenance
SELECT DISTINCT maintenance_engineers.last_name FROM maintenance_engineers	assets_maintenance
SELECT DISTINCT fault_log_parts.fault_status FROM fault_log_parts	assets_maintenance
SELECT maintenance_engineers.first_name , maintenance_engineers.last_name FROM maintenance_engineers WHERE maintenance_engineers.engineer_id NOT IN (SELECT engineer_visits.engineer_id FROM engineer_visits)	assets_maintenance
SELECT assets.asset_id , assets.asset_details , assets.asset_make , assets.asset_model FROM assets	assets_maintenance
SELECT assets.asset_acquired_date FROM assets ORDER BY assets.asset_acquired_date ASC LIMIT 1	assets_maintenance
SELECT parts.part_id , parts.part_name FROM parts JOIN part_faults ON parts.part_id = part_faults.part_id JOIN skills_required_to_fix ON part_faults.part_fault_id = skills_required_to_fix.part_fault_id GROUP BY parts.part_id ORDER BY COUNT( * ) DESC LIMIT 1	assets_maintenance
SELECT parts.part_name FROM parts JOIN part_faults ON parts.part_id = part_faults.part_id GROUP BY parts.part_name ORDER BY COUNT( * ) ASC LIMIT 1	assets_maintenance
SELECT maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name FROM maintenance_engineers JOIN engineer_visits ON maintenance_engineers.engineer_id = engineer_visits.engineer_id GROUP BY maintenance_engineers.engineer_id ORDER BY COUNT( * ) ASC LIMIT 1	assets_maintenance
SELECT staff.staff_name , maintenance_engineers.first_name , maintenance_engineers.last_name FROM staff JOIN engineer_visits ON staff.staff_id = engineer_visits.contact_staff_id JOIN maintenance_engineers ON engineer_visits.engineer_id = maintenance_engineers.engineer_id	assets_maintenance
SELECT fault_log.fault_log_entry_id , fault_log.fault_description , fault_log.fault_log_entry_datetime FROM fault_log JOIN fault_log_parts ON fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id GROUP BY fault_log.fault_log_entry_id ORDER BY COUNT( * ) DESC LIMIT 1	assets_maintenance
SELECT skills.skill_id , skills.skill_code FROM skills JOIN skills_required_to_fix ON skills.skill_id = skills_required_to_fix.skill_id GROUP BY skills.skill_id ORDER BY COUNT( * ) DESC LIMIT 1	assets_maintenance
SELECT DISTINCT assets.asset_model FROM assets	assets_maintenance
SELECT assets.asset_make , assets.asset_model , assets.asset_details FROM assets ORDER BY assets.asset_disposed_date ASC	assets_maintenance
SELECT parts.part_id , parts.part_name FROM parts ORDER BY parts.chargeable_amount ASC LIMIT 1	assets_maintenance
SELECT third_party_companies.company_name FROM third_party_companies JOIN maintenance_contracts ON third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id ORDER BY maintenance_contracts.contract_start_date ASC LIMIT 1	assets_maintenance
SELECT third_party_companies.company_address FROM third_party_companies JOIN maintenance_contracts ON third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id ORDER BY maintenance_contracts.contract_end_date DESC LIMIT 1	assets_maintenance
SELECT staff.gender FROM staff GROUP BY staff.gender ORDER BY COUNT( * ) DESC LIMIT 1	assets_maintenance
SELECT staff.staff_name , COUNT( * ) FROM staff JOIN engineer_visits ON staff.staff_id = engineer_visits.contact_staff_id GROUP BY staff.staff_name	assets_maintenance
SELECT assets.asset_model FROM assets WHERE assets.asset_id NOT IN (SELECT fault_log.asset_id FROM fault_log)	assets_maintenance
SELECT station.local_authority , station.services FROM station	station_weather
SELECT train.train_number , train.name FROM train ORDER BY train.time ASC	station_weather
SELECT train.time , train.train_number FROM train WHERE train.destination = 'Chennai' ORDER BY train.time ASC	station_weather
SELECT COUNT( * ) FROM train WHERE train.name LIKE '%Express%'	station_weather
SELECT train.train_number , train.time FROM train WHERE train.origin = 'Chennai' AND train.destination = 'Guruvayur'	station_weather
SELECT train.origin , COUNT( * ) FROM train GROUP BY train.origin	station_weather
SELECT train.name FROM train JOIN route ON train.id = route.train_id GROUP BY route.train_id ORDER BY COUNT( * ) DESC LIMIT 1	station_weather
SELECT COUNT( * ) , station.network_name , station.services FROM station JOIN route ON station.id = route.station_id GROUP BY route.station_id	station_weather
SELECT AVG( weekly_weather.high_temperature ) , weekly_weather.day_of_week FROM weekly_weather GROUP BY weekly_weather.day_of_week	station_weather
SELECT MAX( weekly_weather.low_temperature ) , AVG( weekly_weather.precipitation ) FROM weekly_weather JOIN station ON weekly_weather.station_id = station.id WHERE station.network_name = 'Amersham'	station_weather
SELECT train.name , train.time FROM station JOIN route ON station.id = route.station_id JOIN train ON route.train_id = train.id WHERE station.local_authority = 'Chiltern'	station_weather
SELECT COUNT( DISTINCT station.services ) FROM station	station_weather
SELECT station.id , station.local_authority FROM weekly_weather JOIN station ON weekly_weather.station_id = station.id GROUP BY weekly_weather.station_id ORDER BY AVG( weekly_weather.high_temperature ) DESC LIMIT 1	station_weather
SELECT station.id , station.local_authority FROM weekly_weather JOIN station ON weekly_weather.station_id = station.id GROUP BY weekly_weather.station_id HAVING MAX( weekly_weather.precipitation ) > 50	station_weather
SELECT MIN( weekly_weather.low_temperature ) , MAX( weekly_weather.wind_speed_mph ) FROM weekly_weather	station_weather
SELECT train.origin FROM train GROUP BY train.origin HAVING COUNT( * ) > 1	station_weather
SELECT COUNT( * ) FROM professor JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'accounting'	college_1
SELECT COUNT( * ) FROM professor JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'accounting'	college_1
SELECT COUNT( DISTINCT class.prof_num ) FROM class WHERE class.crs_code = 'ACCT-211'	college_1
SELECT COUNT( DISTINCT class.prof_num ) FROM class WHERE class.crs_code = 'ACCT-211'	college_1
SELECT employee.emp_fname , employee.emp_lname FROM professor JOIN department ON professor.dept_code = department.dept_code JOIN employee ON professor.emp_num = employee.emp_num WHERE department.dept_name = 'biology'	college_1
SELECT employee.emp_fname , employee.emp_lname FROM professor JOIN department ON professor.dept_code = department.dept_code JOIN employee ON professor.emp_num = employee.emp_num WHERE department.dept_name = 'biology'	college_1
SELECT DISTINCT employee.emp_fname , employee.emp_dob FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE class.crs_code = 'ACCT-211'	college_1
SELECT DISTINCT employee.emp_fname , employee.emp_dob FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE class.crs_code = 'ACCT-211'	college_1
SELECT COUNT( * ) FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE employee.emp_lname = 'Graztevski'	college_1
SELECT COUNT( * ) FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE employee.emp_lname = 'Graztevski'	college_1
SELECT department.school_code FROM department WHERE department.dept_name = 'accounting'	college_1
SELECT department.school_code FROM department WHERE department.dept_name = 'accounting'	college_1
SELECT course.crs_credit , course.crs_description FROM course WHERE course.crs_code = 'CIS-220'	college_1
SELECT course.crs_credit , course.crs_description FROM course WHERE course.crs_code = 'CIS-220'	college_1
SELECT department.dept_address FROM department WHERE department.dept_name = 'history'	college_1
SELECT department.dept_address FROM department WHERE department.dept_name = 'history'	college_1
SELECT COUNT( DISTINCT department.dept_address ) FROM department WHERE department.school_code = 'BUS'	college_1
SELECT COUNT( DISTINCT department.dept_address ) FROM department WHERE department.school_code = 'BUS'	college_1
SELECT COUNT( DISTINCT department.dept_address ) , department.school_code FROM department GROUP BY department.school_code	college_1
SELECT COUNT( DISTINCT department.dept_address ) , department.school_code FROM department GROUP BY department.school_code	college_1
SELECT course.crs_credit , course.crs_description FROM course WHERE course.crs_code = 'QM-261'	college_1
SELECT course.crs_credit , course.crs_description FROM course WHERE course.crs_code = 'QM-261'	college_1
SELECT COUNT( DISTINCT department.dept_name ) , department.school_code FROM department GROUP BY department.school_code	college_1
SELECT COUNT( DISTINCT department.dept_name ) , department.school_code FROM department GROUP BY department.school_code	college_1
SELECT COUNT( DISTINCT department.dept_name ) , department.school_code FROM department GROUP BY department.school_code HAVING COUNT( DISTINCT department.dept_name )<5	college_1
SELECT COUNT( DISTINCT department.dept_name ) , department.school_code FROM department GROUP BY department.school_code HAVING COUNT( DISTINCT department.dept_name )<5	college_1
SELECT COUNT( * ) , class.crs_code FROM class GROUP BY class.crs_code	college_1
SELECT COUNT( * ) , class.crs_code FROM class GROUP BY class.crs_code	college_1
SELECT SUM( course.crs_credit ) , course.dept_code FROM course GROUP BY course.dept_code	college_1
SELECT SUM( course.crs_credit ) , course.dept_code FROM course GROUP BY course.dept_code	college_1
SELECT COUNT( * ) , class.class_room FROM class GROUP BY class.class_room HAVING COUNT( * ) >= 2	college_1
SELECT COUNT( * ) , class.class_room FROM class GROUP BY class.class_room HAVING COUNT( * ) >= 2	college_1
SELECT COUNT( * ) , course.dept_code FROM class JOIN course ON class.crs_code = course.crs_code GROUP BY course.dept_code	college_1
SELECT COUNT( * ) , course.dept_code FROM class JOIN course ON class.crs_code = course.crs_code GROUP BY course.dept_code	college_1
SELECT COUNT( * ) , department.school_code FROM class JOIN course ON class.crs_code = course.crs_code JOIN department ON course.dept_code = department.dept_code GROUP BY department.school_code	college_1
SELECT COUNT( * ) , department.school_code FROM class JOIN course ON class.crs_code = course.crs_code JOIN department ON course.dept_code = department.dept_code GROUP BY department.school_code	college_1
SELECT COUNT( * ) , department.school_code FROM department JOIN professor ON department.dept_code = professor.dept_code GROUP BY department.school_code	college_1
SELECT COUNT( * ) , department.school_code FROM department JOIN professor ON department.dept_code = professor.dept_code GROUP BY department.school_code	college_1
SELECT employee.emp_jobcode , COUNT( * ) FROM employee GROUP BY employee.emp_jobcode ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT employee.emp_jobcode , COUNT( * ) FROM employee GROUP BY employee.emp_jobcode ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT department.school_code FROM department JOIN professor ON department.dept_code = professor.dept_code GROUP BY department.school_code ORDER BY COUNT( * ) ASC LIMIT 1	college_1
SELECT department.school_code FROM department JOIN professor ON department.dept_code = professor.dept_code GROUP BY department.school_code ORDER BY COUNT( * ) ASC LIMIT 1	college_1
SELECT COUNT( * ) , professor.dept_code FROM professor WHERE professor.prof_high_degree = 'Ph.D.' GROUP BY professor.dept_code	college_1
SELECT COUNT( * ) , professor.dept_code FROM professor WHERE professor.prof_high_degree = 'Ph.D.' GROUP BY professor.dept_code	college_1
SELECT COUNT( * ) , student.dept_code FROM student GROUP BY student.dept_code	college_1
SELECT COUNT( * ) , student.dept_code FROM student GROUP BY student.dept_code	college_1
SELECT SUM( student.stu_hrs ) , student.dept_code FROM student GROUP BY student.dept_code	college_1
SELECT SUM( student.stu_hrs ) , student.dept_code FROM student GROUP BY student.dept_code	college_1
SELECT MAX( student.stu_gpa ) , AVG( student.stu_gpa ) , MIN( student.stu_gpa ) , student.dept_code FROM student GROUP BY student.dept_code	college_1
SELECT MAX( student.stu_gpa ) , AVG( student.stu_gpa ) , MIN( student.stu_gpa ) , student.dept_code FROM student GROUP BY student.dept_code	college_1
SELECT department.dept_name , AVG( student.stu_gpa ) FROM student JOIN department ON student.dept_code = department.dept_code GROUP BY student.dept_code ORDER BY AVG( student.stu_gpa ) DESC LIMIT 1	college_1
SELECT department.dept_name , AVG( student.stu_gpa ) FROM student JOIN department ON student.dept_code = department.dept_code GROUP BY student.dept_code ORDER BY AVG( student.stu_gpa ) DESC LIMIT 1	college_1
SELECT COUNT( DISTINCT department.school_code ) FROM department	college_1
SELECT COUNT( DISTINCT department.school_code ) FROM department	college_1
SELECT COUNT( DISTINCT class.class_code ) FROM class	college_1
SELECT COUNT( DISTINCT class.class_code ) FROM class	college_1
SELECT COUNT( DISTINCT class.crs_code ) FROM class	college_1
SELECT COUNT( DISTINCT class.crs_code ) FROM class	college_1
SELECT COUNT( DISTINCT department.dept_name ) FROM department	college_1
SELECT COUNT( DISTINCT department.dept_name ) FROM department	college_1
SELECT COUNT( * ) FROM department JOIN course ON department.dept_code = course.dept_code WHERE department.dept_name = 'Computer Info. Systems'	college_1
SELECT COUNT( * ) FROM department JOIN course ON department.dept_code = course.dept_code WHERE department.dept_name = (SELECT COUNT( DISTINCT course.crs_code ) FROM department JOIN course ON department.dept_code = course.dept_code)	college_1
SELECT COUNT( DISTINCT class.class_section ) FROM class WHERE class.crs_code = 'ACCT-211'	college_1
SELECT COUNT( DISTINCT class.class_section ) FROM class WHERE class.crs_code = 'ACCT-211'	college_1
SELECT SUM( course.crs_credit ) , course.dept_code FROM course JOIN class ON course.crs_code = class.crs_code GROUP BY course.dept_code	college_1
SELECT SUM( course.crs_credit ) , course.dept_code FROM course JOIN class ON course.crs_code = class.crs_code GROUP BY course.dept_code	college_1
SELECT department.dept_name FROM course JOIN class ON course.crs_code = class.crs_code JOIN department ON course.dept_code = department.dept_code GROUP BY course.dept_code ORDER BY SUM( course.crs_credit ) DESC LIMIT 1	college_1
SELECT department.dept_name FROM course JOIN class ON course.crs_code = class.crs_code JOIN department ON course.dept_code = department.dept_code GROUP BY course.dept_code ORDER BY SUM( course.crs_credit ) DESC LIMIT 1	college_1
SELECT COUNT( * ) FROM class JOIN enroll ON class.class_code = enroll.class_code WHERE class.crs_code = 'ACCT-211'	college_1
SELECT COUNT( * ) FROM class JOIN enroll ON class.class_code = enroll.class_code WHERE class.crs_code = 'ACCT-211'	college_1
SELECT student.stu_fname FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON enroll.stu_num = student.stu_num WHERE class.crs_code = 'ACCT-211'	college_1
SELECT student.stu_fname FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON enroll.stu_num = student.stu_num WHERE class.crs_code = 'ACCT-211'	college_1
SELECT student.stu_fname FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON enroll.stu_num = student.stu_num WHERE class.crs_code = 'ACCT-211' AND enroll.enroll_grade = 'C'	college_1
SELECT DISTINCT student.stu_fname FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON enroll.stu_num = student.stu_num WHERE class.crs_code = 'ACCT-211' AND enroll.enroll_grade = 'C'	college_1
SELECT COUNT( * ) FROM employee	college_1
SELECT COUNT( * ) FROM employee	college_1
SELECT COUNT( * ) FROM professor WHERE professor.prof_high_degree = 'Ph.D.'	college_1
SELECT COUNT( * ) FROM professor WHERE professor.prof_high_degree = 'Ph.D.'	college_1
SELECT COUNT( * ) FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN course ON class.crs_code = course.crs_code JOIN department ON course.dept_code = department.dept_code WHERE department.dept_name = 'accounting'	college_1
SELECT COUNT( * ) FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN course ON class.crs_code = course.crs_code JOIN department ON course.dept_code = department.dept_code WHERE department.dept_name = 'accounting'	college_1
SELECT department.dept_name FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN course ON class.crs_code = course.crs_code JOIN department ON course.dept_code = department.dept_code GROUP BY course.dept_code ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT department.dept_name FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN course ON class.crs_code = course.crs_code JOIN department ON course.dept_code = department.dept_code GROUP BY course.dept_code ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT department.dept_name FROM department ORDER BY department.dept_name ASC	college_1
SELECT department.dept_name FROM department ORDER BY department.dept_name ASC	college_1
SELECT class.class_code FROM class WHERE class.class_room = 'KLR209'	college_1
SELECT class.class_code FROM class WHERE class.class_room = 'KLR209'	college_1
SELECT employee.emp_fname FROM employee WHERE employee.emp_jobcode = 'PROF' ORDER BY employee.emp_dob ASC	college_1
SELECT employee.emp_fname FROM employee WHERE employee.emp_jobcode = (SELECT employee.emp_jobcode FROM employee ORDER BY employee.emp_jobcode ASC LIMIT employee.emp_dob) ORDER BY employee.emp_dob ASC	college_1
SELECT employee.emp_fname , professor.prof_office FROM professor JOIN employee ON professor.emp_num = employee.emp_num ORDER BY employee.emp_fname ASC	college_1
SELECT employee.emp_fname , professor.prof_office FROM professor JOIN employee ON professor.emp_num = employee.emp_num ORDER BY employee.emp_fname ASC	college_1
SELECT employee.emp_fname , employee.emp_lname FROM employee ORDER BY employee.emp_dob ASC LIMIT 1	college_1
SELECT employee.emp_fname , employee.emp_lname FROM employee ORDER BY employee.emp_dob ASC LIMIT 1	college_1
SELECT student.stu_fname , student.stu_lname , student.stu_gpa FROM student WHERE student.stu_gpa > 3 ORDER BY student.stu_dob DESC LIMIT 1	college_1
SELECT student.stu_fname , student.stu_lname , student.stu_gpa FROM student WHERE student.stu_gpa > 3 ORDER BY student.stu_dob DESC LIMIT 1	college_1
SELECT DISTINCT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.enroll_grade = 'C'	college_1
SELECT DISTINCT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.enroll_grade = 'C'	college_1
SELECT department.dept_name , professor.dept_code FROM professor JOIN department ON professor.dept_code = department.dept_code GROUP BY professor.dept_code ORDER BY COUNT( * ) ASC LIMIT 1	college_1
SELECT department.dept_name FROM professor JOIN department ON professor.dept_code = department.dept_code GROUP BY professor.dept_code ORDER BY COUNT( * ) ASC LIMIT 1	college_1
SELECT department.dept_name , professor.dept_code FROM professor JOIN department ON professor.dept_code = department.dept_code WHERE professor.prof_high_degree = 'Ph.D.' GROUP BY professor.dept_code ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT department.dept_name , professor.dept_code FROM professor JOIN department ON professor.dept_code = department.dept_code WHERE professor.prof_high_degree = 'Ph' GROUP BY professor.dept_code ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT employee.emp_fname FROM employee WHERE employee.emp_jobcode NOT IN (SELECT employee.emp_fname FROM employee JOIN class ON employee.emp_num = class.prof_num)	college_1
SELECT employee.emp_fname FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE employee.emp_jobcode NOT IN (SELECT class.prof_num FROM class)	college_1
SELECT employee.emp_fname FROM employee JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'history' EXCEPT SELECT employee.emp_fname FROM employee JOIN class ON employee.emp_num = class.prof_num JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'history'	college_1
SELECT employee.emp_fname FROM employee JOIN professor ON employee.emp_num = professor.emp_num JOIN employee ON employee.emp_num = professor.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'history'	college_1
SELECT employee.emp_lname , professor.prof_office FROM employee JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'history'	college_1
SELECT employee.emp_lname , professor.prof_office FROM employee JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'history'	college_1
SELECT department.dept_name , professor.prof_office FROM employee JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE employee.emp_lname = 'Heffington'	college_1
SELECT department.dept_name , professor.prof_office FROM employee JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE employee.emp_lname = 'Heffington'	college_1
SELECT employee.emp_lname , employee.emp_hiredate FROM employee JOIN professor ON employee.emp_num = professor.emp_num WHERE professor.prof_office = 'DRE 102'	college_1
SELECT employee.emp_lname , employee.emp_hiredate FROM employee JOIN professor ON employee.emp_num = professor.emp_num WHERE professor.prof_office = 'DRE 102'	college_1
SELECT class.crs_code FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON student.stu_num = enroll.stu_num WHERE student.stu_lname = 'Smithson'	college_1
SELECT class.crs_code FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON student.stu_num = enroll.stu_num WHERE student.stu_lname = 'Smithson'	college_1
SELECT course.crs_description , course.crs_credit FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON student.stu_num = enroll.stu_num JOIN class ON course.crs_code = class.crs_code WHERE student.stu_lname = 'Smithson'	college_1
SELECT course.crs_description , course.crs_credit FROM class JOIN enroll ON class.class_code = enroll.class_code JOIN student ON student.stu_num = enroll.stu_num JOIN class ON course.crs_code = class.crs_code WHERE student.stu_lname = 'Smithson'	college_1
SELECT COUNT( * ) FROM professor WHERE professor.prof_high_degree = 'Ph.D.' OR professor.prof_high_degree = 'MA'	college_1
SELECT COUNT( * ) FROM professor WHERE professor.prof_high_degree = 'yes' OR professor.prof_high_degree = 'Ph.D.'	college_1
SELECT COUNT( * ) FROM professor JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'Accounting' OR department.dept_name = 'Biology'	college_1
SELECT COUNT( * ) FROM professor JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'Accounting' OR department.dept_name = 'Biology'	college_1
SELECT employee.emp_fname FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE class.crs_code = 'CIS-220' INTERSECT SELECT employee.emp_fname FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE class.crs_code = 'QM-261'	college_1
SELECT employee.emp_fname FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE class.crs_code = 'CIS-220' INTERSECT SELECT employee.emp_fname FROM employee JOIN class ON employee.emp_num = class.prof_num WHERE class.crs_code = 'QM-261'	college_1
class.class_code = enroll.class_code	college_1
class.class_code = enroll.class_code	college_1
SELECT AVG( student.stu_gpa ) FROM enroll JOIN student ON enroll.stu_num = student.stu_num JOIN class ON enroll.class_code = class.class_code WHERE class.crs_code = 'ACCT-211'	college_1
SELECT AVG( student.stu_gpa ) FROM enroll JOIN student ON enroll.stu_num = student.stu_num JOIN class ON enroll.class_code = class.class_code WHERE class.crs_code = 'ACCT-211'	college_1
SELECT student.stu_gpa , student.stu_phone , student.stu_fname FROM student ORDER BY student.stu_gpa DESC LIMIT 5	college_1
SELECT student.stu_gpa , student.stu_phone , student.stu_fname FROM student ORDER BY student.stu_gpa DESC LIMIT 5	college_1
SELECT department.dept_name FROM student JOIN department ON student.dept_code = department.dept_code ORDER BY student.stu_gpa ASC LIMIT 1	college_1
SELECT department.dept_name FROM student JOIN department ON student.dept_code = department.dept_code ORDER BY student.stu_gpa ASC LIMIT 1	college_1
SELECT student.stu_fname , student.stu_gpa FROM student WHERE student.stu_gpa<(SELECT AVG( student.stu_gpa ) FROM student)	college_1
SELECT student.stu_fname , student.stu_gpa FROM student WHERE student.stu_gpa<(SELECT AVG( student.stu_gpa ) FROM student)	college_1
SELECT department.dept_name , department.dept_address FROM student JOIN department ON student.dept_code = department.dept_code GROUP BY student.dept_code ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT department.dept_name , department.dept_address FROM student JOIN department ON student.dept_code = department.dept_code GROUP BY student.dept_code ORDER BY COUNT( * ) DESC LIMIT 1	college_1
SELECT department.dept_name , department.dept_address , COUNT( * ) FROM student JOIN department ON student.dept_code = department.dept_code GROUP BY student.dept_code ORDER BY COUNT( * ) DESC LIMIT 3	college_1
SELECT department.dept_name , department.dept_address , COUNT( * ) FROM student JOIN department ON student.dept_code = department.dept_code GROUP BY student.dept_code ORDER BY COUNT( * ) DESC LIMIT 3	college_1
SELECT employee.emp_fname , professor.prof_office FROM employee JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON department.dept_code = professor.dept_code WHERE department.dept_name = 'history' AND professor.prof_high_degree = 'Ph.D.'	college_1
department , professor	college_1
SELECT employee.emp_fname , class.crs_code FROM class JOIN employee ON class.prof_num = employee.emp_num	college_1
SELECT employee.emp_fname , class.crs_code FROM class JOIN employee ON class.prof_num = employee.emp_num	college_1
SELECT employee.emp_fname , course.crs_description FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN course ON class.crs_code = course.crs_code	college_1
SELECT employee.emp_fname , course.crs_description FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN course ON class.crs_code = course.crs_code	college_1
SELECT employee.emp_fname , professor.prof_office , course.crs_description FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN course ON class.crs_code = course.crs_code JOIN professor ON employee.emp_num = professor.emp_num	college_1
SELECT employee.emp_fname , professor.prof_office , course.crs_description FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN course ON class.crs_code = course.crs_code JOIN professor ON employee.emp_num = professor.emp_num	college_1
SELECT employee.emp_fname , professor.prof_office , course.crs_description , department.dept_name FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN course ON class.crs_code = course.crs_code JOIN department ON professor.dept_code = department.dept_code	college_1
SELECT employee.emp_fname , professor.prof_office , department.dept_name , course.crs_description FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN course ON class.crs_code = course.crs_code JOIN department ON professor.dept_code = department.dept_code	college_1
SELECT student.stu_fname , student.stu_lname , course.crs_description FROM student JOIN enroll ON student.stu_num = enroll.stu_num JOIN class ON enroll.class_code = class.class_code JOIN course ON class.crs_code = course.crs_code	college_1
SELECT student.stu_fname , student.stu_lname , course.crs_description FROM student JOIN enroll ON student.stu_num = enroll.stu_num JOIN class ON enroll.class_code = class.class_code JOIN course ON class.crs_code = course.crs_code	college_1
SELECT student.stu_fname , student.stu_lname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.enroll_grade = 'C' OR enroll.enroll_grade = 'A'	college_1
SELECT student.stu_fname , student.stu_lname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.enroll_grade = 'C' OR enroll.enroll_grade = 'a'	college_1
SELECT employee.emp_fname , class.class_room FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON department.dept_code = professor.dept_code WHERE department.dept_name = 'Accounting'	college_1
SELECT employee.emp_fname , class.class_room FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON department.dept_code = professor.dept_code WHERE department.dept_name = 'Accounting'	college_1
SELECT DISTINCT employee.emp_fname , professor.prof_high_degree FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON department.dept_code = professor.dept_code WHERE department.dept_name = 'Computer Info. Systems'	college_1
SELECT DISTINCT employee.emp_fname , professor.prof_high_degree FROM class JOIN employee ON class.prof_num = employee.emp_num JOIN professor ON employee.emp_num = professor.emp_num JOIN department ON department.dept_code = professor.dept_code WHERE department.dept_name = 'Computer Information Systems'	college_1
SELECT student.stu_lname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.enroll_grade = 'A' AND enroll.class_code = 10018	college_1
SELECT student.stu_lname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.enroll_grade = 'A' AND enroll.class_code = 10018	college_1
SELECT employee.emp_fname , professor.prof_office FROM professor JOIN employee ON professor.emp_num = employee.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'history' AND professor.prof_high_degree != 'Ph.D.'	college_1
SELECT employee.emp_fname , professor.prof_office FROM professor JOIN employee ON professor.emp_num = employee.emp_num JOIN department ON professor.dept_code = department.dept_code WHERE department.dept_name = 'history' AND professor.prof_high_degree != 'Ph.D.s'	college_1
SELECT employee.emp_fname FROM class JOIN employee ON class.prof_num = employee.emp_num GROUP BY class.prof_num HAVING COUNT( * ) > 1	college_1
SELECT employee.emp_fname FROM class JOIN employee ON class.prof_num = employee.emp_num GROUP BY class.prof_num HAVING COUNT( * ) > 1	college_1
SELECT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num GROUP BY enroll.stu_num HAVING COUNT( * ) = 1	college_1
SELECT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num GROUP BY enroll.stu_num HAVING COUNT( * ) = 1	college_1
SELECT department.dept_name FROM course JOIN department ON course.dept_code = department.dept_code WHERE course.crs_description LIKE '%Statistics%'	college_1
SELECT department.dept_name FROM course JOIN department ON course.dept_code = department.dept_code WHERE course.crs_description LIKE '%Statistics%'	college_1
SELECT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num JOIN class ON enroll.class_code = class.class_code WHERE class.crs_code = 'ACCT-211' AND student.stu_lname LIKE '%S%'	college_1
SELECT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num JOIN class ON enroll.class_code = class.class_code WHERE class.crs_code = 'ACCT-211' AND student.stu_lname LIKE '%S%'	college_1
SELECT COUNT( * ) FROM club	sports_competition
SELECT COUNT( * ) FROM club	sports_competition
SELECT DISTINCT club.region FROM club ORDER BY club.region ASC	sports_competition
SELECT DISTINCT club.region FROM club ORDER BY club.region ASC	sports_competition
SELECT AVG( club_rank.gold ) FROM club_rank	sports_competition
SELECT AVG( club_rank.gold ) FROM club_rank	sports_competition
SELECT competition.competition_type , competition.country FROM competition	sports_competition
SELECT competition.competition_type , competition.country FROM competition	sports_competition
SELECT DISTINCT competition.year FROM competition WHERE competition.competition_type != 'Tournament'	sports_competition
SELECT DISTINCT competition.year FROM competition WHERE competition.competition_type != 'tournament'	sports_competition
SELECT MAX( club_rank.silver ) , MIN( club_rank.silver ) FROM club_rank	sports_competition
SELECT MAX( club_rank.silver ) , MIN( club_rank.silver ) FROM club_rank	sports_competition
SELECT COUNT( * ) FROM club_rank WHERE club_rank.total<10	sports_competition
SELECT COUNT( * ) FROM club_rank WHERE club_rank.total<10	sports_competition
SELECT club.name FROM club ORDER BY club.start_year ASC	sports_competition
SELECT club.name FROM club ORDER BY club.start_year ASC	sports_competition
SELECT club.name FROM club ORDER BY club.name DESC	sports_competition
SELECT club.name FROM club ORDER BY club.name DESC	sports_competition
SELECT club.name , player.player_id FROM club JOIN player ON club.club_id = player.club_id	sports_competition
SELECT club.name , player.player_id FROM club JOIN player ON club.club_id = player.club_id	sports_competition
SELECT club.name FROM club JOIN player ON club.club_id = player.club_id WHERE player.position = 'Right Wing'	sports_competition
SELECT club.name FROM club JOIN player ON club.club_id = player.club_id WHERE player.position = 'Right Wing'	sports_competition
SELECT AVG( player.points ) FROM club JOIN player ON club.club_id = player.club_id WHERE club.name = 'AIB'	sports_competition
SELECT AVG( player.points ) FROM club JOIN player ON club.club_id = player.club_id WHERE club.name = 'AIB'	sports_competition
SELECT player.position , AVG( player.points ) FROM player GROUP BY player.position	sports_competition
SELECT player.position , AVG( player.points ) FROM player GROUP BY player.position	sports_competition
SELECT player.position FROM player GROUP BY player.name HAVING AVG( player.points ) >= 20	sports_competition
SELECT player.position FROM player GROUP BY player.name HAVING AVG( player.points ) >= 20	sports_competition
SELECT competition.competition_type , COUNT( * ) FROM competition GROUP BY competition.competition_type	sports_competition
SELECT competition.competition_type , COUNT( * ) FROM competition GROUP BY competition.competition_type	sports_competition
SELECT competition.competition_type FROM competition GROUP BY competition.competition_type ORDER BY COUNT( * ) DESC LIMIT 1	sports_competition
SELECT competition.competition_type FROM competition GROUP BY competition.competition_type ORDER BY COUNT( * ) DESC LIMIT 1	sports_competition
SELECT competition.competition_type FROM competition GROUP BY competition.competition_type HAVING COUNT( * ) <= 5	sports_competition
SELECT competition.competition_type FROM competition GROUP BY competition.competition_type HAVING COUNT( * ) <= 5	sports_competition
SELECT club.name FROM club WHERE club.club_id NOT IN (SELECT player.club_id FROM player)	sports_competition
SELECT club.name FROM club WHERE club.club_id NOT IN (SELECT player.club_id FROM player)	sports_competition
SELECT player.position FROM player WHERE player.points > 20 INTERSECT SELECT player.position FROM player WHERE player.points<10	sports_competition
SELECT player.position FROM player WHERE player.points > 20 INTERSECT SELECT player.position FROM player WHERE player.points<10	sports_competition
SELECT SUM( player.points ) FROM player	sports_competition
SELECT SUM( player.points ) FROM player	sports_competition
SELECT COUNT( DISTINCT player.position ) FROM player	sports_competition
SELECT COUNT( DISTINCT player.position ) FROM player	sports_competition
SELECT player.name FROM player WHERE player.points > (SELECT AVG( player.points ) FROM player)	sports_competition
SELECT player.name FROM player WHERE player.points > (SELECT AVG( player.points ) FROM player)	sports_competition
SELECT COUNT( * ) , player.position FROM player WHERE player.points<30 GROUP BY player.position	sports_competition
SELECT COUNT( * ) , player.position FROM player WHERE player.points<30 GROUP BY player.position	sports_competition
SELECT competition.country FROM competition WHERE competition.competition_type = 'Tournament' GROUP BY competition.country ORDER BY COUNT( * ) DESC LIMIT 1	sports_competition
SELECT competition.country FROM competition WHERE competition.competition_type = 'tournament' GROUP BY competition.country ORDER BY COUNT( * ) DESC LIMIT 1	sports_competition
SELECT competition.country FROM competition WHERE competition.competition_type = 'Friendly' INTERSECT SELECT competition.country FROM competition WHERE competition.competition_type = 'Tournament'	sports_competition
SELECT competition.country FROM competition WHERE competition.competition_type = 'friendly' INTERSECT SELECT competition.country FROM competition WHERE competition.competition_type = 'tournament'	sports_competition
SELECT competition.country FROM competition EXCEPT SELECT competition.country FROM competition WHERE competition.competition_type = 'Friendly'	sports_competition
SELECT competition.country FROM competition EXCEPT SELECT competition.country FROM competition WHERE competition.competition_type = 'friendly'	sports_competition
SELECT SUM( furniture.num_of_component ) FROM furniture	manufacturer
SELECT furniture.name , furniture.furniture_id FROM furniture ORDER BY furniture.market_rate DESC LIMIT 1	manufacturer
SELECT SUM( furniture.market_rate ) FROM furniture ORDER BY furniture.market_rate DESC LIMIT 2	manufacturer
SELECT furniture.num_of_component , furniture.name FROM furniture WHERE furniture.num_of_component > 10	manufacturer
SELECT furniture.name , furniture.num_of_component FROM furniture ORDER BY furniture.market_rate ASC LIMIT 1	manufacturer
SELECT furniture.name FROM furniture JOIN furniture_manufacte ON furniture.furniture_id = furniture_manufacte.furniture_id WHERE furniture_manufacte.price_in_dollar<(SELECT MAX( furniture_manufacte.price_in_dollar ) FROM furniture_manufacte)	manufacturer
SELECT manufacturer.open_year , manufacturer.name FROM manufacturer ORDER BY manufacturer.num_of_shops DESC LIMIT 1	manufacturer
SELECT AVG( manufacturer.num_of_factories ) FROM manufacturer WHERE manufacturer.num_of_shops > 20	manufacturer
SELECT manufacturer.name , manufacturer.manufacturer_id FROM manufacturer ORDER BY manufacturer.open_year ASC	manufacturer
SELECT manufacturer.name , manufacturer.open_year FROM manufacturer WHERE manufacturer.num_of_shops > 10 OR manufacturer.num_of_factories<10	manufacturer
SELECT MAX( manufacturer.num_of_shops ) , AVG( manufacturer.num_of_factories ) FROM manufacturer WHERE manufacturer.open_year<1990	manufacturer
SELECT manufacturer.manufacturer_id , manufacturer.num_of_shops FROM manufacturer JOIN furniture_manufacte ON manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id ORDER BY furniture_manufacte.price_in_dollar DESC LIMIT 1	manufacturer
SELECT COUNT( * ) , manufacturer.name FROM manufacturer JOIN furniture_manufacte ON manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id GROUP BY manufacturer.manufacturer_id	manufacturer
SELECT furniture.name , furniture_manufacte.price_in_dollar FROM furniture JOIN furniture_manufacte ON furniture.furniture_id = furniture_manufacte.furniture_id	manufacturer
SELECT furniture.market_rate , furniture.name FROM furniture WHERE furniture.furniture_id NOT IN (SELECT furniture_manufacte.furniture_id FROM furniture_manufacte)	manufacturer
SELECT manufacturer.name FROM furniture JOIN furniture_manufacte ON furniture.furniture_id = furniture_manufacte.furniture_id JOIN manufacturer ON furniture_manufacte.manufacturer_id = manufacturer.manufacturer_id WHERE furniture.num_of_component<6 INTERSECT SELECT manufacturer.name FROM furniture JOIN furniture_manufacte ON furniture.furniture_id = furniture_manufacte.furniture_id JOIN manufacturer ON furniture_manufacte.manufacturer_id = manufacturer.manufacturer_id WHERE furniture.num_of_component > 10	manufacturer
SELECT employees.first_name , departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id	hr_1
SELECT employees.first_name , departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees WHERE employees.salary<6000	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees WHERE employees.salary<6000	hr_1
SELECT employees.first_name , employees.department_id FROM employees WHERE employees.last_name = 'McEwen'	hr_1
SELECT employees.first_name , employees.department_id FROM employees WHERE employees.last_name = 'McEwen'	hr_1
SELECT * FROM employees WHERE employees.department_id = 'null'	hr_1
SELECT * FROM employees WHERE employees.department_id = 'null'	hr_1
SELECT * FROM departments WHERE departments.department_name = 'Marketing'	hr_1
SELECT * FROM departments WHERE departments.department_name = 'Marketing'	hr_1
	hr_1
	hr_1
	hr_1
	hr_1
	hr_1
	hr_1
SELECT employees.phone_number FROM employees WHERE employees.salary BETWEEN 8000 and 12000	hr_1
SELECT employees.phone_number FROM employees WHERE employees.salary BETWEEN 8000 and 12000	hr_1
SELECT * FROM employees WHERE employees.salary BETWEEN 8000 and 12000 AND employees.commission_pct != 'null' OR employees.department_id != 40	hr_1
SELECT * FROM employees WHERE employees.salary BETWEEN 8000 and 12000 AND employees.commission_pct != 'null' OR employees.department_id != 40	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees WHERE employees.commission_pct = 'null'	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees WHERE employees.commission_pct = 'null'	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees WHERE employees.first_name LIKE '%m%'	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees WHERE employees.first_name LIKE '%m%'	hr_1
SELECT employees.job_id , employees.hire_date FROM employees WHERE employees.hire_date >= 'November 5th, 2007' AND employees.hire_date <= '2009'	hr_1
SELECT employees.job_id , employees.hire_date FROM employees WHERE employees.hire_date<(SELECT MAX( employees.hire_date ) FROM employees)	hr_1
SELECT employees.first_name , employees.last_name FROM employees WHERE employees.department_id = 70 OR employees.department_id = 90	hr_1
SELECT employees.first_name , employees.last_name FROM employees WHERE employees.department_id = 70 OR employees.department_id = 90	hr_1
SELECT employees.salary , employees.manager_id FROM employees WHERE employees.manager_id != 'null'	hr_1
SELECT employees.salary , employees.manager_id FROM employees WHERE employees.manager_id != 'null'	hr_1
SELECT * FROM employees WHERE employees.hire_date<'2002-06-21'	hr_1
SELECT * FROM employees WHERE employees.hire_date<'2002'	hr_1
SELECT * FROM employees WHERE employees.first_name LIKE '%D%' OR employees.first_name LIKE '%S%' ORDER BY employees.salary DESC	hr_1
SELECT * FROM employees WHERE employees.first_name LIKE '%D%' OR employees.first_name LIKE '%S%' ORDER BY employees.salary DESC	hr_1
SELECT * FROM employees WHERE employees.hire_date > (SELECT AVG( employees.hire_date ) FROM employees)	hr_1
SELECT * FROM employees WHERE employees.hire_date > (SELECT AVG( * ) FROM employees INTERSECT SELECT AVG( employees.hire_date ) FROM employees)	hr_1
SELECT jobs.job_title FROM jobs WHERE jobs.min_salary > 9000	hr_1
SELECT jobs.job_title FROM jobs WHERE jobs.min_salary > 9000	hr_1
SELECT jobs.job_title , jobs.max_salary FROM jobs WHERE jobs.max_salary BETWEEN 12000 and 18000	hr_1
SELECT jobs.job_title , jobs.min_salary FROM jobs WHERE jobs.max_salary BETWEEN 12000 and 18000	hr_1
SELECT employees.email FROM employees WHERE employees.commission_pct = 'null' AND employees.salary BETWEEN 7000 and 12000 AND employees.department_id = 50	hr_1
SELECT employees.email FROM employees WHERE employees.commission_pct = 'null' AND employees.salary BETWEEN 7000 and 12000 AND employees.department_id = 50	hr_1
SELECT job_history.employee_id , MAX( job_history.end_date ) FROM job_history GROUP BY job_history.employee_id	hr_1
SELECT job_history.employee_id , MAX( job_history.end_date ) FROM job_history GROUP BY job_history.employee_id	hr_1
SELECT employees.department_id FROM employees WHERE employees.commission_pct != 'null' GROUP BY employees.department_id	hr_1
SELECT employees.department_id FROM employees GROUP BY employees.department_id HAVING COUNT( employees.commission_pct ) > 10	hr_1
SELECT DISTINCT employees.department_id FROM employees GROUP BY employees.department_id , employees.manager_id HAVING COUNT( employees.employee_id ) >= 4	hr_1
SELECT DISTINCT employees.department_id FROM employees GROUP BY employees.department_id , employees.manager_id HAVING COUNT( employees.employee_id ) >= 4	hr_1
SELECT employees.department_id , AVG( employees.salary ) FROM employees WHERE employees.commission_pct != 'null' GROUP BY employees.department_id	hr_1
SELECT employees.department_id , AVG( employees.salary ) FROM employees WHERE employees.commission_pct != 'null' GROUP BY employees.department_id	hr_1
SELECT locations.country_id , COUNT( * ) FROM locations GROUP BY locations.country_id	hr_1
SELECT locations.country_id , COUNT( * ) FROM locations GROUP BY locations.country_id	hr_1
SELECT job_history.job_id FROM job_history GROUP BY job_history.job_id HAVING COUNT( * ) >= 2	hr_1
SELECT job_history.job_id FROM job_history WHERE job_history.start_date > 300 GROUP BY job_history.job_id HAVING COUNT( * ) > 1	hr_1
SELECT job_history.employee_id FROM job_history GROUP BY job_history.employee_id HAVING COUNT( * ) >= 2	hr_1
SELECT job_history.employee_id FROM job_history GROUP BY job_history.employee_id HAVING COUNT( * ) >= 2	hr_1
SELECT employees.employee_id , countries.country_name FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id JOIN countries ON locations.country_id = countries.country_id	hr_1
SELECT employees.employee_id , countries.country_name FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id JOIN countries ON locations.country_id = countries.country_id	hr_1
SELECT departments.department_name , COUNT( * ) FROM employees JOIN departments ON employees.department_id = departments.department_id GROUP BY departments.department_name	hr_1
SELECT departments.department_name , COUNT( * ) FROM employees JOIN departments ON employees.department_id = departments.department_id GROUP BY departments.department_name	hr_1
SELECT * FROM job_history JOIN employees ON job_history.employee_id = employees.employee_id WHERE employees.salary >= 12000	hr_1
SELECT * FROM job_history JOIN employees ON job_history.employee_id = employees.employee_id WHERE employees.salary >= 12000	hr_1
SELECT jobs.job_title , AVG( employees.salary ) FROM employees JOIN jobs ON employees.job_id = jobs.job_id GROUP BY jobs.job_title	hr_1
SELECT jobs.job_title , AVG( employees.salary ) FROM employees JOIN jobs ON employees.job_id = jobs.job_id GROUP BY jobs.job_title	hr_1
SELECT employees.first_name , employees.last_name FROM employees WHERE employees.salary > (SELECT employees.salary FROM employees WHERE employees.employee_id = 163)	hr_1
SELECT employees.first_name , employees.last_name FROM employees WHERE employees.salary > (SELECT employees.salary FROM employees WHERE employees.employee_id = 163)	hr_1
SELECT MIN( employees.salary ) , employees.department_id FROM employees GROUP BY employees.department_id	hr_1
SELECT MIN( employees.salary ) , employees.department_id FROM employees GROUP BY employees.department_id	hr_1
SELECT employees.first_name , employees.last_name , employees.department_id FROM employees WHERE employees.salary IN (SELECT MIN( employees.salary ) FROM employees GROUP BY employees.department_id)	hr_1
SELECT employees.first_name , employees.last_name , employees.department_id FROM employees WHERE employees.salary IN (SELECT MIN( employees.salary ) FROM employees GROUP BY employees.department_id)	hr_1
SELECT employees.employee_id FROM employees WHERE employees.salary > (SELECT AVG( employees.salary ) FROM employees)	hr_1
SELECT employees.employee_id FROM employees WHERE employees.salary > (SELECT AVG( employees.salary ) FROM employees)	hr_1
SELECT employees.employee_id , employees.salary FROM employees WHERE employees.manager_id = (SELECT employees.employee_id FROM employees WHERE employees.first_name = 'Payam')	hr_1
SELECT employees.employee_id , employees.salary FROM employees WHERE employees.manager_id = (SELECT employees.employee_id FROM employees WHERE employees.first_name = 'Payam')	hr_1
SELECT DISTINCT departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id	hr_1
SELECT DISTINCT departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id	hr_1
SELECT DISTINCT * FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN employees ON employees.employee_id = departments.manager_id	hr_1
SELECT DISTINCT * FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN employees ON employees.employee_id = departments.manager_id	hr_1
SELECT * FROM departments WHERE departments.department_name = 'Marketing'	hr_1
SELECT * FROM departments WHERE departments.department_name = 'Marketing'	hr_1
SELECT job_history.employee_id FROM job_history GROUP BY job_history.employee_id HAVING COUNT( * ) >= 2	hr_1
SELECT job_history.employee_id FROM job_history GROUP BY job_history.employee_id HAVING COUNT( * ) >= 2	hr_1
SELECT DISTINCT employees.department_id FROM employees GROUP BY employees.department_id , employees.manager_id HAVING COUNT( employees.employee_id ) >= 4	hr_1
SELECT DISTINCT employees.department_id FROM employees GROUP BY employees.department_id , employees.manager_id HAVING COUNT( employees.employee_id ) >= 4	hr_1
SELECT employees.job_id FROM employees GROUP BY employees.job_id HAVING AVG( employees.salary ) > 8000	hr_1
SELECT employees.job_id FROM employees GROUP BY employees.job_id HAVING AVG( employees.salary ) > 8000	hr_1
SELECT employees.employee_id , jobs.job_title FROM employees JOIN jobs ON employees.job_id = jobs.job_id WHERE employees.department_id = 80	hr_1
SELECT employees.employee_id , jobs.job_title FROM employees JOIN jobs ON employees.job_id = jobs.job_id WHERE employees.department_id = 80	hr_1
SELECT employees.first_name , employees.job_id FROM employees JOIN departments ON employees.department_id = departments.department_id WHERE departments.department_name = 'Finance'	hr_1
SELECT employees.first_name , employees.job_id FROM employees JOIN departments ON employees.department_id = departments.department_id WHERE departments.department_name = 'Finance'	hr_1
SELECT * FROM employees WHERE employees.salary >= (SELECT MIN( employees.salary ) FROM employees) AND employees.salary <= 2500	hr_1
SELECT * FROM employees WHERE employees.salary >= (SELECT MIN( employees.salary ) FROM employees) AND employees.salary <= 2500	hr_1
SELECT * FROM employees WHERE employees.department_id NOT IN (SELECT departments.department_id FROM departments WHERE departments.manager_id BETWEEN 100 and 200)	hr_1
SELECT * FROM employees WHERE employees.department_id NOT IN (SELECT departments.department_id FROM departments WHERE departments.manager_id BETWEEN 100 and 200)	hr_1
SELECT employees.first_name , employees.last_name , employees.hire_date FROM employees WHERE employees.department_id = (SELECT employees.department_id FROM employees WHERE employees.first_name = 'Clara')	hr_1
SELECT employees.first_name , employees.last_name , employees.hire_date FROM employees WHERE employees.department_id = (SELECT employees.department_id FROM employees WHERE employees.first_name = 'Clara')	hr_1
SELECT employees.first_name , employees.last_name , employees.hire_date FROM employees WHERE employees.department_id = (SELECT employees.department_id FROM employees WHERE employees.first_name = 'Clara') AND employees.first_name != 'Clara'	hr_1
SELECT employees.first_name , employees.last_name , employees.hire_date FROM employees WHERE employees.department_id = (SELECT employees.department_id FROM employees WHERE employees.first_name = 'Clara') AND employees.first_name != 'Clara'	hr_1
SELECT employees.employee_id , employees.first_name , employees.last_name FROM employees WHERE employees.department_id IN (SELECT employees.department_id FROM employees WHERE employees.first_name LIKE '%t%')	hr_1
SELECT employees.employee_id , employees.first_name , employees.last_name FROM employees WHERE employees.department_id IN (SELECT employees.department_id FROM employees WHERE employees.first_name LIKE '%t%')	hr_1
SELECT employees.department_id FROM employees	hr_1
SELECT employees.department_id FROM employees	hr_1
SELECT employees.employee_id , employees.job_id FROM employees WHERE employees.salary<(SELECT MIN( employees.salary ) FROM employees WHERE employees.job_id = 'MK_MAN')	hr_1
SELECT employees.employee_id , employees.job_id FROM employees WHERE employees.salary<(SELECT MIN( employees.salary ) FROM employees WHERE employees.job_id = 'MK_MAN')	hr_1
SELECT employees.employee_id , employees.first_name , employees.last_name , employees.job_id FROM employees WHERE employees.salary > (SELECT MAX( employees.salary ) FROM employees WHERE employees.job_id = 'PU_MAN')	hr_1
SELECT employees.employee_id , employees.first_name , employees.last_name , employees.job_id FROM employees WHERE employees.salary > (SELECT MAX( employees.salary ) FROM employees WHERE employees.job_id = 'PU_MAN')	hr_1
SELECT employees.department_id , SUM( employees.salary ) FROM employees GROUP BY employees.department_id HAVING COUNT( * ) >= 2	hr_1
SELECT employees.department_id , SUM( employees.salary ) FROM employees GROUP BY employees.department_id HAVING COUNT( * ) >= 2	hr_1
SELECT * FROM employees WHERE employees.employee_id NOT IN (SELECT job_history.employee_id FROM job_history)	hr_1
SELECT * FROM employees WHERE employees.employee_id NOT IN (SELECT job_history.employee_id FROM job_history)	hr_1
SELECT employees.first_name , employees.last_name , employees.salary , employees.department_id , MAX( employees.salary ) FROM employees GROUP BY employees.department_id	hr_1
SELECT employees.first_name , employees.last_name , employees.salary , employees.department_id , MAX( employees.salary ) FROM employees GROUP BY employees.department_id	hr_1
SELECT employees.first_name , employees.last_name , departments.department_name , locations.city , locations.state_province FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id	hr_1
SELECT employees.first_name , employees.last_name , departments.department_name , locations.city , locations.state_province FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id	hr_1
SELECT employees.first_name , employees.last_name , locations.city FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id WHERE employees.first_name LIKE '%z%'	hr_1
SELECT employees.first_name , employees.last_name , locations.city FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id WHERE employees.first_name LIKE '%Z%'	hr_1
SELECT departments.department_name , locations.city , locations.state_province FROM locations JOIN departments ON locations.location_id = departments.location_id	hr_1
SELECT departments.department_name , locations.city , locations.state_province FROM locations JOIN departments ON locations.location_id = departments.location_id	hr_1
SELECT employees.first_name , employees.last_name , employees.employee_id , countries.country_name FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id JOIN countries ON locations.country_id = countries.country_id	hr_1
SELECT employees.first_name , employees.last_name , employees.employee_id , countries.country_name FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id JOIN countries ON locations.country_id = countries.country_id	hr_1
SELECT departments.department_name , COUNT( * ) FROM employees JOIN departments ON employees.department_id = departments.department_id GROUP BY departments.department_name	hr_1
SELECT departments.department_name , COUNT( * ) FROM employees JOIN departments ON employees.department_id = departments.department_id GROUP BY departments.department_name	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id WHERE locations.city = 'London'	hr_1
SELECT employees.first_name , employees.last_name , employees.salary FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id WHERE locations.city = 'London'	hr_1
SELECT song.song_name , song.releasedate FROM song ORDER BY song.releasedate DESC LIMIT 1	music_1
SELECT song.song_name , song.releasedate FROM song ORDER BY song.releasedate DESC LIMIT 1	music_1
SELECT files.f_id FROM files ORDER BY files.duration DESC LIMIT 1	music_1
SELECT files.f_id FROM files ORDER BY files.duration DESC LIMIT 1	music_1
SELECT song.song_name FROM song WHERE song.languages = 'English'	music_1
SELECT song.song_name FROM song WHERE song.languages = 'English'	music_1
SELECT files.f_id FROM files WHERE files.formats = 'mp3'	music_1
SELECT files.f_id FROM files WHERE files.formats = 'mp3'	music_1
SELECT DISTINCT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.rating > 9	music_1
SELECT DISTINCT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.rating > 9	music_1
SELECT DISTINCT files.file_size , files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.resolution<800	music_1
SELECT DISTINCT files.file_size , files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.resolution<800	music_1
SELECT song.artist_name FROM song JOIN files ON song.f_id = files.f_id ORDER BY files.duration ASC LIMIT 1	music_1
SELECT song.artist_name FROM song JOIN files ON song.f_id = files.f_id ORDER BY files.duration ASC LIMIT 1	music_1
SELECT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.rating DESC LIMIT 3	music_1
SELECT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.rating DESC LIMIT 3	music_1
SELECT COUNT( * ) FROM files WHERE files.duration = 'How many songs have 4'	music_1
SELECT COUNT( * ) FROM files JOIN song ON files.f_id = song.f_id	music_1
SELECT COUNT( * ) FROM artist WHERE artist.country = 'Bangladesh'	music_1
SELECT COUNT( * ) FROM artist WHERE artist.country = 't'	music_1
SELECT AVG( song.rating ) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female'	music_1
SELECT AVG( song.rating ) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female'	music_1
SELECT files.formats FROM files GROUP BY files.formats ORDER BY COUNT( * ) DESC LIMIT 1	music_1
SELECT files.formats FROM files GROUP BY files.formats ORDER BY COUNT( * ) DESC LIMIT 1	music_1
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK' INTERSECT SELECT song.artist_name FROM song WHERE song.languages = 'English'	music_1
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK' INTERSECT SELECT song.artist_name FROM song WHERE song.languages = 'English'	music_1
SELECT files.f_id FROM files WHERE files.formats = 'mp4' INTERSECT SELECT song.f_id FROM song WHERE song.resolution<1000	music_1
SELECT files.f_id FROM files WHERE files.formats = 'mp4' INTERSECT SELECT song.f_id FROM song WHERE song.resolution<1000	music_1
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female' AND song.languages = 'Bangla'	music_1
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female' AND song.languages = 'Bangla'	music_1
SELECT AVG( files.duration ) FROM files JOIN song ON files.f_id = song.f_id WHERE files.formats = 'mp3' AND song.resolution<800	music_1
SELECT AVG( files.duration ) FROM files JOIN song ON files.f_id = song.f_id WHERE files.formats = 'mp3' AND song.resolution<800	music_1
SELECT COUNT( * ) , artist.gender FROM artist GROUP BY artist.gender	music_1
SELECT COUNT( * ) , artist.gender FROM artist GROUP BY artist.gender	music_1
SELECT AVG( song.rating ) , song.languages FROM song GROUP BY song.languages	music_1
SELECT AVG( song.rating ) , song.languages FROM song GROUP BY song.languages	music_1
SELECT artist.gender , artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.resolution ASC LIMIT 1	music_1
SELECT artist.gender , artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.resolution ASC LIMIT 1	music_1
SELECT COUNT( * ) , files.formats FROM files GROUP BY files.formats	music_1
SELECT COUNT( * ) , files.formats FROM files GROUP BY files.formats	music_1
SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT MIN( song.resolution ) FROM song WHERE song.languages = 'English')	music_1
SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT MIN( song.resolution ) FROM song WHERE song.languages = 'English')	music_1
SELECT song.song_name FROM song WHERE song.rating<(SELECT MAX( song.rating ) FROM song WHERE song.genre_is = 'blues')	music_1
SELECT song.song_name FROM song WHERE song.rating<(SELECT MAX( song.rating ) FROM song WHERE song.genre_is = 'blues')	music_1
SELECT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.song_name LIKE '%love%'	music_1
SELECT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.song_name LIKE '%love%'	music_1
SELECT artist.artist_name , artist.gender FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.releasedate = 'yes'	music_1
SELECT artist.artist_name , artist.gender FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.releasedate = 'yes'	music_1
SELECT genre.g_name , genre.rating FROM genre ORDER BY genre.g_name ASC	music_1
SELECT genre.g_name , genre.rating FROM genre ORDER BY genre.g_name ASC	music_1
SELECT song.song_name FROM song ORDER BY song.resolution ASC	music_1
SELECT song.song_name FROM song ORDER BY song.resolution ASC	music_1
SELECT files.f_id FROM files WHERE files.formats = 'mp4' UNION SELECT song.f_id FROM song WHERE song.resolution > 720	music_1
SELECT files.f_id FROM files WHERE files.formats = 'mp4' UNION SELECT song.f_id FROM song WHERE song.resolution > 720	music_1
SELECT song.song_name FROM song WHERE song.languages IN (SELECT song.song_name FROM files JOIN song ON files.f_id = song.f_id WHERE song.languages = 'English')	music_1
SELECT song.song_name FROM song WHERE files.duration IN (SELECT song.song_name FROM files JOIN song ON files.f_id = song.f_id WHERE song.languages = 'English')	music_1
SELECT song.languages FROM song GROUP BY song.languages ORDER BY COUNT( * ) DESC LIMIT 1	music_1
SELECT song.languages FROM song GROUP BY song.languages ORDER BY COUNT( * ) DESC LIMIT 1	music_1
SELECT song.artist_name FROM song WHERE song.resolution > 500 GROUP BY song.languages ORDER BY COUNT( * ) DESC LIMIT 1	music_1
SELECT song.artist_name FROM song WHERE song.resolution > 500 GROUP BY song.languages ORDER BY COUNT( * ) DESC LIMIT 1	music_1
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK' AND artist.gender = 'Male'	music_1
SELECT artist.artist_name FROM artist WHERE artist.country = 't' AND artist.gender = 'male'	music_1
SELECT song.song_name FROM song WHERE song.genre_is = 'modern' OR song.languages = 'English'	music_1
SELECT song.song_name FROM song WHERE song.genre_is = 'modern' OR song.languages = 'English'	music_1
SELECT song.song_name FROM files JOIN song ON files.f_id = song.f_id WHERE files.formats = 'mp3' INTERSECT SELECT song.song_name FROM song WHERE song.resolution<1000	music_1
SELECT song.song_name FROM files JOIN song ON files.f_id = song.f_id WHERE files.formats = 'mp3' INTERSECT SELECT song.song_name FROM song WHERE song.resolution<1000	music_1
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK' INTERSECT SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'English'	music_1
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK' INTERSECT SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'English'	music_1
SELECT AVG( song.rating ) , AVG( song.resolution ) FROM song WHERE song.languages = 'Bangla'	music_1
SELECT AVG( song.rating ) , AVG( song.resolution ) FROM song WHERE song.languages = 'bangla'	music_1
SELECT MAX( song.resolution ) , MIN( song.resolution ) FROM files JOIN song ON files.f_id = song.f_id WHERE files.duration = 3	music_1
files , song	music_1
SELECT MAX( files.duration ) , MAX( song.resolution ) , song.languages FROM files JOIN song ON files.f_id = song.f_id GROUP BY song.languages ORDER BY song.languages ASC	music_1
SELECT MAX( files.duration ) , MAX( song.resolution ) , song.languages FROM files JOIN song ON files.f_id = song.f_id GROUP BY song.languages ORDER BY song.languages ASC	music_1
SELECT MIN( files.duration ) , MIN( song.rating ) , song.genre_is FROM files JOIN song ON files.f_id = song.f_id GROUP BY song.genre_is ORDER BY song.genre_is ASC	music_1
SELECT MIN( files.duration ) , MIN( song.rating ) , song.genre_is FROM files JOIN song ON files.f_id = song.f_id GROUP BY song.genre_is ORDER BY song.genre_is ASC	music_1
SELECT artist.artist_name , COUNT( * ) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'English' GROUP BY song.artist_name HAVING COUNT( * ) >= 1	music_1
SELECT artist.artist_name , COUNT( * ) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'English' GROUP BY song.artist_name HAVING COUNT( * ) >= 1	music_1
SELECT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 900 GROUP BY song.artist_name HAVING COUNT( * ) >= 1	music_1
SELECT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 900 GROUP BY song.artist_name HAVING COUNT( * ) >= 1	music_1
SELECT artist.artist_name , COUNT( * ) FROM artist JOIN song ON artist.artist_name = song.artist_name GROUP BY song.artist_name ORDER BY COUNT( * ) DESC LIMIT 3	music_1
SELECT artist.artist_name , COUNT( * ) FROM artist JOIN song ON artist.artist_name = song.artist_name GROUP BY song.artist_name ORDER BY COUNT( * ) DESC LIMIT 3	music_1
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name GROUP BY song.artist_name ORDER BY COUNT( * ) ASC LIMIT 1	music_1
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name GROUP BY song.artist_name ORDER BY COUNT( * ) ASC LIMIT 1	music_1
SELECT song.song_name FROM song WHERE song.rating<(SELECT MIN( song.rating ) FROM song WHERE song.languages = 'English')	music_1
SELECT song.song_name FROM song WHERE song.rating<(SELECT MIN( song.rating ) FROM song WHERE song.languages = 'English')	music_1
SELECT song.f_id FROM song WHERE song.resolution > (SELECT MAX( song.resolution ) FROM song WHERE song.rating<8)	music_1
SELECT song.f_id FROM song WHERE song.resolution > (SELECT MAX( song.resolution ) FROM song WHERE song.rating<8)	music_1
SELECT song.f_id FROM song WHERE song.resolution > (SELECT AVG( song.resolution ) FROM song WHERE song.genre_is = 'modern')	music_1
SELECT song.f_id FROM song WHERE song.resolution > (SELECT AVG( song.resolution ) FROM song WHERE song.genre_is = 'modern')	music_1
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'Bangla' GROUP BY song.artist_name ORDER BY COUNT( * ) DESC LIMIT 3	music_1
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'Bangla' GROUP BY song.artist_name ORDER BY COUNT( * ) DESC LIMIT 3	music_1
SELECT song.f_id , song.genre_is , song.artist_name FROM song WHERE song.languages = 'English' ORDER BY song.rating ASC	music_1
SELECT song.f_id , song.genre_is , song.artist_name FROM song WHERE song.languages = 'English' ORDER BY song.rating ASC	music_1
SELECT files.duration , files.file_size , files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.genre_is = 'pop' ORDER BY song.song_name ASC	music_1
SELECT files.duration , files.file_size , files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.genre_is = 'pop' ORDER BY song.song_name ASC	music_1
SELECT DISTINCT song.artist_name FROM song WHERE song.languages = 'English' EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 8	music_1
SELECT DISTINCT song.artist_name FROM song WHERE song.languages = 'English' EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 8	music_1
SELECT DISTINCT artist.artist_name FROM artist WHERE artist.country = 'Bangladesh' EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 7	music_1
SELECT DISTINCT artist.artist_name FROM artist WHERE artist.country = 'Bangladesh' EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 7	music_1
SELECT college.name_full , college.college_id FROM college JOIN player_college ON college.college_id = player_college.college_id GROUP BY college.college_id ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT college.name_full , college.college_id FROM college JOIN player_college ON college.college_id = player_college.college_id GROUP BY college.college_id ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT AVG( salary.salary ) FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings'	baseball_1
SELECT AVG( salary.salary ) FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings'	baseball_1
SELECT player.bats , player.bats FROM player JOIN all_star ON player.player_id = all_star.player_id WHERE all_star.year = 1998	baseball_1
SELECT player.name_first , player.name_first FROM player JOIN all_star ON player.player_id = all_star.player_id WHERE all_star.year = 1998	baseball_1
SELECT player.name_last , player.name_last , player.player_id FROM player JOIN all_star ON player.player_id = all_star.player_id GROUP BY player.player_id ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT player.name_first , player.name_first , player.player_id , COUNT( * ) FROM player JOIN all_star ON player.player_id = all_star.player_id GROUP BY player.player_id ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT hall_of_fame.ballots , COUNT( * ) FROM hall_of_fame GROUP BY hall_of_fame.ballots	baseball_1
SELECT hall_of_fame.ballots , COUNT( * ) FROM hall_of_fame GROUP BY hall_of_fame.ballots	baseball_1
SELECT home_game.year , AVG( home_game.attendance ) FROM home_game GROUP BY home_game.year	baseball_1
SELECT home_game.year , AVG( home_game.attendance ) FROM home_game GROUP BY home_game.year	baseball_1
SELECT team.team_id , team.rank FROM home_game JOIN team ON home_game.team_id = team.team_id JOIN 2014, ON home_game.games = 2014, GROUP BY team.team_id ORDER BY AVG( home_game.attendance ) DESC LIMIT 1	baseball_1
SELECT team.team_id , team.rank FROM home_game JOIN team ON home_game.team_id = team.team_id WHERE home_game.games = 2014 GROUP BY home_game.team_id ORDER BY AVG( home_game.attendance ) DESC LIMIT 1	baseball_1
SELECT player.name_first , player.name_first , manager_award.player_id FROM player JOIN manager_award ON player.player_id = manager_award.player_id GROUP BY manager_award.player_id ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT player.name_first , player.name_first , manager_award.player_id FROM player JOIN manager_award ON player.player_id = manager_award.player_id GROUP BY manager_award.player_id ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT COUNT( * ) FROM park WHERE park.state = 'NY'	baseball_1
SELECT COUNT( * ) FROM park WHERE park.state = 'NY'	baseball_1
SELECT player.name_first , player.name_first , player.player_id FROM player JOIN player_award ON player.player_id = player_award.player_id GROUP BY player.player_id ORDER BY COUNT( * ) DESC LIMIT 3	baseball_1
SELECT player.name_first , player.name_first , player.player_id FROM player JOIN player_award ON player.player_id = player_award.player_id GROUP BY player.player_id ORDER BY COUNT( * ) DESC LIMIT 3	baseball_1
SELECT player.bats FROM player GROUP BY player.bats ORDER BY COUNT( * ) ASC LIMIT 3	baseball_1
SELECT player.bats FROM player GROUP BY player.bats ORDER BY COUNT( * ) ASC LIMIT 3	baseball_1
player.name_first = player.name_first	baseball_1
SELECT player.name_first , player.name_first FROM player WHERE player.death_city = 'empty'	baseball_1
SELECT COUNT( * ) FROM player WHERE player.birth_country = 'USA' AND player.bats = 'R'	baseball_1
SELECT COUNT( * ) FROM player WHERE player.birth_country = 'USA' AND player.bats = 'R'	baseball_1
SELECT AVG( player.height ) FROM player JOIN player_college ON player.player_id = player_college.player_id JOIN college ON college.college_id = player_college.college_id WHERE college.city = 'Yale University'	baseball_1
SELECT AVG( player.height ) FROM player JOIN player_college ON player.player_id = player_college.player_id JOIN college ON college.college_id = player_college.college_id WHERE college.city = 'Yale University'	baseball_1
SELECT team.name , team.team_id , MAX( salary.salary ) FROM team JOIN salary ON team.team_id = salary.team_id GROUP BY team.team_id	baseball_1
SELECT team.name , team.team_id , MAX( salary.salary ) FROM team JOIN salary ON team.team_id = salary.team_id GROUP BY team.team_id	baseball_1
SELECT team.name , team.team_id FROM team JOIN salary ON team.team_id = salary.team_id GROUP BY team.team_id ORDER BY AVG( salary.salary ) ASC LIMIT 1	baseball_1
SELECT team.name , team.team_id FROM team JOIN salary ON team.team_id = salary.team_id GROUP BY team.team_id ORDER BY AVG( salary.salary ) ASC LIMIT 1	baseball_1
SELECT player.name_first , player.name_first FROM player, manager_award WHERE player_award.year = 1961 INTERSECT SELECT player.name_first , player.name_first FROM player, player_award WHERE player_award.year = 1961	baseball_1
manager_award , player	baseball_1
SELECT player.name_first , player.name_first FROM player WHERE player.weight > 220 OR player.height<75	baseball_1
SELECT player.name_first , player.name_first FROM player WHERE player.weight > 220 OR player.height<75	baseball_1
SELECT MAX( postseason.league_id_loser ) FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings'	baseball_1
SELECT MAX( postseason.league_id_loser ) FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings'	baseball_1
SELECT COUNT( * ) FROM postseason JOIN team ON postseason.losses = team.div_id WHERE team.name = 'Boston Red Stockings' AND postseason.losses = 2009	baseball_1
SELECT COUNT( * ) FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND postseason.year = 2009	baseball_1
SELECT team.name , team.team_id FROM postseason JOIN team ON postseason.team_id_loser = team.team_id WHERE postseason.losses = 2008 GROUP BY postseason.team_id_loser ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT team.team_id , team.name FROM postseason JOIN team ON postseason.team_id_loser = team.team_id WHERE postseason.losses = 2008 GROUP BY postseason.team_id_loser ORDER BY COUNT( * ) DESC LIMIT 1	baseball_1
SELECT COUNT( * ) , postseason.year FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' GROUP BY postseason.year	baseball_1
SELECT COUNT( * ) , postseason.year FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' GROUP BY postseason.year	baseball_1
SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id WHERE team.name = 'Boston Red Stockings' UNION SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' UNION SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' UNION SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings'	baseball_1
SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id WHERE team.name = 'Boston Red Stockings' UNION SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' UNION SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' UNION SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings'	baseball_1
SELECT COUNT( * ) FROM postseason WHERE postseason.losses = 1885 AND postseason.ties = 1	baseball_1
SELECT COUNT( * ) FROM postseason WHERE postseason.losses = 1885 AND postseason.ties = 1	baseball_1
SELECT SUM( salary.salary ) FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND salary.year = 2010	baseball_1
SELECT SUM( salary.salary ) FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND salary.year = 2010	baseball_1
SELECT COUNT( * ) FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND salary.salary = 2000	baseball_1
SELECT COUNT( * ) FROM team JOIN team ON team.park = team.park WHERE player.name_last = 'Boston Red Stockings'	baseball_1
SELECT manager_award_vote.points_max FROM salary WHERE salary.salary = 2001 ORDER BY manager_award.notes DESC LIMIT 3	baseball_1
SELECT salary.salary FROM salary WHERE salary.year = 2001 ORDER BY salary.salary DESC LIMIT 3	baseball_1
SELECT salary.salary FROM salary WHERE salary.year = 2010 UNION SELECT salary.salary FROM salary WHERE salary.year = 2001	baseball_1
SELECT salary.salary FROM salary WHERE salary.year = 2010 UNION SELECT salary.salary FROM salary WHERE salary.year = 2001	baseball_1
SELECT hall_of_fame.ballots FROM hall_of_fame GROUP BY hall_of_fame.ballots ORDER BY COUNT( * ) ASC LIMIT 1	baseball_1
SELECT hall_of_fame.ballots FROM hall_of_fame GROUP BY hall_of_fame.ballots ORDER BY COUNT( * ) ASC LIMIT 1	baseball_1
SELECT COUNT( * ) FROM park WHERE park.city = 'Atlanta'	baseball_1
SELECT COUNT( * ) FROM park WHERE park.city = 'Atlanta'	baseball_1
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 1907 AND park.park_alias = 'Columbia Park'	baseball_1
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 1907 AND park.park_alias = 'Columbia Park'	baseball_1
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 2000 AND park.city = 'Atlanta'	baseball_1
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 2000 AND park.city = 'Atlanta'	baseball_1
SELECT SUM( home_game.attendance ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.games BETWEEN 2000 and 2010	baseball_1
SELECT SUM( home_game.games ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.attendance BETWEEN 2000 and 2010	baseball_1
manager_award_vote , player	baseball_1
SELECT SUM( salary.salary ) FROM salary JOIN player ON salary.player_id = player.player_id WHERE player.name_first = 'Len' AND player.name_last = 'Barker' AND salary.year <= 1990	baseball_1
SELECT player.name_first , player.name_first FROM team JOIN team ON team.team_id_br = team.team_id_br WHERE salary.year = 2005 AND team.name = 'Washington Nationals' INTERSECT SELECT player.name_first , player.name_first FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE salary.year = 2007 AND team.name = 'Washington Nationals'	baseball_1
SELECT player.name_first , player.name_first FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE salary.year = 2007 AND team.name = 'Washington Nationals' INTERSECT SELECT player.name_first , player.name_first FROM team JOIN team ON team.team_id_br = team.team_id_br WHERE salary.year = 2007 AND team.name = 'Washington Nationals'	baseball_1
SELECT SUM( home_game.games ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.attendance BETWEEN 1990 and 2000	baseball_1
SELECT SUM( home_game.games ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.attendance BETWEEN 1990 and 2000	baseball_1
SELECT team.div_id FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE home_game.attendance = 1980 ORDER BY home_game.attendance ASC LIMIT 1	baseball_1
SELECT team.div_id FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE home_game.attendance = 1980 ORDER BY home_game.attendance ASC LIMIT 1	baseball_1
SELECT park.city FROM park GROUP BY park.park_alias HAVING COUNT( * ) > 2	baseball_1
SELECT park.city FROM park GROUP BY park.city HAVING COUNT( * ) > 2	baseball_1
SELECT COUNT( * ) FROM team_franchise WHERE team_franchise.active = 'y'	baseball_1
SELECT COUNT( * ) FROM team_franchise WHERE team_franchise.active = 'y'	baseball_1
SELECT park.city FROM park HAVING COUNT( * ) BETWEEN 2 and 4	baseball_1
SELECT park.city FROM park HAVING COUNT( * ) BETWEEN 2 and 4	baseball_1
SELECT park.park_alias FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 2008 ORDER BY home_game.attendance DESC LIMIT 1	baseball_1
SELECT park.park_alias FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 2008 ORDER BY home_game.attendance DESC LIMIT 1	baseball_1
SELECT COUNT( * ) FROM camera_lens WHERE camera_lens.focal_length_mm > 15	mountain_photos
SELECT camera_lens.brand , camera_lens.name FROM camera_lens ORDER BY camera_lens.max_aperture DESC	mountain_photos
SELECT photos.id , photos.color , photos.name FROM photos	mountain_photos
SELECT MAX( mountain.height ) , AVG( mountain.height ) FROM mountain	mountain_photos
SELECT AVG( mountain.prominence ) FROM mountain WHERE mountain.country = 'Morocco'	mountain_photos
SELECT mountain.name , mountain.height , mountain.prominence FROM mountain WHERE mountain.range != 'Aberdare Range'	mountain_photos
SELECT DISTINCT mountain.id , mountain.name FROM mountain JOIN photos ON mountain.id = photos.mountain_id WHERE mountain.height = 'mountains'	mountain_photos
SELECT mountain.id , mountain.name FROM mountain JOIN photos ON mountain.id = photos.mountain_id GROUP BY mountain.id HAVING COUNT( * ) >= 2	mountain_photos
SELECT camera_lens.name FROM photos JOIN camera_lens ON photos.camera_lens_id = camera_lens.id GROUP BY camera_lens.id ORDER BY COUNT( * ) DESC LIMIT 1	mountain_photos
SELECT camera_lens.name FROM photos JOIN camera_lens ON photos.camera_lens_id = camera_lens.id WHERE camera_lens.brand = 'Sigma' OR camera_lens.brand = 'Olympus'	mountain_photos
SELECT COUNT( DISTINCT camera_lens.brand ) FROM camera_lens	mountain_photos
SELECT COUNT( * ) FROM camera_lens WHERE camera_lens.id NOT IN (SELECT photos.camera_lens_id FROM photos)	mountain_photos
SELECT COUNT( DISTINCT photos.camera_lens_id ) FROM mountain JOIN photos ON mountain.id = photos.mountain_id WHERE mountain.country = 'Ethiopia'	mountain_photos
SELECT camera_lens.brand FROM mountain JOIN photos ON mountain.id = photos.mountain_id JOIN camera_lens ON photos.camera_lens_id = camera_lens.id WHERE mountain.range = 'Toubkal Atlas' INTERSECT SELECT camera_lens.brand FROM mountain JOIN photos ON mountain.id = photos.mountain_id JOIN camera_lens ON photos.camera_lens_id = camera_lens.id WHERE mountain.range = 'Lasta Massif'	mountain_photos
SELECT mountain.name , mountain.prominence FROM mountain EXCEPT SELECT mountain.name , mountain.prominence FROM mountain JOIN photos ON mountain.id = photos.mountain_id JOIN camera_lens ON photos.camera_lens_id = camera_lens.id WHERE camera_lens.brand = 'Sigma'	mountain_photos
SELECT camera_lens.name FROM camera_lens WHERE camera_lens.name LIKE '%Digital%'	mountain_photos
SELECT camera_lens.name , COUNT( * ) FROM camera_lens JOIN photos ON camera_lens.id = photos.camera_lens_id GROUP BY camera_lens.id ORDER BY COUNT( * ) ASC	mountain_photos
SELECT channel.name FROM channel WHERE channel.owner != 'CCTV'	program_share
SELECT channel.name FROM channel WHERE channel.owner != 'CCTV'	program_share
SELECT channel.name FROM channel ORDER BY channel.rating_in_percent DESC	program_share
SELECT channel.name FROM channel ORDER BY channel.rating_in_percent DESC	program_share
SELECT channel.owner FROM channel ORDER BY channel.rating_in_percent DESC LIMIT 1	program_share
SELECT channel.owner FROM channel ORDER BY channel.rating_in_percent DESC LIMIT 1	program_share
SELECT COUNT( * ) FROM program	program_share
SELECT COUNT( * ) FROM program	program_share
SELECT program.name FROM program ORDER BY program.launch ASC	program_share
SELECT program.name FROM program ORDER BY program.launch ASC	program_share
SELECT program.name , program.origin , program.owner FROM program	program_share
SELECT program.name , program.origin , program.owner FROM program	program_share
SELECT program.name FROM program ORDER BY program.launch DESC LIMIT 1	program_share
SELECT program.name FROM program ORDER BY program.launch DESC LIMIT 1	program_share
SELECT SUM( channel.share_in_percent ) FROM channel WHERE channel.owner = 'CCTV'	program_share
SELECT SUM( channel.share_in_percent ) FROM channel WHERE channel.owner = 'CCTV'	program_share
SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'morning'	program_share
SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'morning'	program_share
SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'morning' INTERSECT SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'night'	program_share
SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'morning' INTERSECT SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'night'	program_share
SELECT COUNT( * ) , broadcast.time_of_day FROM broadcast GROUP BY broadcast.time_of_day	program_share
SELECT COUNT( * ) , broadcast.time_of_day FROM broadcast GROUP BY broadcast.time_of_day	program_share
SELECT COUNT( DISTINCT broadcast.program_id ) FROM broadcast WHERE broadcast.time_of_day = 'night'	program_share
SELECT COUNT( DISTINCT broadcast.program_id ) FROM broadcast WHERE broadcast.time_of_day = 'Night'	program_share
SELECT program.name FROM program EXCEPT SELECT program.name FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'morning'	program_share
SELECT program.name FROM program EXCEPT SELECT program.name FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'morning'	program_share
SELECT program.owner FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'morning' INTERSECT SELECT program.owner FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'night'	program_share
SELECT program.owner FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'morning' INTERSECT SELECT program.owner FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'night'	program_share
SELECT program.origin FROM program ORDER BY program.origin ASC	program_share
SELECT program.origin FROM program ORDER BY program.origin ASC	program_share
SELECT COUNT( DISTINCT channel.owner ) FROM channel	program_share
SELECT COUNT( DISTINCT channel.owner ) FROM channel	program_share
SELECT program.name FROM program WHERE program.origin != 'Beijing'	program_share
SELECT program.name FROM program WHERE program.origin != 'Beijing'	program_share
SELECT channel.name FROM channel WHERE channel.owner = 'CCTV' OR channel.owner = 'HBS'	program_share
SELECT channel.name FROM channel WHERE channel.owner = 'CCTV' OR channel.owner = 'HBS'	program_share
SELECT SUM( channel.rating_in_percent ) , channel.owner FROM channel GROUP BY channel.owner	program_share
SELECT SUM( channel.rating_in_percent ) , channel.owner FROM channel GROUP BY channel.owner	program_share
SELECT program.name FROM program JOIN broadcast ON program.program_id = broadcast.program_id GROUP BY broadcast.program_id ORDER BY COUNT( * ) DESC LIMIT 1	program_share
SELECT program.name FROM program JOIN broadcast ON program.program_id = broadcast.program_id GROUP BY broadcast.program_id ORDER BY COUNT( * ) DESC LIMIT 1	program_share
SELECT COUNT( * ) FROM courses	e_learning
SELECT COUNT( * ) FROM courses	e_learning
SELECT courses.course_description FROM courses WHERE courses.course_name = 'database'	e_learning
SELECT courses.course_description FROM courses WHERE courses.course_name = 'database'	e_learning
SELECT course_authors_and_tutors.address_line_1 FROM course_authors_and_tutors WHERE course_authors_and_tutors.personal_name = 'Cathrine'	e_learning
SELECT course_authors_and_tutors.address_line_1 FROM course_authors_and_tutors WHERE course_authors_and_tutors.personal_name = 'Cathrine'	e_learning
SELECT course_authors_and_tutors.address_line_1 FROM course_authors_and_tutors	e_learning
SELECT course_authors_and_tutors.address_line_1 FROM course_authors_and_tutors	e_learning
SELECT course_authors_and_tutors.login_name , course_authors_and_tutors.family_name FROM course_authors_and_tutors	e_learning
SELECT course_authors_and_tutors.login_name , course_authors_and_tutors.family_name FROM course_authors_and_tutors	e_learning
SELECT student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion FROM student_course_enrolment	e_learning
SELECT student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion FROM student_course_enrolment	e_learning
SELECT COUNT( DISTINCT student_course_enrolment.student_id ) FROM student_course_enrolment	e_learning
SELECT COUNT( DISTINCT student_course_enrolment.student_id ) FROM student_course_enrolment	e_learning
SELECT COUNT( student_course_enrolment.course_id ) FROM student_course_enrolment	e_learning
SELECT COUNT( student_course_enrolment.course_id ) FROM student_course_enrolment	e_learning
SELECT student_tests_taken.date_test_taken FROM student_tests_taken WHERE student_tests_taken.test_result = 'Pass'	e_learning
SELECT student_tests_taken.date_test_taken FROM student_tests_taken WHERE student_tests_taken.test_result = 'Pass'	e_learning
SELECT COUNT( * ) FROM student_tests_taken WHERE student_tests_taken.test_result = 'Fail'	e_learning
SELECT COUNT( * ) FROM student_tests_taken WHERE student_tests_taken.test_result = 'Fail'	e_learning
SELECT students.login_name FROM students WHERE students.family_name = 'Ward'	e_learning
SELECT students.login_name FROM students WHERE students.family_name = 'Ward'	e_learning
SELECT students.date_of_latest_logon FROM students WHERE students.family_name = 'Jaskolski' OR students.family_name = 'Langosh'	e_learning
SELECT students.date_of_latest_logon FROM students WHERE students.family_name = 'Jaskolski' OR students.family_name = 'Langosh'	e_learning
SELECT COUNT( * ) FROM students WHERE students.personal_name LIKE '%son%'	e_learning
SELECT COUNT( * ) FROM students WHERE students.personal_name LIKE '%son%'	e_learning
SELECT subjects.subject_name FROM subjects	e_learning
SELECT subjects.subject_name FROM subjects	e_learning
SELECT * FROM course_authors_and_tutors ORDER BY course_authors_and_tutors.personal_name ASC	e_learning
SELECT * FROM course_authors_and_tutors ORDER BY course_authors_and_tutors.personal_name ASC	e_learning
SELECT students.personal_name , students.family_name FROM students ORDER BY students.family_name ASC	e_learning
SELECT students.personal_name , students.family_name FROM students ORDER BY students.family_name ASC	e_learning
SELECT student_tests_taken.test_result , COUNT( * ) FROM student_tests_taken GROUP BY student_tests_taken.test_result ORDER BY COUNT( * ) DESC	e_learning
SELECT student_tests_taken.test_result , COUNT( * ) FROM student_tests_taken GROUP BY student_tests_taken.test_result ORDER BY COUNT( * ) DESC	e_learning
SELECT course_authors_and_tutors.login_name FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'advanced database'	e_learning
SELECT course_authors_and_tutors.login_name FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'advanced database'	e_learning
SELECT course_authors_and_tutors.address_line_1 FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'operating system' OR courses.course_name = 'data structure'	e_learning
SELECT course_authors_and_tutors.address_line_1 FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'operating system' OR courses.course_name = 'data structure'	e_learning
SELECT course_authors_and_tutors.personal_name , course_authors_and_tutors.family_name , courses.author_id FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id GROUP BY courses.author_id ORDER BY COUNT( * ) DESC LIMIT 1	e_learning
SELECT course_authors_and_tutors.personal_name , course_authors_and_tutors.family_name , courses.author_id FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id GROUP BY courses.author_id ORDER BY COUNT( * ) DESC LIMIT 1	e_learning
SELECT course_authors_and_tutors.address_line_1 , courses.author_id FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id GROUP BY courses.author_id HAVING COUNT( * ) >= 2	e_learning
SELECT course_authors_and_tutors.address_line_1 , courses.author_id FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id GROUP BY courses.author_id HAVING COUNT( * ) >= 2	e_learning
SELECT courses.course_name FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id WHERE course_authors_and_tutors.personal_name = 'Julio'	e_learning
SELECT courses.course_name FROM course_authors_and_tutors JOIN courses ON course_authors_and_tutors.author_id = courses.author_id WHERE course_authors_and_tutors.personal_name = 'Julio'	e_learning
SELECT courses.course_name , courses.course_description FROM courses JOIN subjects ON courses.subject_id = subjects.subject_id WHERE subjects.subject_name = 'Computer Science'	e_learning
SELECT courses.course_name , courses.course_description FROM courses JOIN subjects ON courses.subject_id = subjects.subject_id WHERE subjects.subject_name = 'Computer Science'	e_learning
SELECT courses.subject_id , subjects.subject_name , COUNT( * ) FROM courses JOIN subjects ON courses.subject_id = subjects.subject_id GROUP BY courses.subject_id	e_learning
SELECT courses.subject_id , subjects.subject_name , COUNT( * ) FROM courses JOIN subjects ON courses.subject_id = subjects.subject_id GROUP BY courses.subject_id	e_learning
SELECT courses.subject_id , subjects.subject_name , COUNT( * ) FROM courses JOIN subjects ON courses.subject_id = subjects.subject_id GROUP BY courses.subject_id ORDER BY COUNT( * ) ASC	e_learning
SELECT courses.subject_id , subjects.subject_name , COUNT( * ) FROM courses JOIN subjects ON courses.subject_id = subjects.subject_id GROUP BY courses.subject_id ORDER BY COUNT( * ) ASC	e_learning
SELECT student_course_enrolment.date_of_enrolment FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id WHERE courses.course_name = 'Spanish'	e_learning
SELECT student_course_enrolment.date_of_enrolment FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id WHERE courses.course_name = 'Spanish'	e_learning
SELECT courses.course_name FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name ORDER BY COUNT( * ) DESC LIMIT 1	e_learning
SELECT courses.course_name FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name ORDER BY COUNT( * ) DESC LIMIT 1	e_learning
SELECT courses.course_name FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name HAVING COUNT( * ) = 1	e_learning
SELECT courses.course_name FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name HAVING COUNT( * ) = 1	e_learning
SELECT courses.course_description , courses.course_name FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name HAVING COUNT( * ) > 2	e_learning
SELECT courses.course_description , courses.course_name FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name HAVING COUNT( * ) > 2	e_learning
SELECT courses.course_name , COUNT( * ) FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name	e_learning
SELECT courses.course_name , COUNT( * ) FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_name	e_learning
SELECT student_course_enrolment.date_of_enrolment FROM student_course_enrolment JOIN student_tests_taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Pass'	e_learning
SELECT student_course_enrolment.date_of_enrolment FROM student_course_enrolment JOIN student_tests_taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Pass'	e_learning
SELECT student_course_enrolment.date_of_completion FROM student_course_enrolment JOIN student_tests_taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Fail'	e_learning
SELECT student_course_enrolment.date_of_completion FROM student_course_enrolment JOIN student_tests_taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Fail'	e_learning
SELECT student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id WHERE students.personal_name = 'Karson'	e_learning
SELECT student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id WHERE students.personal_name = 'Karson'	e_learning
SELECT student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id WHERE students.family_name = 'Zieme' AND students.personal_name = 'Bernie'	e_learning
SELECT student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id WHERE students.family_name = 'Zieme' AND students.personal_name = 'Bernie'	e_learning
SELECT student_course_enrolment.student_id , students.login_name FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id GROUP BY student_course_enrolment.student_id ORDER BY COUNT( * ) DESC LIMIT 1	e_learning
SELECT student_course_enrolment.student_id , students.login_name FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id GROUP BY student_course_enrolment.student_id ORDER BY COUNT( * ) DESC LIMIT 1	e_learning
SELECT student_course_enrolment.student_id , students.personal_name FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id GROUP BY student_course_enrolment.student_id HAVING COUNT( * ) >= 2	e_learning
SELECT student_course_enrolment.student_id , students.personal_name FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id GROUP BY student_course_enrolment.student_id HAVING COUNT( * ) >= 2	e_learning
SELECT student_course_enrolment.student_id , students.middle_name FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id GROUP BY student_course_enrolment.student_id HAVING COUNT( * ) <= 2	e_learning
SELECT student_course_enrolment.student_id , students.middle_name FROM student_course_enrolment JOIN students ON student_course_enrolment.student_id = students.student_id GROUP BY student_course_enrolment.student_id HAVING COUNT( * ) <= 2	e_learning
SELECT students.personal_name FROM students EXCEPT SELECT students.personal_name FROM students JOIN student_course_enrolment ON students.student_id = student_course_enrolment.student_id	e_learning
SELECT students.personal_name FROM students EXCEPT SELECT students.personal_name FROM students JOIN student_course_enrolment ON students.student_id = student_course_enrolment.student_id	e_learning
SELECT COUNT( * ) FROM students WHERE students.student_id NOT IN (SELECT student_course_enrolment.student_id FROM student_course_enrolment)	e_learning
SELECT COUNT( * ) FROM students WHERE students.student_id NOT IN (SELECT student_course_enrolment.student_id FROM student_course_enrolment)	e_learning
SELECT course_authors_and_tutors.login_name FROM course_authors_and_tutors INTERSECT SELECT students.login_name FROM students	e_learning
SELECT course_authors_and_tutors.login_name FROM course_authors_and_tutors INTERSECT SELECT students.login_name FROM students	e_learning
SELECT course_authors_and_tutors.personal_name FROM course_authors_and_tutors INTERSECT SELECT students.personal_name FROM students	e_learning
SELECT course_authors_and_tutors.personal_name FROM course_authors_and_tutors INTERSECT SELECT students.personal_name FROM students	e_learning
SELECT claims.date_claim_made , claims.claim_id FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id HAVING COUNT( * ) > 2 UNION SELECT claims.date_claim_made , claims.claim_id FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id WHERE claims.amount_claimed = (SELECT MAX( claims.amount_claimed ) FROM claims)	insurance_policies
SELECT claims.date_claim_made , claims.claim_id FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id HAVING COUNT( * ) > 2 UNION SELECT claims.date_claim_made , claims.claim_id FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id WHERE claims.amount_claimed = (SELECT MAX( claims.amount_claimed ) FROM claims)	insurance_policies
SELECT customers.customer_details , customers.customer_id FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) >= 2 EXCEPT SELECT customers.customer_details , customers.customer_id FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id JOIN claims ON customer_policies.policy_id = claims.policy_id	insurance_policies
SELECT customers.customer_details , customers.customer_id FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) >= 2 EXCEPT SELECT customers.customer_details , customers.customer_id FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id JOIN claims ON customer_policies.policy_id = claims.policy_id	insurance_policies
SELECT payments.payment_method_code , payments.date_payment_made , payments.amount_payment FROM payments ORDER BY payments.date_payment_made ASC	insurance_policies
SELECT payments.payment_method_code , payments.date_payment_made , payments.amount_payment FROM payments ORDER BY payments.date_payment_made ASC	insurance_policies
SELECT claims.amount_settled , claims.amount_claimed FROM claims ORDER BY claims.amount_claimed DESC LIMIT 1	insurance_policies
SELECT claims.amount_settled , claims.amount_claimed FROM claims ORDER BY claims.amount_claimed DESC LIMIT 1	insurance_policies
SELECT claims.amount_settled , claims.amount_claimed FROM claims ORDER BY claims.amount_settled ASC LIMIT 1	insurance_policies
SELECT claims.amount_settled , claims.amount_claimed FROM claims ORDER BY claims.amount_settled ASC LIMIT 1	insurance_policies
SELECT claims.date_claim_made , claims.date_claim_settled FROM claims WHERE claims.amount_claimed > (SELECT AVG( claims.amount_claimed ) FROM claims)	insurance_policies
SELECT claims.date_claim_made , claims.date_claim_settled FROM claims WHERE claims.amount_claimed > (SELECT AVG( claims.amount_claimed ) FROM claims)	insurance_policies
SELECT claims.date_claim_made FROM claims WHERE claims.amount_settled <= (SELECT AVG( claims.amount_settled ) FROM claims)	insurance_policies
SELECT claims.date_claim_made FROM claims WHERE claims.amount_settled <= (SELECT AVG( claims.amount_settled ) FROM claims)	insurance_policies
SELECT claims.claim_id , COUNT( * ) FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id	insurance_policies
SELECT claims.claim_id , COUNT( * ) FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id	insurance_policies
SELECT claims.claim_id , claims.date_claim_made , COUNT( * ) FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id ORDER BY COUNT( * ) DESC LIMIT 1	insurance_policies
SELECT claims.claim_id , claims.date_claim_made , COUNT( * ) FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id ORDER BY COUNT( * ) DESC LIMIT 1	insurance_policies
SELECT COUNT( * ) , claims.claim_id FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id ORDER BY claims.date_claim_settled DESC LIMIT 1	insurance_policies
SELECT COUNT( * ) , claims.claim_id FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id ORDER BY claims.date_claim_settled DESC LIMIT 1	insurance_policies
SELECT claims.date_claim_made FROM claims ORDER BY claims.date_claim_made ASC LIMIT 1	insurance_policies
SELECT claims.date_claim_made FROM claims ORDER BY claims.date_claim_made ASC LIMIT 1	insurance_policies
SELECT SUM( settlements.amount_settled ) FROM settlements	insurance_policies
SELECT SUM( settlements.amount_settled ) FROM settlements	insurance_policies
SELECT customers.customer_details , customers.customer_id FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) > 1	insurance_policies
SELECT customers.customer_details , customers.customer_id FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) > 1	insurance_policies
SELECT settlements.date_claim_made , settlements.date_claim_settled FROM settlements	insurance_policies
SELECT settlements.date_claim_made , settlements.date_claim_settled FROM settlements	insurance_policies
SELECT payments.payment_method_code FROM payments GROUP BY payments.payment_method_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_policies
SELECT payments.payment_method_code FROM payments GROUP BY payments.payment_method_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_policies
SELECT payments.payment_method_code FROM payments GROUP BY payments.payment_method_code ORDER BY COUNT( * ) ASC LIMIT 1	insurance_policies
SELECT payments.payment_method_code FROM payments GROUP BY payments.payment_method_code ORDER BY COUNT( * ) ASC LIMIT 1	insurance_policies
SELECT SUM( payments.amount_payment ) FROM payments	insurance_policies
SELECT SUM( payments.amount_payment ) FROM payments	insurance_policies
SELECT DISTINCT customers.customer_details FROM customers	insurance_policies
SELECT DISTINCT customers.customer_details FROM customers	insurance_policies
SELECT customer_policies.policy_type_code FROM customer_policies GROUP BY customer_policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_policies
SELECT customer_policies.policy_type_code FROM customer_policies GROUP BY customer_policies.policy_type_code ORDER BY COUNT( * ) DESC LIMIT 1	insurance_policies
SELECT COUNT( * ) FROM settlements	insurance_policies
SELECT COUNT( * ) FROM settlements	insurance_policies
SELECT payments.payment_id , payments.date_payment_made , payments.amount_payment FROM payments WHERE payments.payment_method_code = 'Visa'	insurance_policies
SELECT payments.payment_id , payments.date_payment_made , payments.amount_payment FROM payments WHERE payments.payment_method_code = 'Visa'	insurance_policies
SELECT customers.customer_details FROM customers EXCEPT SELECT customers.customer_details FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id	insurance_policies
SELECT customers.customer_details FROM customers EXCEPT SELECT customers.customer_details FROM customers JOIN customer_policies ON customers.customer_id = customer_policies.customer_id	insurance_policies
SELECT claims.claim_id , claims.date_claim_made , claims.date_claim_settled FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id HAVING COUNT( * ) = 1	insurance_policies
SELECT claims.claim_id , claims.date_claim_made , claims.date_claim_settled FROM claims JOIN settlements ON claims.claim_id = settlements.claim_id GROUP BY claims.claim_id HAVING COUNT( * ) = 1	insurance_policies
SELECT SUM( claims.amount_claimed ) FROM claims	insurance_policies
SELECT SUM( claims.amount_claimed ) FROM claims	insurance_policies
SELECT department.name FROM department GROUP BY department.departmentid ORDER BY COUNT( department.departmentid ) DESC LIMIT 1	hospital_1
SELECT department.name FROM department GROUP BY department.departmentid ORDER BY COUNT( department.departmentid ) DESC LIMIT 1	hospital_1
SELECT department.head FROM department GROUP BY department.departmentid ORDER BY COUNT( department.departmentid ) ASC LIMIT 1	hospital_1
SELECT department.head FROM department GROUP BY department.departmentid ORDER BY COUNT( department.departmentid ) ASC LIMIT 1	hospital_1
SELECT physician.name , physician.position FROM department JOIN physician ON department.head = physician.employeeid GROUP BY department.departmentid ORDER BY COUNT( department.departmentid ) ASC LIMIT 1	hospital_1
SELECT physician.name , physician.position FROM department JOIN physician ON department.head = physician.employeeid GROUP BY department.departmentid ORDER BY COUNT( department.departmentid ) ASC LIMIT 1	hospital_1
SELECT patient.name FROM appointment JOIN patient ON appointment.patient = patient.ssn	hospital_1
SELECT patient.name FROM appointment JOIN patient ON appointment.patient = patient.ssn	hospital_1
SELECT patient.name , patient.phone FROM appointment JOIN patient ON appointment.patient = patient.ssn GROUP BY appointment.patient HAVING COUNT( * ) > 1	hospital_1
SELECT patient.name , patient.phone FROM appointment JOIN patient ON appointment.patient = patient.ssn GROUP BY appointment.patient HAVING COUNT( * ) > 1	hospital_1
SELECT appointment.appointmentid FROM appointment ORDER BY appointment.start DESC LIMIT 1	hospital_1
SELECT appointment.appointmentid FROM appointment ORDER BY appointment.start DESC LIMIT 1	hospital_1
SELECT physician.name FROM appointment JOIN physician ON appointment.physician = physician.employeeid	hospital_1
SELECT physician.name FROM appointment JOIN physician ON appointment.physician = physician.employeeid	hospital_1
SELECT physician.name FROM physician EXCEPT SELECT physician.name FROM appointment JOIN physician ON appointment.physician = physician.employeeid	hospital_1
SELECT physician.name FROM physician EXCEPT SELECT physician.name FROM appointment JOIN physician ON appointment.physician = physician.employeeid	hospital_1
SELECT physician.name , department.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE affiliated_with.primaryaffiliation = 1	hospital_1
SELECT physician.name , department.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE affiliated_with.primaryaffiliation = 1	hospital_1
SELECT patient.name FROM patient JOIN appointment ON patient.ssn = appointment.patient ORDER BY appointment.start DESC LIMIT 1	hospital_1
SELECT patient.name FROM patient JOIN appointment ON patient.ssn = appointment.patient ORDER BY appointment.start DESC LIMIT 1	hospital_1
SELECT COUNT( stay.patient ) FROM stay WHERE stay.room = 112	hospital_1
SELECT COUNT( stay.patient ) FROM stay WHERE stay.room = 112	hospital_1
SELECT COUNT( patient.ssn ) FROM patient JOIN prescribes ON patient.ssn = prescribes.patient JOIN physician ON prescribes.physician = physician.employeeid WHERE physician.name = 'John Dorian'	hospital_1
SELECT COUNT( patient.ssn ) FROM patient JOIN prescribes ON patient.ssn = prescribes.patient JOIN physician ON prescribes.physician = physician.employeeid WHERE physician.name = 'John Dorian'	hospital_1
SELECT medication.name FROM stay JOIN patient ON stay.patient = patient.ssn JOIN prescribes ON prescribes.patient = patient.ssn JOIN medication ON prescribes.medication = medication.code WHERE stay.room = 111	hospital_1
SELECT medication.name FROM stay JOIN patient ON stay.patient = patient.ssn JOIN prescribes ON prescribes.patient = patient.ssn JOIN medication ON prescribes.medication = medication.code WHERE stay.room = 111	hospital_1
SELECT stay.patient FROM stay WHERE stay.room = 111 ORDER BY stay.staystart DESC LIMIT 1	hospital_1
SELECT stay.patient FROM stay WHERE stay.room = 111 ORDER BY stay.staystart DESC LIMIT 1	hospital_1
SELECT nurse.name FROM nurse JOIN appointment ON nurse.employeeid = appointment.prepnurse GROUP BY nurse.employeeid ORDER BY COUNT( * ) DESC LIMIT 1	hospital_1
SELECT nurse.name FROM nurse JOIN appointment ON nurse.employeeid = appointment.prepnurse GROUP BY nurse.employeeid ORDER BY COUNT( * ) DESC LIMIT 1	hospital_1
SELECT physician.name , COUNT( * ) FROM physician JOIN patient ON physician.employeeid = patient.pcp GROUP BY physician.employeeid	hospital_1
SELECT physician.name , COUNT( * ) FROM physician JOIN patient ON physician.employeeid = patient.pcp GROUP BY physician.employeeid	hospital_1
SELECT physician.name FROM physician JOIN patient ON physician.employeeid = patient.pcp GROUP BY physician.employeeid HAVING COUNT( * ) > 1	hospital_1
SELECT physician.name FROM physician JOIN patient ON physician.employeeid = patient.pcp GROUP BY physician.employeeid HAVING COUNT( * ) > 1	hospital_1
SELECT COUNT( * ) , block.blockfloor FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockfloor	hospital_1
SELECT COUNT( * ) , block.blockfloor FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockfloor	hospital_1
SELECT COUNT( * ) , block.blockcode FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockcode	hospital_1
SELECT COUNT( * ) , block.blockcode FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockcode	hospital_1
SELECT DISTINCT room.blockcode FROM room WHERE room.unavailable = (SELECT MAX( room.unavailable ) FROM room)	hospital_1
SELECT DISTINCT room.blockcode FROM room WHERE room.unavailable = (SELECT MAX( room.unavailable ) FROM room)	hospital_1
SELECT COUNT( DISTINCT room.roomtype ) FROM room	hospital_1
SELECT COUNT( DISTINCT room.roomtype ) FROM room	hospital_1
SELECT DISTINCT physician.name FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician JOIN medication ON medication.code = prescribes.medication WHERE medication.name = 'Thesisin'	hospital_1
SELECT DISTINCT physician.name FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician JOIN medication ON medication.code = prescribes.medication WHERE medication.name = 'Thesisin'	hospital_1
SELECT DISTINCT physician.name , physician.position FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician JOIN medication ON medication.code = prescribes.medication WHERE medication.brand = 'X'	hospital_1
SELECT DISTINCT physician.name , physician.position FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician JOIN medication ON medication.code = prescribes.medication WHERE medication.brand = 'X'	hospital_1
SELECT COUNT( * ) , medication.name FROM medication JOIN prescribes ON medication.code = prescribes.medication GROUP BY medication.brand	hospital_1
SELECT COUNT( * ) , medication.name FROM medication JOIN prescribes ON medication.code = prescribes.medication GROUP BY medication.brand	hospital_1
SELECT physician.name FROM physician WHERE physician.position LIKE '%senior%'	hospital_1
SELECT physician.name FROM physician WHERE physician.position LIKE '%senior%'	hospital_1
SELECT undergoes.patient FROM undergoes ORDER BY undergoes.dateundergoes ASC LIMIT 1	hospital_1
SELECT undergoes.patient FROM undergoes ORDER BY undergoes.dateundergoes ASC LIMIT 1	hospital_1
SELECT DISTINCT patient.name FROM undergoes JOIN patient ON undergoes.patient = patient.ssn JOIN stay ON undergoes.stay = stay.stayid WHERE stay.room = 111	hospital_1
SELECT DISTINCT patient.name FROM undergoes JOIN patient ON undergoes.patient = patient.ssn JOIN stay ON undergoes.stay = stay.stayid WHERE stay.room = 111	hospital_1
SELECT DISTINCT nurse.name FROM nurse ORDER BY nurse.name ASC	hospital_1
SELECT DISTINCT nurse.name FROM nurse ORDER BY nurse.name ASC	hospital_1
SELECT DISTINCT nurse.name FROM undergoes JOIN nurse ON undergoes.assistingnurse = nurse.employeeid	hospital_1
SELECT DISTINCT nurse.name FROM undergoes JOIN nurse ON undergoes.assistingnurse = nurse.employeeid	hospital_1
SELECT DISTINCT medication.name FROM medication ORDER BY medication.name ASC	hospital_1
SELECT DISTINCT medication.name FROM medication ORDER BY medication.name ASC	hospital_1
SELECT physician.name FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician ORDER BY prescribes.dose DESC LIMIT 1	hospital_1
SELECT physician.name FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician ORDER BY prescribes.dose DESC LIMIT 1	hospital_1
SELECT affiliated_with.physician , affiliated_with.department FROM affiliated_with WHERE affiliated_with.primaryaffiliation = 1	hospital_1
SELECT affiliated_with.physician , affiliated_with.department FROM affiliated_with WHERE affiliated_with.primaryaffiliation = 1	hospital_1
SELECT DISTINCT department.name FROM affiliated_with JOIN department ON affiliated_with.department = department.departmentid WHERE affiliated_with.primaryaffiliation = 1	hospital_1
SELECT DISTINCT department.name FROM affiliated_with JOIN department ON affiliated_with.department = department.departmentid WHERE affiliated_with.primaryaffiliation = 1	hospital_1
SELECT on_call.nurse FROM on_call WHERE on_call.blockfloor = 1 AND on_call.blockcode = 1	hospital_1
SELECT on_call.nurse FROM on_call WHERE on_call.blockfloor = 1 AND on_call.blockcode = 1	hospital_1
SELECT MAX( procedures.cost ) , MIN( procedures.cost ) , AVG( procedures.cost ) FROM procedures	hospital_1
SELECT MAX( procedures.cost ) , MIN( procedures.cost ) , AVG( procedures.cost ) FROM procedures	hospital_1
SELECT procedures.name , procedures.cost FROM procedures ORDER BY procedures.cost DESC	hospital_1
SELECT procedures.name , procedures.cost FROM procedures ORDER BY procedures.cost DESC	hospital_1
SELECT procedures.name FROM procedures ORDER BY procedures.cost ASC LIMIT 3	hospital_1
SELECT procedures.name FROM procedures ORDER BY procedures.cost ASC LIMIT 3	hospital_1
SELECT physician.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE procedures.cost > 5000	hospital_1
SELECT physician.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE procedures.cost > 5000	hospital_1
SELECT physician.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment ORDER BY procedures.cost DESC LIMIT 1	hospital_1
SELECT physician.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment ORDER BY procedures.cost DESC LIMIT 1	hospital_1
SELECT AVG( procedures.cost ) FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT AVG( procedures.cost ) FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM procedures WHERE procedures.cost > 1000 UNION SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM procedures WHERE procedures.cost > 1000 UNION SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM procedures WHERE procedures.cost > 1000 EXCEPT SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM procedures WHERE procedures.cost > 1000, EXCEPT SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM procedures WHERE procedures.cost<5000 INTERSECT SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT procedures.name FROM procedures WHERE procedures.cost<5000 INTERSECT SELECT procedures.name FROM physician JOIN trained_in ON physician.employeeid = trained_in.physician JOIN procedures ON procedures.code = trained_in.treatment WHERE physician.name = 'John Wen'	hospital_1
SELECT physician.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE department.name = 'Surgery' INTERSECT SELECT physician.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE department.name = 'Psychiatry'	hospital_1
SELECT physician.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE department.name = 'Surgery' INTERSECT SELECT physician.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE department.name = 'Psychiatry'	hospital_1
SELECT physician.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE department.name = 'Surgery' OR department.name = 'Psychiatry'	hospital_1
SELECT physician.name FROM physician JOIN affiliated_with ON physician.employeeid = affiliated_with.physician JOIN department ON affiliated_with.department = department.departmentid WHERE department.name = 'Surgery' OR department.name = 'Psychiatry'	hospital_1
SELECT patient.name FROM patient EXCEPT SELECT patient.name FROM prescribes JOIN patient ON prescribes.patient = patient.ssn JOIN medication ON prescribes.medication = medication.code WHERE medication.name = 'Procrastin-X'	hospital_1
SELECT patient.name FROM patient EXCEPT SELECT patient.name FROM prescribes JOIN patient ON prescribes.patient = patient.ssn JOIN medication ON prescribes.medication = medication.code WHERE medication.name = 'Procrastin-X'	hospital_1
SELECT COUNT( * ) FROM patient WHERE patient.ssn NOT IN (SELECT prescribes.patient FROM prescribes JOIN medication ON prescribes.medication = medication.code WHERE medication.name = 'Procrastin-X')	hospital_1
SELECT COUNT( * ) FROM patient WHERE patient.ssn NOT IN (SELECT prescribes.patient FROM prescribes JOIN medication ON prescribes.medication = medication.code WHERE medication.name = 'Procrastin-X')	hospital_1
SELECT COUNT( * ) FROM appointment	hospital_1
SELECT COUNT( * ) FROM appointment	hospital_1
SELECT DISTINCT nurse.name FROM nurse JOIN on_call ON nurse.employeeid = on_call.nurse	hospital_1
SELECT DISTINCT nurse.name FROM nurse JOIN on_call ON nurse.employeeid = on_call.nurse	hospital_1
SELECT COUNT( * ) FROM ship	ship_mission
SELECT COUNT( * ) FROM ship	ship_mission
SELECT ship.name FROM ship ORDER BY ship.tonnage ASC	ship_mission
SELECT ship.name FROM ship ORDER BY ship.tonnage ASC	ship_mission
SELECT ship.type , ship.nationality FROM ship	ship_mission
SELECT ship.type , ship.nationality FROM ship	ship_mission
SELECT ship.name FROM ship WHERE ship.nationality != 'United States'	ship_mission
SELECT ship.name FROM ship WHERE ship.nationality != 'United States'	ship_mission
SELECT ship.name FROM ship WHERE ship.nationality = 'United States' OR ship.nationality = 'United Kingdom'	ship_mission
SELECT ship.name FROM ship WHERE ship.nationality = 't' AND ship.nationality NOT IN (SELECT AVG( ship.nationality ) FROM ship)	ship_mission
SELECT ship.name FROM ship ORDER BY ship.tonnage DESC LIMIT 1	ship_mission
SELECT ship.name FROM ship ORDER BY ship.tonnage DESC LIMIT 1	ship_mission
SELECT ship.type , COUNT( * ) FROM ship GROUP BY ship.type	ship_mission
SELECT ship.type , COUNT( * ) FROM ship GROUP BY ship.type	ship_mission
SELECT ship.type FROM ship GROUP BY ship.type ORDER BY COUNT( * ) DESC LIMIT 1	ship_mission
SELECT ship.type FROM ship GROUP BY ship.type ORDER BY COUNT( * ) DESC LIMIT 1	ship_mission
SELECT ship.nationality FROM ship GROUP BY ship.nationality HAVING COUNT( * ) > 2	ship_mission
SELECT ship.nationality FROM ship GROUP BY ship.nationality HAVING COUNT( * ) > 2	ship_mission
SELECT ship.type , AVG( ship.tonnage ) FROM ship GROUP BY ship.type	ship_mission
SELECT ship.type , AVG( ship.tonnage ) FROM ship GROUP BY ship.type	ship_mission
SELECT mission.code , mission.fate , ship.name FROM mission JOIN ship ON mission.ship_id = ship.ship_id	ship_mission
SELECT mission.code , mission.fate , ship.name FROM mission JOIN ship ON mission.ship_id = ship.ship_id	ship_mission
SELECT ship.name FROM mission JOIN ship ON mission.ship_id = ship.ship_id WHERE mission.launched_year > 1928	ship_mission
SELECT ship.name FROM mission JOIN ship ON mission.ship_id = ship.ship_id WHERE mission.launched_year > 1928	ship_mission
SELECT DISTINCT mission.fate FROM mission JOIN ship ON mission.ship_id = ship.ship_id WHERE ship.nationality = 'United States'	ship_mission
SELECT DISTINCT mission.fate FROM mission JOIN ship ON mission.ship_id = ship.ship_id WHERE ship.nationality = 'United States'	ship_mission
SELECT ship.name FROM ship WHERE ship.ship_id NOT IN (SELECT mission.ship_id FROM mission)	ship_mission
SELECT ship.name FROM ship WHERE ship.ship_id NOT IN (SELECT mission.ship_id FROM mission)	ship_mission
SELECT ship.type FROM ship WHERE ship.tonnage > 6000 INTERSECT SELECT ship.type FROM ship WHERE ship.tonnage<4000	ship_mission
SELECT ship.type FROM ship WHERE ship.tonnage > 6000 INTERSECT SELECT ship.type FROM ship WHERE ship.tonnage<4000	ship_mission
SELECT COUNT( * ) FROM list	student_1
SELECT COUNT( * ) FROM list	student_1
SELECT list.lastname FROM list WHERE list.classroom = 111	student_1
SELECT list.lastname FROM list WHERE list.classroom = 111	student_1
SELECT list.firstname FROM list WHERE list.classroom = 108	student_1
SELECT list.firstname FROM list WHERE list.classroom = 108	student_1
SELECT DISTINCT list.firstname FROM list WHERE list.classroom = 107	student_1
SELECT DISTINCT list.firstname FROM list WHERE list.classroom = 107	student_1
SELECT DISTINCT list.classroom , list.grade FROM list	student_1
SELECT DISTINCT list.classroom , list.grade FROM list	student_1
SELECT DISTINCT list.grade FROM list WHERE list.classroom = 103	student_1
SELECT DISTINCT list.grade FROM list WHERE list.classroom = 103	student_1
SELECT DISTINCT list.grade FROM list WHERE list.classroom = 105	student_1
SELECT DISTINCT list.grade FROM list WHERE list.classroom = 105	student_1
SELECT DISTINCT list.classroom FROM list WHERE list.grade = 4	student_1
SELECT DISTINCT list.classroom FROM list WHERE list.grade = 4	student_1
SELECT DISTINCT list.classroom FROM list WHERE list.grade = 5	student_1
SELECT DISTINCT list.classroom FROM list WHERE list.grade = 5	student_1
SELECT DISTINCT teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 5	student_1
SELECT DISTINCT teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 5	student_1
SELECT DISTINCT teachers.firstname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 1	student_1
SELECT DISTINCT teachers.firstname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 1	student_1
SELECT teachers.firstname FROM teachers WHERE teachers.classroom = 110	student_1
SELECT teachers.firstname FROM teachers WHERE teachers.classroom = 110	student_1
SELECT teachers.lastname FROM teachers WHERE teachers.classroom = 109	student_1
SELECT teachers.lastname FROM teachers WHERE teachers.classroom = 109	student_1
SELECT DISTINCT teachers.firstname , teachers.lastname FROM teachers	student_1
SELECT DISTINCT teachers.firstname , teachers.lastname FROM teachers	student_1
SELECT DISTINCT list.firstname , list.lastname FROM list	student_1
SELECT DISTINCT list.firstname , list.lastname FROM list	student_1
SELECT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'OTHA' AND teachers.lastname = 'MOYER'	student_1
SELECT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'OTHA' AND teachers.lastname = 'MOYER'	student_1
SELECT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'MARROTTE' AND teachers.lastname = 'KIRK'	student_1
SELECT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'MARROTTE' AND teachers.lastname = 'KIRK'	student_1
SELECT teachers.firstname , teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'EVELINA' AND list.lastname = 'BROMLEY'	student_1
SELECT teachers.firstname , teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'EVELINA' AND list.lastname = 'BROMLEY'	student_1
SELECT teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'GELL' AND list.lastname = 'TAMI'	student_1
SELECT teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'GELL' AND list.lastname = 'TAMI'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'LORIA' AND teachers.lastname = 'ONDERSMA'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'LORIA' AND teachers.lastname = 'ONDERSMA'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'KAWA' AND teachers.lastname = 'GORDON'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'KAWA' AND teachers.lastname = 'GORDON'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'TARRING' AND teachers.lastname = 'LEIA'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'TARRING' AND teachers.lastname = 'LEIA'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'CHRISSY' AND list.lastname = 'NABOZNY'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'CHRISSY' AND list.lastname = 'NABOZNY'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'MADLOCK' AND list.lastname = 'RAY'	student_1
SELECT COUNT( * ) FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.firstname = 'MADLOCK' AND list.lastname = 'RAY'	student_1
SELECT DISTINCT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 1 EXCEPT SELECT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'OTHA' AND teachers.lastname = 'MOYER'	student_1
SELECT DISTINCT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 1 EXCEPT SELECT list.firstname , list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'OTHA' AND teachers.lastname = 'MOYER'	student_1
SELECT DISTINCT list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 3 AND teachers.firstname != 'COVIN' AND teachers.lastname != 'JEROME'	student_1
SELECT DISTINCT list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE list.grade = 3 AND teachers.firstname != 'COVIN' AND teachers.lastname != 'JEROME'	student_1
SELECT list.grade , COUNT( DISTINCT list.classroom ) , COUNT( * ) FROM list GROUP BY list.grade	student_1
SELECT list.grade , COUNT( DISTINCT list.classroom ) , COUNT( * ) FROM list GROUP BY list.grade	student_1
SELECT list.classroom , COUNT( DISTINCT list.grade ) FROM list GROUP BY list.classroom	student_1
SELECT list.classroom , COUNT( DISTINCT list.grade ) FROM list GROUP BY list.classroom	student_1
SELECT list.classroom FROM list GROUP BY list.classroom ORDER BY COUNT( * ) DESC LIMIT 1	student_1
SELECT list.classroom FROM list GROUP BY list.classroom ORDER BY COUNT( * ) DESC LIMIT 1	student_1
SELECT list.classroom , COUNT( * ) FROM list GROUP BY list.classroom	student_1
SELECT list.classroom , COUNT( * ) FROM list GROUP BY list.classroom	student_1
SELECT list.classroom , COUNT( * ) FROM list WHERE list.grade = '0' GROUP BY list.classroom	student_1
SELECT list.classroom , COUNT( * ) FROM list WHERE list.grade = '0' GROUP BY list.classroom	student_1
SELECT list.classroom , COUNT( * ) FROM list WHERE list.grade = '4' GROUP BY list.classroom	student_1
SELECT list.classroom , COUNT( * ) FROM list WHERE list.grade = '4' GROUP BY list.classroom	student_1
SELECT teachers.firstname , teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom GROUP BY teachers.firstname , teachers.lastname ORDER BY COUNT( * ) DESC LIMIT 1	student_1
SELECT teachers.firstname , teachers.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom GROUP BY teachers.firstname , teachers.lastname ORDER BY COUNT( * ) DESC LIMIT 1	student_1
SELECT COUNT( * ) , list.classroom FROM list GROUP BY list.classroom	student_1
SELECT COUNT( * ) , list.classroom FROM list GROUP BY list.classroom	student_1
SELECT COUNT( * ) FROM company WHERE company.headquarters = 't'	company_employee
SELECT company.name FROM company ORDER BY company.sales_in_billion ASC	company_employee
SELECT company.headquarters , company.industry FROM company	company_employee
SELECT company.name FROM company WHERE company.industry = 'banking' OR company.industry = 'retailing'	company_employee
SELECT MAX( company.market_value_in_billion ) , MIN( company.market_value_in_billion ) FROM company	company_employee
SELECT company.headquarters FROM company ORDER BY company.sales_in_billion DESC LIMIT 1	company_employee
SELECT company.headquarters , COUNT( * ) FROM company GROUP BY company.headquarters	company_employee
SELECT company.headquarters FROM company GROUP BY company.headquarters ORDER BY COUNT( * ) DESC LIMIT 1	company_employee
SELECT company.headquarters FROM company GROUP BY company.headquarters HAVING COUNT( * ) >= 2	company_employee
SELECT company.headquarters FROM company WHERE company.industry = 'banking' INTERSECT SELECT company.headquarters FROM company WHERE company.industry = 'oil and gas'	company_employee
SELECT company.name , people.name FROM employment JOIN people ON employment.people_id = people.people_id JOIN company ON employment.company_id = company.company_id	company_employee
SELECT company.name , people.name FROM employment JOIN people ON employment.people_id = people.people_id JOIN company ON employment.company_id = company.company_id ORDER BY employment.year_working ASC	company_employee
SELECT people.name FROM employment JOIN people ON employment.people_id = people.people_id JOIN company ON employment.company_id = company.company_id WHERE company.sales_in_billion > 200	company_employee
SELECT company.name , COUNT( * ) FROM employment JOIN people ON employment.people_id = people.people_id JOIN company ON employment.company_id = company.company_id GROUP BY company.name	company_employee
SELECT people.name FROM people WHERE people.people_id NOT IN (SELECT employment.people_id FROM employment)	company_employee
SELECT company.name FROM company WHERE company.sales_in_billion > 200 ORDER BY company.sales_in_billion , company.profits_in_billion ASC	company_employee
SELECT COUNT( * ) FROM film	film_rank
SELECT COUNT( * ) FROM film	film_rank
SELECT DISTINCT film.director FROM film	film_rank
SELECT DISTINCT film.director FROM film	film_rank
SELECT AVG( film.gross_in_dollar ) FROM film	film_rank
SELECT AVG( film.gross_in_dollar ) FROM film	film_rank
SELECT film_market_estimation.low_estimate , film_market_estimation.high_estimate FROM film_market_estimation	film_rank
SELECT film_market_estimation.low_estimate , film_market_estimation.high_estimate FROM film_market_estimation	film_rank
SELECT film_market_estimation.type FROM film_market_estimation WHERE film_market_estimation.year = 1995	film_rank
SELECT film_market_estimation.type FROM film_market_estimation WHERE film_market_estimation.year = 1995	film_rank
SELECT MAX( market.number_cities ) , MIN( market.number_cities ) FROM market	film_rank
SELECT MAX( market.number_cities ) , MIN( market.number_cities ) FROM market	film_rank
SELECT COUNT( * ) FROM market WHERE market.number_cities<300	film_rank
SELECT COUNT( * ) FROM market WHERE market.number_cities<300	film_rank
SELECT market.country FROM market ORDER BY market.country ASC	film_rank
SELECT market.country FROM market ORDER BY market.country ASC	film_rank
SELECT market.country FROM market ORDER BY market.number_cities DESC	film_rank
SELECT market.country FROM market ORDER BY market.number_cities DESC	film_rank
SELECT film.title , film_market_estimation.type FROM film JOIN film_market_estimation ON film.film_id = film_market_estimation.film_id	film_rank
SELECT film.title , film_market_estimation.type FROM film JOIN film_market_estimation ON film.film_id = film_market_estimation.film_id	film_rank
SELECT DISTINCT film.director FROM film JOIN film_market_estimation ON film.film_id = film_market_estimation.film_id WHERE film_market_estimation.year = 1995	film_rank
SELECT DISTINCT film.director FROM film JOIN film_market_estimation ON film.film_id = film_market_estimation.film_id WHERE film_market_estimation.year = 1995	film_rank
SELECT AVG( market.number_cities ) FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE film_market_estimation.low_estimate > 10000	film_rank
SELECT AVG( market.number_cities ) FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE film_market_estimation.low_estimate > 10000	film_rank
SELECT market.country , film_market_estimation.year FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id	film_rank
SELECT market.country , film_market_estimation.year FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id	film_rank
SELECT film_market_estimation.year FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE market.country = 'Japan' ORDER BY film_market_estimation.year DESC	film_rank
SELECT film_market_estimation.year FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE market.country = 'Japan' ORDER BY film_market_estimation.year DESC	film_rank
SELECT film.studio , COUNT( * ) FROM film GROUP BY film.studio	film_rank
SELECT film.studio , COUNT( * ) FROM film GROUP BY film.studio	film_rank
SELECT film.studio FROM film GROUP BY film.studio ORDER BY COUNT( * ) DESC LIMIT 1	film_rank
SELECT film.studio FROM film GROUP BY film.studio ORDER BY COUNT( * ) DESC LIMIT 1	film_rank
SELECT film.studio FROM film GROUP BY film.studio HAVING COUNT( * ) >= 2	film_rank
SELECT film.studio FROM film GROUP BY film.studio HAVING COUNT( * ) >= 2	film_rank
SELECT film.title FROM film WHERE film.film_id NOT IN (SELECT film_market_estimation.film_id FROM film_market_estimation)	film_rank
SELECT film.title FROM film WHERE film.film_id NOT IN (SELECT film_market_estimation.film_id FROM film_market_estimation)	film_rank
SELECT film.studio FROM film WHERE film.director = 'Nicholas Meyer' INTERSECT SELECT film.studio FROM film WHERE film.director = 'Walter Hill'	film_rank
SELECT film.studio FROM film WHERE film.director = 'Nicholas Meyer' INTERSECT SELECT film.studio FROM film WHERE film.director = 'Walter Hill'	film_rank
SELECT film.title , film.studio FROM film WHERE film.studio LIKE '%Universal%'	film_rank
SELECT film.title , film.studio FROM film WHERE film.studio LIKE '%Universal%'	film_rank
SELECT film.studio FROM film EXCEPT SELECT film.studio FROM film WHERE film.director = 'Walter Hill'	film_rank
SELECT film.studio FROM film EXCEPT SELECT film.studio FROM film WHERE film.director = 'Walter Hill'	film_rank
SELECT film.studio FROM film GROUP BY film.studio HAVING AVG( film.gross_in_dollar ) >= 4500000	film_rank
SELECT film.studio FROM film GROUP BY film.studio HAVING AVG( film.gross_in_dollar ) >= 4500000	film_rank
SELECT film.title FROM film JOIN film_market_estimation ON film.film_id = film_market_estimation.film_id ORDER BY film_market_estimation.high_estimate DESC LIMIT 1	film_rank
SELECT film.title FROM film JOIN film_market_estimation ON film.film_id = film_market_estimation.film_id ORDER BY film_market_estimation.high_estimate DESC LIMIT 1	film_rank
SELECT film.title , film.director FROM film WHERE film.film_id NOT IN (SELECT film_market_estimation.film_id FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE market.country = 'China')	film_rank
SELECT film.title , film.director FROM film WHERE film.film_id NOT IN (SELECT film_market_estimation.film_id FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE market.country = 'China')	film_rank
SELECT COUNT( * ) FROM ref_calendar	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM ref_calendar	cre_Doc_Tracking_DB
SELECT ref_calendar.calendar_date , ref_calendar.day_number FROM ref_calendar	cre_Doc_Tracking_DB
SELECT ref_calendar.calendar_date , ref_calendar.day_number FROM ref_calendar	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM ref_document_types	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM ref_document_types	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_code , ref_document_types.document_type_name FROM ref_document_types	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_code , ref_document_types.document_type_name FROM ref_document_types	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_name , ref_document_types.document_type_description FROM ref_document_types WHERE ref_document_types.document_type_code = 'RV'	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_name , ref_document_types.document_type_description FROM ref_document_types WHERE ref_document_types.document_type_code = 'RV'	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_code FROM ref_document_types WHERE ref_document_types.document_type_name = 'Paper'	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_code FROM ref_document_types WHERE ref_document_types.document_type_name = 'Paper'	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM all_documents WHERE all_documents.document_type_code = 'CV' OR all_documents.document_type_code = 'BK'	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM all_documents WHERE all_documents.document_type_code = 'CV' OR all_documents.document_type_code = 'BK'	cre_Doc_Tracking_DB
SELECT all_documents.date_stored FROM all_documents WHERE all_documents.document_name = 'Marry CV'	cre_Doc_Tracking_DB
SELECT all_documents.date_stored FROM all_documents WHERE all_documents.document_name = 'Marry CV'	cre_Doc_Tracking_DB
SELECT ref_calendar.day_number , all_documents.date_stored FROM all_documents JOIN ref_calendar ON all_documents.date_stored = ref_calendar.calendar_date	cre_Doc_Tracking_DB
SELECT ref_calendar.day_number , all_documents.date_stored FROM all_documents JOIN ref_calendar ON all_documents.date_stored = ref_calendar.calendar_date	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_name FROM all_documents JOIN ref_document_types ON all_documents.document_type_code = ref_document_types.document_type_code WHERE all_documents.document_name = 'How to read a book'	cre_Doc_Tracking_DB
SELECT ref_document_types.document_type_name FROM all_documents JOIN ref_document_types ON all_documents.document_type_code = ref_document_types.document_type_code WHERE all_documents.document_name = 'How to read a book'	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM ref_locations	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM ref_locations	cre_Doc_Tracking_DB
SELECT ref_locations.location_code , ref_locations.location_name FROM ref_locations	cre_Doc_Tracking_DB
SELECT ref_locations.location_code , ref_locations.location_name FROM ref_locations	cre_Doc_Tracking_DB
SELECT ref_locations.location_name , ref_locations.location_description FROM ref_locations WHERE ref_locations.location_code = 'x'	cre_Doc_Tracking_DB
SELECT ref_locations.location_name , ref_locations.location_description FROM ref_locations WHERE ref_locations.location_code = 'x'	cre_Doc_Tracking_DB
SELECT ref_locations.location_code FROM ref_locations WHERE ref_locations.location_name = 'Canada'	cre_Doc_Tracking_DB
SELECT ref_locations.location_code FROM ref_locations WHERE ref_locations.location_name = 'Canada'	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM roles	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM roles	cre_Doc_Tracking_DB
SELECT roles.role_code , roles.role_name , roles.role_description FROM roles	cre_Doc_Tracking_DB
SELECT roles.role_code , roles.role_name , roles.role_description FROM roles	cre_Doc_Tracking_DB
SELECT roles.role_name , roles.role_description FROM roles WHERE roles.role_code = 'MG'	cre_Doc_Tracking_DB
SELECT roles.role_name , roles.role_description FROM roles WHERE roles.role_code = 'MG'	cre_Doc_Tracking_DB
SELECT roles.role_description FROM roles WHERE roles.role_name = 'Proof Reader'	cre_Doc_Tracking_DB
SELECT roles.role_description FROM roles WHERE roles.role_name = 'Proof Reader'	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM employees	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM employees	cre_Doc_Tracking_DB
SELECT employees.employee_name , employees.role_code , employees.date_of_birth FROM employees WHERE employees.employee_name = 'Armani'	cre_Doc_Tracking_DB
SELECT employees.employee_name , employees.role_code , employees.date_of_birth FROM employees WHERE employees.employee_name = 'Armani'	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees WHERE employees.employee_name = 'Ebba'	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees WHERE employees.employee_name = 'Ebba'	cre_Doc_Tracking_DB
SELECT employees.employee_name FROM employees WHERE employees.role_code = 'HR'	cre_Doc_Tracking_DB
SELECT employees.employee_name FROM employees WHERE employees.role_code = 'HR'	cre_Doc_Tracking_DB
SELECT employees.role_code , COUNT( * ) FROM employees GROUP BY employees.role_code	cre_Doc_Tracking_DB
SELECT employees.role_code , COUNT( * ) FROM employees GROUP BY employees.role_code	cre_Doc_Tracking_DB
SELECT employees.role_code FROM employees GROUP BY employees.role_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Doc_Tracking_DB
SELECT employees.role_code FROM employees GROUP BY employees.role_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Doc_Tracking_DB
SELECT employees.role_code FROM employees GROUP BY employees.role_code HAVING COUNT( * ) >= 3	cre_Doc_Tracking_DB
SELECT employees.role_code FROM employees GROUP BY employees.role_code HAVING COUNT( * ) >= 3	cre_Doc_Tracking_DB
SELECT employees.role_code FROM employees GROUP BY employees.role_code ORDER BY COUNT( * ) ASC LIMIT 1	cre_Doc_Tracking_DB
SELECT employees.role_code FROM employees GROUP BY employees.role_code ORDER BY COUNT( * ) ASC LIMIT 1	cre_Doc_Tracking_DB
SELECT roles.role_name , roles.role_description FROM employees JOIN roles ON employees.role_code = roles.role_code WHERE employees.employee_name = 'Ebba'	cre_Doc_Tracking_DB
SELECT roles.role_name , roles.role_description FROM employees JOIN roles ON employees.role_code = roles.role_code WHERE employees.employee_name = 'Ebba'	cre_Doc_Tracking_DB
SELECT employees.employee_name FROM employees JOIN roles ON employees.role_code = roles.role_code WHERE roles.role_name = 'Editor'	cre_Doc_Tracking_DB
SELECT employees.employee_name FROM employees JOIN roles ON employees.role_code = roles.role_code WHERE roles.role_name = 'Editor'	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees JOIN roles ON employees.role_code = roles.role_code WHERE roles.role_name = 'Human Resource' OR roles.role_name = 'Manager'	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees JOIN roles ON employees.role_code = roles.role_code WHERE roles.role_name = 'Human Resource' OR roles.role_name = 'Manager'	cre_Doc_Tracking_DB
SELECT DISTINCT document_locations.location_code FROM document_locations	cre_Doc_Tracking_DB
SELECT DISTINCT document_locations.location_code FROM document_locations	cre_Doc_Tracking_DB
SELECT ref_locations.location_name FROM all_documents JOIN document_locations ON all_documents.document_id = document_locations.document_id JOIN ref_locations ON document_locations.location_code = ref_locations.location_code WHERE all_documents.document_name = 'Robin CV'	cre_Doc_Tracking_DB
SELECT ref_locations.location_name FROM all_documents JOIN document_locations ON all_documents.document_id = document_locations.document_id JOIN ref_locations ON document_locations.location_code = ref_locations.location_code WHERE all_documents.document_name = 'Robin CV'	cre_Doc_Tracking_DB
SELECT document_locations.location_code , document_locations.date_in_location_from , document_locations.date_in_locaton_to FROM document_locations	cre_Doc_Tracking_DB
SELECT document_locations.location_code , document_locations.date_in_location_from , document_locations.date_in_locaton_to FROM document_locations	cre_Doc_Tracking_DB
SELECT document_locations.date_in_location_from , document_locations.date_in_locaton_to FROM document_locations JOIN all_documents ON document_locations.document_id = all_documents.document_id WHERE all_documents.document_name = 'Robin CV'	cre_Doc_Tracking_DB
SELECT document_locations.date_in_location_from , document_locations.date_in_locaton_to FROM document_locations JOIN all_documents ON document_locations.document_id = all_documents.document_id WHERE all_documents.document_name = 'Robin CV'	cre_Doc_Tracking_DB
SELECT document_locations.location_code , COUNT( * ) FROM document_locations GROUP BY document_locations.location_code	cre_Doc_Tracking_DB
SELECT document_locations.location_code , COUNT( * ) FROM document_locations GROUP BY document_locations.location_code	cre_Doc_Tracking_DB
SELECT document_locations.location_code FROM document_locations GROUP BY document_locations.location_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Doc_Tracking_DB
SELECT document_locations.location_code FROM document_locations GROUP BY document_locations.location_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Doc_Tracking_DB
SELECT document_locations.location_code FROM document_locations GROUP BY document_locations.location_code HAVING COUNT( * ) >= 3	cre_Doc_Tracking_DB
SELECT document_locations.location_code FROM document_locations GROUP BY document_locations.location_code HAVING COUNT( * ) >= 3	cre_Doc_Tracking_DB
SELECT ref_locations.location_name , document_locations.location_code FROM document_locations JOIN ref_locations ON document_locations.location_code = ref_locations.location_code GROUP BY document_locations.location_code ORDER BY COUNT( * ) ASC LIMIT 1	cre_Doc_Tracking_DB
SELECT ref_locations.location_name , document_locations.location_code FROM document_locations JOIN ref_locations ON document_locations.location_code = ref_locations.location_code GROUP BY document_locations.location_code ORDER BY COUNT( * ) ASC LIMIT 1	cre_Doc_Tracking_DB
SELECT employees.employee_name , employees.employee_name FROM documents_to_be_destroyed JOIN employees ON documents_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id JOIN documents_to_be_destroyed ON documents_to_be_destroyed.destroyed_by_employee_id = employees.employee_id	cre_Doc_Tracking_DB
SELECT employees.employee_name , employees.employee_name FROM documents_to_be_destroyed JOIN employees ON documents_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id JOIN documents_to_be_destroyed ON documents_to_be_destroyed.destroyed_by_employee_id = employees.employee_id	cre_Doc_Tracking_DB
SELECT documents_to_be_destroyed.destruction_authorised_by_employee_id , COUNT( * ) FROM documents_to_be_destroyed GROUP BY documents_to_be_destroyed.destruction_authorised_by_employee_id	cre_Doc_Tracking_DB
SELECT documents_to_be_destroyed.destruction_authorised_by_employee_id , COUNT( * ) FROM documents_to_be_destroyed GROUP BY documents_to_be_destroyed.destruction_authorised_by_employee_id	cre_Doc_Tracking_DB
SELECT documents_to_be_destroyed.destroyed_by_employee_id , COUNT( * ) FROM documents_to_be_destroyed GROUP BY documents_to_be_destroyed.destroyed_by_employee_id	cre_Doc_Tracking_DB
SELECT documents_to_be_destroyed.destroyed_by_employee_id , COUNT( * ) FROM documents_to_be_destroyed GROUP BY documents_to_be_destroyed.destroyed_by_employee_id	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees EXCEPT SELECT documents_to_be_destroyed.destruction_authorised_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees EXCEPT SELECT documents_to_be_destroyed.destruction_authorised_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT DISTINCT documents_to_be_destroyed.destruction_authorised_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT DISTINCT documents_to_be_destroyed.destruction_authorised_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT DISTINCT documents_to_be_destroyed.destroyed_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT DISTINCT documents_to_be_destroyed.destroyed_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees EXCEPT SELECT documents_to_be_destroyed.destroyed_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT employees.employee_id FROM employees EXCEPT SELECT documents_to_be_destroyed.destroyed_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT documents_to_be_destroyed.destroyed_by_employee_id FROM documents_to_be_destroyed UNION SELECT documents_to_be_destroyed.destruction_authorised_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT documents_to_be_destroyed.destroyed_by_employee_id FROM documents_to_be_destroyed UNION SELECT documents_to_be_destroyed.destruction_authorised_by_employee_id FROM documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT COUNT( * ) FROM club	club_1
SELECT COUNT( * ) FROM club	club_1
SELECT club.clubname FROM club	club_1
SELECT club.clubname FROM club	club_1
SELECT COUNT( * ) FROM student	club_1
SELECT COUNT( * ) FROM student	club_1
SELECT DISTINCT student.fname FROM student	club_1
SELECT DISTINCT student.fname FROM student	club_1
SELECT student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore'	club_1
SELECT student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore'	club_1
SELECT student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises'	club_1
SELECT student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Tennis Club'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Tennis Club'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Pen and Paper Gaming'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Pen and Paper Gaming'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Linda' AND student.lname = 'Smith'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Linda' AND student.lname = 'Smith'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Tracy' AND student.lname = 'Kim'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Tracy' AND student.lname = 'Kim'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.sex = 'f'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.sex = 'f'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises' AND student.sex = 'm'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises' AND student.sex = 'm'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.major = '600'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.major = '600'	club_1
SELECT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.major = '600' GROUP BY club.clubname ORDER BY COUNT( * ) DESC LIMIT 1	club_1
SELECT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.major = '600' GROUP BY club.clubname ORDER BY COUNT( * ) DESC LIMIT 1	club_1
SELECT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.sex = 'f' GROUP BY club.clubname ORDER BY COUNT( * ) DESC LIMIT 1	club_1
SELECT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.sex = 'f' GROUP BY club.clubname ORDER BY COUNT( * ) DESC LIMIT 1	club_1
SELECT club.clubdesc FROM club WHERE club.clubname = 'Tennis Club'	club_1
SELECT club.clubdesc FROM club WHERE club.clubname = 'Tennis Club'	club_1
SELECT club.clubdesc FROM club WHERE club.clubname = 'Pen and Paper Gaming'	club_1
SELECT club.clubdesc FROM club WHERE club.clubname = 'Pen and Paper Gaming'	club_1
SELECT club.clublocation FROM club WHERE club.clubname = 'Tennis Club'	club_1
SELECT club.clublocation FROM club WHERE club.clubname = 'Tennis Club'	club_1
SELECT club.clublocation FROM club WHERE club.clubname = 'Pen and Paper Gaming'	club_1
SELECT club.clublocation FROM club WHERE club.clubname = 'Pen and Paper Gaming'	club_1
SELECT club.clublocation FROM club WHERE club.clubname = 'Hopkins Student Enterprises'	club_1
SELECT club.clublocation FROM club WHERE club.clubname = 'Hopkins Student Enterprises'	club_1
SELECT club.clubname FROM club WHERE club.clublocation = 'AKW'	club_1
SELECT club.clubname FROM club WHERE club.clublocation = 'AKW'	club_1
SELECT COUNT( * ) FROM club WHERE club.clublocation = 'HHH'	club_1
SELECT COUNT( * ) FROM club WHERE club.clublocation = 'HHH'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND member_of_club.position = 'president'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND member_of_club.position = 'president'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises' AND member_of_club.position = 'CTO'	club_1
SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises' AND member_of_club.position = 'CTO'	club_1
SELECT COUNT( DISTINCT member_of_club.position ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid WHERE club.clubname = 'Bootup Baltimore'	club_1
SELECT COUNT( DISTINCT member_of_club.position ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid WHERE club.clubname = 'Bootup Baltimore'	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.age > 18	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.age > 18	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.age<18	club_1
SELECT COUNT( * ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore' AND student.age<18	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.city_code = 'BAL'	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.city_code = 'BAL'	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.city_code = 'HOU'	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.city_code = 'HOU'	club_1
SELECT COUNT( DISTINCT club.clubname ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Eric' AND student.lname = 'Tai'	club_1
SELECT COUNT( DISTINCT club.clubname ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Eric' AND student.lname = 'Tai'	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Davis' AND student.lname = 'Steven'	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Davis' AND student.lname = 'Steven'	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.advisor = 1121	club_1
SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.advisor = 1121	club_1
SELECT AVG( student.age ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore'	club_1
SELECT AVG( student.age ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Bootup Baltimore'	club_1
SELECT AVG( student.age ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises'	club_1
SELECT AVG( student.age ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Hopkins Student Enterprises'	club_1
SELECT AVG( student.age ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Tennis Club'	club_1
SELECT AVG( student.age ) FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubname = 'Tennis Club'	club_1
SELECT grants.grant_amount FROM grants JOIN documents ON grants.grant_id = documents.grant_id WHERE documents.sent_date<'1986-08-26 20:49:27' INTERSECT SELECT grants.grant_amount FROM grants WHERE grants.grant_end_date > '1989-03-16 18:27:16'	tracking_grants_for_research
SELECT grants.grant_amount FROM grants JOIN documents ON grants.grant_id = documents.grant_id WHERE documents.sent_date<'1986-08-26 20:49:27' INTERSECT SELECT grants.grant_amount FROM grants WHERE grants.grant_end_date > '1989-03-16 18:27:16'	tracking_grants_for_research
SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = 'paper' INTERSECT SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = 'patent'	tracking_grants_for_research
SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = 'papers' INTERSECT SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = 'patents'	tracking_grants_for_research
SELECT SUM( grants.grant_amount ) FROM grants JOIN organisations ON grants.organisation_id = organisations.organisation_id JOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'research'	tracking_grants_for_research
SELECT SUM( grants.grant_amount ) FROM grants JOIN organisations ON grants.organisation_id = organisations.organisation_id JOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'research'	tracking_grants_for_research
SELECT project_staff.date_from , project_staff.date_to FROM project_staff WHERE project_staff.project_id IN (SELECT project_staff.project_id FROM project_staff GROUP BY project_staff.project_id ORDER BY COUNT( * ) DESC LIMIT 1)	tracking_grants_for_research
SELECT project_staff.date_from , project_staff.date_to FROM project_staff WHERE project_staff.project_id IN (SELECT project_staff.project_id FROM project_staff GROUP BY project_staff.project_id ORDER BY COUNT( * ) DESC LIMIT 1)	tracking_grants_for_research
SELECT organisations.organisation_id , organisations.organisation_details FROM grants JOIN organisations ON grants.organisation_id = organisations.organisation_id WHERE grants.grant_amount = (SELECT grants.organisation_id FROM grants) GROUP BY organisations.organisation_id	tracking_grants_for_research
SELECT organisations.organisation_id , organisations.organisation_details FROM grants JOIN organisations ON grants.organisation_id = organisations.organisation_id GROUP BY organisations.organisation_id HAVING SUM( grants.grant_amount ) > 6000	tracking_grants_for_research
SELECT organisations.organisation_type , organisations.organisation_id FROM organisations JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id GROUP BY organisations.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT organisations.organisation_type , organisations.organisation_id FROM organisations JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id GROUP BY organisations.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT organisations.organisation_type FROM organisations JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id GROUP BY organisations.organisation_type ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT organisations.organisation_type FROM organisations JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id GROUP BY organisations.organisation_type ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT documents.sent_date FROM documents JOIN grants ON documents.grant_id = grants.grant_id JOIN organisations ON grants.organisation_id = organisations.organisation_id JOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type WHERE grants.grant_amount > 5000	tracking_grants_for_research
SELECT documents.sent_date FROM documents JOIN grants ON documents.grant_id = grants.grant_id JOIN organisations ON grants.organisation_id = organisations.organisation_id JOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type WHERE grants.grant_amount > 5000 AND organisation_types.organisation_type_description = 'research'	tracking_grants_for_research
SELECT documents.response_received_date FROM documents JOIN document_types ON documents.document_type_code = document_types.document_type_code JOIN grants ON documents.grant_id = grants.grant_id WHERE document_types.document_description = 'Regular' OR grants.grant_amount > 100	tracking_grants_for_research
SELECT documents.response_received_date FROM documents JOIN document_types ON documents.document_type_code = document_types.document_type_code JOIN grants ON documents.grant_id = grants.grant_id WHERE document_types.document_description = 'Regular' OR grants.grant_amount > 100	tracking_grants_for_research
SELECT projects.project_details FROM projects WHERE projects.project_id NOT IN (SELECT project_staff.project_id FROM project_staff WHERE project_staff.role_code = 'researcher')	tracking_grants_for_research
SELECT projects.project_details FROM projects WHERE projects.project_id NOT IN (SELECT projects.project_details FROM projects WHERE projects.project_id NOT IN (SELECT project_staff.project_id FROM project_staff))	tracking_grants_for_research
SELECT tasks.task_details , tasks.task_id , projects.project_id FROM tasks JOIN projects ON tasks.project_id = projects.project_id WHERE projects.project_details = 'omnis' UNION SELECT tasks.task_details , tasks.task_id , projects.project_id FROM tasks JOIN projects ON tasks.project_id = projects.project_id JOIN project_outcomes ON projects.project_id = project_outcomes.project_id GROUP BY projects.project_id HAVING COUNT( * ) > 2	tracking_grants_for_research
SELECT tasks.task_details , tasks.task_id , projects.project_id FROM tasks JOIN projects ON tasks.project_id = projects.project_id WHERE projects.project_details = 'omnis' UNION SELECT tasks.task_details , tasks.task_id , projects.project_id FROM tasks JOIN projects ON tasks.project_id = projects.project_id JOIN project_outcomes ON project_outcomes.project_id = projects.project_id HAVING COUNT( * ) > 2	tracking_grants_for_research
SELECT project_staff.date_from , project_staff.date_to FROM project_staff WHERE project_staff.role_code = 'researcher'	tracking_grants_for_research
SELECT project_staff.date_from , project_staff.date_to FROM project_staff WHERE project_staff.role_code = 'researchers'	tracking_grants_for_research
SELECT COUNT( DISTINCT project_staff.role_code ) FROM project_staff	tracking_grants_for_research
SELECT COUNT( DISTINCT project_staff.role_code ) FROM project_staff	tracking_grants_for_research
SELECT SUM( grants.grant_amount ) , grants.organisation_id FROM grants GROUP BY grants.organisation_id	tracking_grants_for_research
SELECT SUM( grants.grant_amount ) , grants.organisation_id FROM grants GROUP BY grants.organisation_id	tracking_grants_for_research
SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id JOIN research_outcomes ON project_outcomes.outcome_code = research_outcomes.outcome_code WHERE research_outcomes.outcome_description LIKE '%Published%'	tracking_grants_for_research
SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id JOIN research_outcomes ON project_outcomes.outcome_code = research_outcomes.outcome_code WHERE research_outcomes.outcome_description LIKE '%published%'	tracking_grants_for_research
SELECT project_staff.project_id , COUNT( * ) FROM project_staff JOIN projects ON project_staff.project_id = projects.project_id GROUP BY project_staff.project_id ORDER BY COUNT( * ) ASC	tracking_grants_for_research
SELECT project_staff.project_id , COUNT( * ) FROM project_staff JOIN projects ON project_staff.project_id = projects.project_id GROUP BY project_staff.project_id ORDER BY COUNT( * ) ASC	tracking_grants_for_research
SELECT staff_roles.role_description FROM staff_roles WHERE staff_roles.role_code = 'researcher'	tracking_grants_for_research
SELECT staff_roles.role_description FROM staff_roles WHERE staff_roles.role_code = 'researcher'	tracking_grants_for_research
SELECT project_staff.date_from FROM project_staff ORDER BY project_staff.date_from ASC LIMIT 1	tracking_grants_for_research
SELECT project_staff.date_from FROM project_staff ORDER BY project_staff.date_from ASC LIMIT 1	tracking_grants_for_research
SELECT projects.project_details , projects.project_id FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id GROUP BY projects.project_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT projects.project_details , projects.project_id FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id GROUP BY projects.project_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT projects.project_details FROM projects WHERE projects.project_id NOT IN (SELECT project_outcomes.project_id FROM project_outcomes)	tracking_grants_for_research
SELECT projects.project_details FROM projects WHERE projects.project_id NOT IN (SELECT project_outcomes.project_id FROM project_outcomes)	tracking_grants_for_research
SELECT organisations.organisation_id , organisations.organisation_type , organisations.organisation_details FROM organisations JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id GROUP BY organisations.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT organisations.organisation_id , organisations.organisation_type , organisations.organisation_details FROM organisations JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id GROUP BY organisations.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT staff_roles.role_description , project_staff.staff_id FROM staff_roles JOIN project_staff ON staff_roles.role_code = project_staff.role_code JOIN project_outcomes ON project_staff.project_id = project_outcomes.project_id GROUP BY project_staff.staff_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT staff_roles.role_description , project_staff.staff_id FROM staff_roles JOIN project_staff ON staff_roles.role_code = project_staff.role_code JOIN project_outcomes ON project_staff.project_id = project_outcomes.project_id GROUP BY project_staff.staff_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT document_types.document_type_code FROM document_types WHERE document_types.document_description LIKE '%Initial%'	tracking_grants_for_research
SELECT document_types.document_type_code FROM document_types WHERE document_types.document_description LIKE '%Initial%'	tracking_grants_for_research
SELECT grants.grant_start_date FROM grants JOIN documents ON grants.grant_id = documents.grant_id JOIN document_types ON documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Regular' INTERSECT SELECT grants.grant_start_date FROM grants JOIN documents ON grants.grant_id = documents.grant_id JOIN document_types ON documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Initial Application'	tracking_grants_for_research
SELECT grants.grant_start_date FROM grants JOIN documents ON grants.grant_id = documents.grant_id JOIN document_types ON documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Regular' INTERSECT SELECT grants.grant_start_date FROM grants JOIN documents ON grants.grant_id = documents.grant_id JOIN document_types ON documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Initial Applications,'	tracking_grants_for_research
SELECT documents.grant_id , COUNT( * ) FROM documents GROUP BY documents.grant_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT documents.grant_id , COUNT( * ) FROM documents GROUP BY documents.grant_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT organisation_types.organisation_type_description FROM organisation_types JOIN organisations ON organisation_types.organisation_type = organisations.organisation_type WHERE organisations.organisation_details = 'quo'	tracking_grants_for_research
SELECT organisation_types.organisation_type_description FROM organisation_types JOIN organisations ON organisation_types.organisation_type = organisations.organisation_type WHERE organisations.organisation_details = 'quo'	tracking_grants_for_research
SELECT organisations.organisation_details FROM organisations JOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'Sponsor' ORDER BY organisations.organisation_details ASC	tracking_grants_for_research
SELECT organisations.organisation_details FROM organisations JOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'Sponsors' ORDER BY organisations.organisation_details ASC	tracking_grants_for_research
SELECT COUNT( * ) FROM project_outcomes WHERE project_outcomes.outcome_code = 'Patent'	tracking_grants_for_research
SELECT COUNT( * ) FROM project_outcomes WHERE project_outcomes.outcome_code = 'patents'	tracking_grants_for_research
SELECT COUNT( * ) FROM project_staff WHERE project_staff.role_code = 'leaders' OR project_staff.date_from<'1989-04-24 23:51:54'	tracking_grants_for_research
SELECT COUNT( * ) FROM project_staff WHERE project_staff.role_code = 'leaders' OR project_staff.date_from<'1989-04-24 23:51:54'	tracking_grants_for_research
SELECT project_staff.date_to FROM project_staff ORDER BY project_staff.date_to DESC LIMIT 1	tracking_grants_for_research
SELECT project_staff.date_to FROM project_staff ORDER BY project_staff.date_to DESC LIMIT 1	tracking_grants_for_research
SELECT research_outcomes.outcome_description FROM research_outcomes JOIN project_outcomes ON research_outcomes.outcome_code = project_outcomes.outcome_code JOIN projects ON project_outcomes.project_id = projects.project_id WHERE projects.project_details = 'sint'	tracking_grants_for_research
SELECT research_outcomes.outcome_description FROM research_outcomes JOIN project_outcomes ON research_outcomes.outcome_code = project_outcomes.outcome_code JOIN projects ON project_outcomes.project_id = projects.project_id WHERE projects.project_details = 'sint'	tracking_grants_for_research
SELECT projects.organisation_id , COUNT( * ) FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id GROUP BY projects.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT projects.organisation_id , COUNT( * ) FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id GROUP BY projects.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT projects.project_details FROM projects WHERE projects.organisation_id IN (SELECT projects.organisation_id FROM projects GROUP BY projects.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1)	tracking_grants_for_research
SELECT projects.project_details FROM projects WHERE projects.organisation_id IN (SELECT projects.organisation_id FROM projects GROUP BY projects.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1)	tracking_grants_for_research
SELECT research_staff.staff_details FROM research_staff ORDER BY research_staff.staff_details ASC	tracking_grants_for_research
SELECT research_staff.staff_details FROM research_staff ORDER BY research_staff.staff_details ASC	tracking_grants_for_research
SELECT COUNT( * ) FROM tasks	tracking_grants_for_research
SELECT COUNT( * ) FROM tasks	tracking_grants_for_research
SELECT COUNT( * ) , projects.project_details FROM projects JOIN tasks ON projects.project_id = tasks.project_id GROUP BY projects.project_id	tracking_grants_for_research
SELECT COUNT( * ) , projects.project_details FROM projects JOIN tasks ON projects.project_id = tasks.project_id GROUP BY projects.project_id	tracking_grants_for_research
SELECT project_staff.role_code FROM project_staff WHERE project_staff.date_from <= (SELECT MAX( project_staff.date_to ) FROM project_staff)	tracking_grants_for_research
SELECT project_staff.role_code FROM project_staff WHERE project_staff.date_from > '2003-04-19 15:06:20' AND project_staff.date_to<'2016-03-15 00:33:18'	tracking_grants_for_research
SELECT research_outcomes.outcome_description FROM research_outcomes JOIN project_outcomes ON research_outcomes.outcome_code = project_outcomes.outcome_code	tracking_grants_for_research
SELECT research_outcomes.outcome_description FROM research_outcomes JOIN project_outcomes ON research_outcomes.outcome_code = project_outcomes.outcome_code	tracking_grants_for_research
SELECT project_staff.role_code FROM project_staff GROUP BY project_staff.role_code ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT project_staff.role_code FROM project_staff GROUP BY project_staff.role_code ORDER BY COUNT( * ) DESC LIMIT 1	tracking_grants_for_research
SELECT COUNT( personfriend.friend ) FROM person JOIN personfriend ON person.name = personfriend.name WHERE person.name = 'Dan'	network_2
SELECT COUNT( personfriend.friend ) FROM person JOIN personfriend ON person.name = personfriend.name WHERE person.name = 'Dan'	network_2
SELECT COUNT( * ) FROM person WHERE person.gender = 'females'	network_2
SELECT COUNT( * ) FROM person WHERE person.gender = 'females'	network_2
SELECT AVG( person.age ) FROM person	network_2
SELECT AVG( person.age ) FROM person	network_2
SELECT COUNT( DISTINCT person.city ) FROM person	network_2
SELECT COUNT( DISTINCT person.city ) FROM person	network_2
SELECT COUNT( DISTINCT person.job ) FROM person	network_2
SELECT COUNT( DISTINCT person.job ) FROM person	network_2
SELECT person.name FROM person WHERE person.age = (SELECT MAX( person.age ) FROM person)	network_2
SELECT person.name FROM person WHERE person.age = (SELECT MAX( person.age ) FROM person)	network_2
SELECT person.name FROM person WHERE person.job = 'student' AND person.age = (SELECT MAX( person.age ) FROM person WHERE person.job = 'student')	network_2
SELECT person.name FROM person WHERE person.job = 'student' AND person.age = (SELECT MAX( person.age ) FROM person WHERE person.job = 'student')	network_2
SELECT person.name FROM person WHERE person.gender = 'male' AND person.age = (SELECT MIN( person.age ) FROM person WHERE person.gender = 'male')	network_2
SELECT person.name FROM person WHERE person.gender = 'male' AND person.age = (SELECT MIN( person.age ) FROM person WHERE person.gender = 'male')	network_2
SELECT person.age FROM person WHERE person.job = 'doctor' AND person.name = 'Zach'	network_2
SELECT person.age FROM person WHERE person.job = 'doctor' AND person.name = 'Zach'	network_2
SELECT person.name FROM person WHERE person.age<30	network_2
SELECT person.name FROM person WHERE person.age<30	network_2
SELECT COUNT( * ) FROM person WHERE person.age > 30 AND person.job = 'engineer'	network_2
SELECT COUNT( * ) FROM person WHERE person.age > 30 AND person.job = 'engineers'	network_2
SELECT AVG( person.age ) , person.gender FROM person GROUP BY person.gender	network_2
SELECT AVG( person.age ) , person.gender FROM person GROUP BY person.gender	network_2
SELECT AVG( person.age ) , person.job FROM person GROUP BY person.job	network_2
SELECT AVG( person.age ) , person.job FROM person GROUP BY person.job	network_2
SELECT AVG( person.age ) , person.job FROM person WHERE person.gender = 'male' GROUP BY person.job	network_2
SELECT AVG( person.age ) , person.job FROM person WHERE person.gender = 'male' GROUP BY person.job	network_2
SELECT MIN( person.age ) , person.job FROM person GROUP BY person.job	network_2
SELECT MIN( person.age ) , person.job FROM person GROUP BY person.job	network_2
SELECT COUNT( * ) , person.gender FROM person WHERE person.age<40 GROUP BY person.gender	network_2
SELECT COUNT( * ) , person.gender FROM person WHERE person.age<40 GROUP BY person.gender	network_2
SELECT person.name FROM person WHERE person.age > (SELECT MIN( person.age ) FROM person WHERE person.job = 'engineer') ORDER BY person.age ASC	network_2
SELECT person.name FROM person WHERE person.age > (SELECT MIN( person.age ) FROM person WHERE person.job = 'engineer') ORDER BY person.age ASC	network_2
SELECT COUNT( * ) FROM person WHERE person.age > (SELECT MAX( person.age ) FROM person WHERE person.job = 'engineers')	network_2
SELECT COUNT( * ) FROM person WHERE person.age > (SELECT MAX( person.age ) FROM person WHERE person.job = 'engineer')	network_2
SELECT person.name , person.job FROM person ORDER BY person.name ASC	network_2
SELECT person.name , person.job FROM person ORDER BY person.name ASC	network_2
SELECT person.name FROM person ORDER BY person.age DESC	network_2
SELECT person.name FROM person ORDER BY person.age DESC	network_2
SELECT person.name FROM person WHERE person.gender = 'males' ORDER BY person.age ASC	network_2
SELECT person.name FROM person WHERE person.gender = 'male' ORDER BY person.age ASC	network_2
SELECT person.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Dan' INTERSECT SELECT person.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Alice'	network_2
SELECT person.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Dan' INTERSECT SELECT person.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Alice'	network_2
SELECT DISTINCT person.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Dan' OR personfriend.friend = 'Alice'	network_2
SELECT DISTINCT person.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Dan' OR personfriend.friend = 'alice'	network_2
SELECT person.name FROM person WHERE person.age<30	network_2
SELECT person.name FROM person WHERE person.age<30	network_2
SELECT person.name FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = (SELECT person.name FROM person WHERE person.age > 40)	network_2
SELECT person.name FROM person WHERE person.age<30	network_2
SELECT person.name FROM person EXCEPT SELECT personfriend.name FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.job = 'student'	network_2
SELECT person.name FROM person EXCEPT SELECT personfriend.name FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.job = 'students'	network_2
SELECT personfriend.name FROM personfriend GROUP BY personfriend.name HAVING COUNT( * ) = 1	network_2
SELECT personfriend.name FROM personfriend GROUP BY personfriend.name HAVING COUNT( * ) = 1	network_2
SELECT personfriend.friend FROM person JOIN personfriend ON person.name = personfriend.name WHERE person.name = 'Bob'	network_2
SELECT personfriend.friend FROM person JOIN personfriend ON person.name = personfriend.name WHERE person.name = 'Bob'	network_2
SELECT person.name FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Bob'	network_2
SELECT person.name FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Bob'	network_2
SELECT person.name FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Zach' AND person.gender = 'females'	network_2
SELECT person.name FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Zach' AND person.gender = 'females'	network_2
SELECT personfriend.friend FROM person JOIN personfriend ON person.name = personfriend.friend WHERE personfriend.name = 'Alice' AND person.gender = 'female'	network_2
SELECT personfriend.friend FROM person JOIN personfriend ON person.name = personfriend.friend WHERE personfriend.name = 'Alice' AND person.gender = 'female'	network_2
person , person	network_2
SELECT personfriend.friend FROM person JOIN personfriend ON person.name = personfriend.friend WHERE personfriend.name = 'Alice' AND person.job = 'Alice' AND person.job = 'doctors'	network_2
SELECT personfriend.name FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.city = 'new york city'	network_2
SELECT personfriend.name FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.city = 'New York'	network_2
SELECT DISTINCT personfriend.name FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.age<(SELECT AVG( person.age ) FROM person)	network_2
SELECT DISTINCT personfriend.name FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.age<(SELECT AVG( person.age ) FROM person)	network_2
SELECT DISTINCT personfriend.name , personfriend.friend , person.age FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.age > (SELECT AVG( person.age ) FROM person)	network_2
SELECT DISTINCT personfriend.name , personfriend.friend , person.age FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.age > (SELECT AVG( person.age ) FROM person)	network_2
SELECT personfriend.friend FROM personfriend WHERE personfriend.name = 'Zach' AND personfriend.year = (SELECT MAX( personfriend.year ) FROM personfriend WHERE personfriend.name = 'Zach')	network_2
person , personfriend	network_2
person , personfriend	network_2
person , personfriend	network_2
person , personfriend	network_2
SELECT personfriend.name FROM personfriend WHERE personfriend.friend = 'Alice' AND personfriend.year = (SELECT MIN( personfriend.year ) FROM personfriend WHERE personfriend.friend = 'Alice')	network_2
person , personfriend	network_2
person , personfriend	network_2
SELECT person.name FROM person EXCEPT SELECT personfriend.name FROM personfriend	network_2
SELECT person.name FROM person EXCEPT SELECT personfriend.name FROM personfriend	network_2
SELECT personfriend.name , AVG( person.age ) FROM person JOIN personfriend ON person.name = personfriend.friend GROUP BY personfriend.name ORDER BY AVG( person.age ) DESC LIMIT 1	network_2
SELECT personfriend.name , AVG( person.age ) FROM person JOIN personfriend ON person.name = personfriend.friend GROUP BY personfriend.name ORDER BY AVG( person.age ) DESC LIMIT 1	network_2
SELECT COUNT( DISTINCT personfriend.name ) FROM personfriend WHERE personfriend.friend NOT IN (SELECT person.name FROM person WHERE person.city = 'Austin')	network_2
SELECT COUNT( DISTINCT personfriend.name ) FROM personfriend WHERE personfriend.friend NOT IN (SELECT person.name FROM person WHERE person.city = 'Austin')	network_2
SELECT DISTINCT personfriend.name FROM personfriend JOIN person ON personfriend.name = person.name JOIN personfriend ON personfriend.friend = personfriend.name JOIN personfriend ON personfriend.friend = personfriend.name WHERE person.name = 'Alice' AND personfriend.name != 'Alice'	network_2
SELECT DISTINCT personfriend.name FROM personfriend JOIN person ON personfriend.name = person.name JOIN personfriend ON personfriend.friend = personfriend.name JOIN personfriend ON personfriend.friend = personfriend.name WHERE person.name = 'Alice' AND personfriend.name != 'Alice'	network_2
SELECT COUNT( * ) FROM member	decoration_competition
SELECT member.name FROM member ORDER BY member.name ASC	decoration_competition
SELECT member.name , member.country FROM member	decoration_competition
SELECT member.name FROM member WHERE member.country = 'United States' OR member.country = 'Canada'	decoration_competition
SELECT member.country , COUNT( * ) FROM member GROUP BY member.country	decoration_competition
SELECT member.country FROM member GROUP BY member.country ORDER BY COUNT( * ) DESC LIMIT 1	decoration_competition
SELECT member.country FROM member GROUP BY member.country HAVING COUNT( * ) > 2	decoration_competition
SELECT college.leader_name , college.college_location FROM college	decoration_competition
SELECT member.name , college.name FROM college JOIN member ON college.college_id = member.college_id	decoration_competition
SELECT member.name , college.college_location FROM college JOIN member ON college.college_id = member.college_id ORDER BY member.name ASC	decoration_competition
SELECT DISTINCT college.leader_name FROM college JOIN member ON college.college_id = member.college_id WHERE member.country = 'Canada'	decoration_competition
SELECT member.name , round.decoration_theme FROM member JOIN round ON member.member_id = round.member_id	decoration_competition
SELECT member.name FROM member JOIN round ON member.member_id = round.member_id WHERE round.rank_in_round > 3	decoration_competition
SELECT member.name FROM member JOIN round ON member.member_id = round.member_id ORDER BY round.rank_in_round ASC	decoration_competition
SELECT member.name FROM member WHERE member.member_id NOT IN (SELECT round.member_id FROM round)	decoration_competition
SELECT documents.document_name , documents.access_count FROM documents ORDER BY documents.document_name ASC	document_management
SELECT documents.document_name , documents.access_count FROM documents ORDER BY documents.document_name ASC	document_management
SELECT documents.document_name , documents.access_count FROM documents ORDER BY documents.access_count DESC LIMIT 1	document_management
SELECT documents.document_name , documents.access_count FROM documents ORDER BY documents.access_count DESC LIMIT 1	document_management
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING COUNT( * ) > 4	document_management
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING COUNT( * ) > 4	document_management
SELECT SUM( documents.access_count ) FROM documents GROUP BY documents.document_type_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT SUM( documents.access_count ) FROM documents GROUP BY documents.document_type_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT AVG( documents.access_count ) FROM documents	document_management
SELECT AVG( documents.access_count ) FROM documents	document_management
SELECT document_structures.document_structure_description FROM documents JOIN document_structures ON documents.document_structure_code = document_structures.document_structure_code GROUP BY documents.document_structure_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT document_structures.document_structure_description FROM documents JOIN document_structures ON documents.document_structure_code = document_structures.document_structure_code GROUP BY documents.document_structure_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT documents.document_type_code FROM documents WHERE documents.document_name = 'David CV'	document_management
SELECT documents.document_type_code FROM documents WHERE documents.document_name = 'David CV'	document_management
SELECT documents.document_name FROM documents WHERE documents.document_type_code = (SELECT documents.document_structure_code FROM documents GROUP BY documents.document_structure_code ORDER BY COUNT( * ) DESC LIMIT 3)	document_management
SELECT documents.document_name FROM documents GROUP BY documents.document_type_code ORDER BY COUNT( * ) DESC LIMIT 3	document_management
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING SUM( documents.access_count ) > 10000	document_management
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING SUM( documents.access_count ) > 10000	document_management
SELECT document_sections.section_title FROM documents JOIN document_sections ON documents.document_code = document_sections.document_code WHERE documents.document_name = 'David CV'	document_management
SELECT document_sections.section_title FROM documents JOIN document_sections ON documents.document_code = document_sections.document_code WHERE documents.document_name = 'David CV'	document_management
SELECT documents.document_name FROM documents WHERE documents.document_code NOT IN (SELECT document_sections.document_code FROM document_sections)	document_management
SELECT documents.document_name FROM documents WHERE documents.document_code NOT IN (SELECT document_sections.document_code FROM document_sections)	document_management
SELECT users.user_name , users.password FROM users GROUP BY users.role_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT users.user_name , users.password FROM users GROUP BY users.role_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT AVG( documents.access_count ) FROM documents JOIN document_functional_areas ON documents.document_code = document_functional_areas.document_code JOIN functional_areas ON document_functional_areas.functional_area_code = functional_areas.functional_area_code WHERE functional_areas.functional_area_description = 'Acknowledgement'	document_management
SELECT AVG( documents.access_count ) FROM documents JOIN document_functional_areas ON documents.document_code = document_functional_areas.document_code JOIN functional_areas ON document_functional_areas.functional_area_code = functional_areas.functional_area_code WHERE functional_areas.functional_area_description = 'Acknowledgement'	document_management
SELECT documents.document_name FROM documents EXCEPT SELECT documents.document_name FROM documents JOIN document_sections ON documents.document_code = document_sections.document_code JOIN document_sections_images ON document_sections.section_id = document_sections_images.section_id	document_management
SELECT documents.document_name FROM documents EXCEPT SELECT documents.document_name FROM documents JOIN document_sections ON documents.document_code = document_sections.document_code JOIN document_sections_images ON document_sections.section_id = document_sections_images.section_id	document_management
SELECT documents.document_name FROM documents JOIN document_sections ON documents.document_code = document_sections.document_code GROUP BY documents.document_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT documents.document_name FROM documents JOIN document_sections ON documents.document_code = document_sections.document_code GROUP BY documents.document_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT documents.document_name FROM documents WHERE documents.document_name LIKE '%CV%'	document_management
SELECT documents.document_name FROM documents WHERE documents.document_name LIKE '%CV%'	document_management
SELECT COUNT( * ) FROM users WHERE users.user_login = 1	document_management
SELECT COUNT( * ) FROM users WHERE users.user_login = 1	document_management
SELECT roles.role_description FROM roles WHERE roles.role_code NOT IN (SELECT users.role_code FROM users WHERE users.user_login = 1) GROUP BY users.role_code ORDER BY COUNT( * ) DESC	document_management
SELECT users.role_code FROM users WHERE users.user_login = 1 GROUP BY users.role_code ORDER BY COUNT( * ) DESC LIMIT 1	document_management
SELECT AVG( documents.access_count ) FROM documents GROUP BY documents.document_structure_code ORDER BY COUNT( * ) ASC LIMIT 1	document_management
SELECT AVG( documents.access_count ) FROM documents GROUP BY documents.document_structure_code ORDER BY COUNT( * ) ASC LIMIT 1	document_management
SELECT images.image_name , images.image_url FROM images ORDER BY images.image_name ASC	document_management
SELECT images.image_name , images.image_url FROM images ORDER BY images.image_name ASC	document_management
SELECT COUNT( * ) , users.role_code FROM users GROUP BY users.role_code	document_management
SELECT COUNT( * ) , users.role_code FROM users GROUP BY users.role_code	document_management
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING COUNT( * ) > 2	document_management
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING COUNT( * ) > 2	document_management
SELECT COUNT( * ) FROM companies	company_office
SELECT COUNT( * ) FROM companies	company_office
SELECT companies.name FROM companies ORDER BY companies.market_value_billion DESC	company_office
SELECT companies.name FROM companies ORDER BY companies.market_value_billion DESC	company_office
SELECT companies.name FROM companies WHERE companies.headquarters != 'USA'	company_office
SELECT companies.name FROM companies WHERE companies.headquarters != 'USA'	company_office
SELECT companies.name , companies.assets_billion FROM companies ORDER BY companies.name ASC	company_office
SELECT companies.name , companies.assets_billion FROM companies ORDER BY companies.name ASC	company_office
SELECT AVG( companies.profits_billion ) FROM companies	company_office
SELECT AVG( companies.profits_billion ) FROM companies	company_office
SELECT MAX( companies.sales_billion ) , MIN( companies.sales_billion ) FROM companies WHERE companies.industry != 'Banking'	company_office
SELECT MAX( companies.sales_billion ) , MIN( companies.sales_billion ) FROM companies WHERE companies.industry != 'Banking'	company_office
SELECT COUNT( DISTINCT companies.industry ) FROM companies	company_office
SELECT COUNT( DISTINCT companies.industry ) FROM companies	company_office
SELECT buildings.name FROM buildings ORDER BY buildings.height DESC	company_office
SELECT buildings.name FROM buildings ORDER BY buildings.height DESC	company_office
SELECT buildings.stories FROM buildings ORDER BY buildings.height DESC LIMIT 1	company_office
SELECT buildings.stories FROM buildings ORDER BY buildings.height DESC LIMIT 1	company_office
SELECT companies.name , buildings.name FROM office_locations JOIN buildings ON office_locations.building_id = buildings.id JOIN companies ON office_locations.company_id = companies.id	company_office
SELECT companies.name , buildings.name FROM office_locations JOIN buildings ON office_locations.building_id = buildings.id JOIN companies ON office_locations.company_id = companies.id	company_office
SELECT buildings.name FROM office_locations JOIN buildings ON office_locations.building_id = buildings.id JOIN companies ON office_locations.company_id = companies.id GROUP BY office_locations.building_id HAVING COUNT( * ) > 1	company_office
SELECT buildings.name FROM office_locations JOIN buildings ON office_locations.building_id = buildings.id JOIN companies ON office_locations.company_id = companies.id GROUP BY office_locations.building_id HAVING COUNT( * ) > 1	company_office
SELECT buildings.name FROM office_locations JOIN buildings ON office_locations.building_id = buildings.id JOIN companies ON office_locations.company_id = companies.id GROUP BY office_locations.building_id ORDER BY COUNT( * ) DESC LIMIT 1	company_office
SELECT buildings.name FROM office_locations JOIN buildings ON office_locations.building_id = buildings.id JOIN companies ON office_locations.company_id = companies.id GROUP BY office_locations.building_id ORDER BY COUNT( * ) DESC LIMIT 1	company_office
SELECT buildings.name FROM buildings WHERE buildings.status = 'on-hold' ORDER BY buildings.stories ASC	company_office
SELECT buildings.name FROM buildings WHERE buildings.status = 'on-hold' ORDER BY buildings.stories ASC	company_office
SELECT companies.industry , COUNT( * ) FROM companies GROUP BY companies.industry	company_office
SELECT companies.industry , COUNT( * ) FROM companies GROUP BY companies.industry	company_office
SELECT companies.industry FROM companies GROUP BY companies.industry ORDER BY COUNT( * ) DESC	company_office
SELECT companies.industry FROM companies GROUP BY companies.industry ORDER BY COUNT( * ) DESC	company_office
SELECT companies.industry FROM companies GROUP BY companies.industry ORDER BY COUNT( * ) DESC LIMIT 1	company_office
SELECT companies.industry FROM companies GROUP BY companies.industry ORDER BY COUNT( * ) DESC LIMIT 1	company_office
SELECT buildings.name FROM buildings WHERE buildings.id NOT IN (SELECT office_locations.building_id FROM office_locations)	company_office
SELECT buildings.name FROM buildings WHERE buildings.id NOT IN (SELECT office_locations.building_id FROM office_locations)	company_office
SELECT companies.industry FROM companies WHERE companies.headquarters = 'USA' INTERSECT SELECT companies.industry FROM companies WHERE companies.headquarters = 'China'	company_office
SELECT companies.industry FROM companies WHERE companies.headquarters = 'USA' INTERSECT SELECT companies.industry FROM companies WHERE companies.headquarters = 'China'	company_office
SELECT COUNT( * ) FROM companies WHERE companies.industry = 'Banking' OR companies.industry = 'Conglomerate'	company_office
SELECT COUNT( * ) FROM companies WHERE companies.industry = 'Banking' OR companies.industry = 'Conglomerate'	company_office
SELECT companies.headquarters FROM companies GROUP BY companies.headquarters HAVING COUNT( * ) > 2	company_office
SELECT companies.headquarters FROM companies GROUP BY companies.headquarters HAVING COUNT( * ) > 2	company_office
SELECT COUNT( * ) FROM products	solvency_ii
SELECT products.product_name FROM products ORDER BY products.product_price ASC	solvency_ii
SELECT products.product_name , products.product_type_code FROM products	solvency_ii
SELECT products.product_price FROM products WHERE products.product_name = 'Dining' OR products.product_name = 'Trading Policy'	solvency_ii
SELECT AVG( products.product_price ) FROM products	solvency_ii
SELECT products.product_name FROM products ORDER BY products.product_price DESC LIMIT 1	solvency_ii
SELECT products.product_type_code , COUNT( * ) FROM products GROUP BY products.product_type_code	solvency_ii
SELECT products.product_type_code FROM products GROUP BY products.product_type_code ORDER BY COUNT( * ) DESC LIMIT 1	solvency_ii
SELECT products.product_type_code FROM products GROUP BY products.product_type_code HAVING COUNT( * ) >= 2	solvency_ii
SELECT products.product_type_code FROM products WHERE products.product_price > 4500 INTERSECT SELECT products.product_type_code FROM products WHERE products.product_price<3000	solvency_ii
SELECT products.product_name , COUNT( * ) FROM products JOIN products_in_events ON products.product_id = products_in_events.product_id GROUP BY products.product_name	solvency_ii
SELECT products.product_name , COUNT( * ) FROM products JOIN products_in_events ON products.product_id = products_in_events.product_id GROUP BY products.product_name ORDER BY COUNT( * ) DESC	solvency_ii
SELECT products.product_name FROM products JOIN products_in_events ON products.product_id = products_in_events.product_id GROUP BY products.product_name HAVING COUNT( * ) >= 2	solvency_ii
SELECT products.product_name FROM products JOIN products_in_events ON products.product_id = products_in_events.product_id GROUP BY products.product_name ORDER BY products.product_name ASC HAVING COUNT( * ) >= 2	solvency_ii
SELECT products.product_name FROM products WHERE products.product_id NOT IN (SELECT products_in_events.product_id FROM products_in_events)	solvency_ii
SELECT COUNT( * ) FROM artwork	entertainment_awards
SELECT artwork.name FROM artwork ORDER BY artwork.name ASC	entertainment_awards
SELECT artwork.name FROM artwork WHERE artwork.type != 'Program Talent Show'	entertainment_awards
SELECT festival_detail.festival_name , festival_detail.location FROM festival_detail	entertainment_awards
SELECT festival_detail.chair_name FROM festival_detail ORDER BY festival_detail.year ASC	entertainment_awards
SELECT festival_detail.location FROM festival_detail ORDER BY festival_detail.num_of_audience DESC LIMIT 1	entertainment_awards
SELECT festival_detail.festival_name FROM festival_detail WHERE festival_detail.year = 2007	entertainment_awards
SELECT AVG( festival_detail.num_of_audience ) FROM festival_detail	entertainment_awards
SELECT festival_detail.festival_name FROM festival_detail ORDER BY festival_detail.year DESC LIMIT 3	entertainment_awards
SELECT artwork.name , festival_detail.festival_name FROM nomination JOIN artwork ON nomination.artwork_id = artwork.artwork_id JOIN festival_detail ON nomination.festival_id = festival_detail.festival_id	entertainment_awards
SELECT DISTINCT artwork.type FROM nomination JOIN artwork ON nomination.artwork_id = artwork.artwork_id JOIN festival_detail ON nomination.festival_id = festival_detail.festival_id WHERE festival_detail.year = 2007	entertainment_awards
SELECT artwork.name FROM nomination JOIN artwork ON nomination.artwork_id = artwork.artwork_id JOIN festival_detail ON nomination.festival_id = festival_detail.festival_id ORDER BY festival_detail.year ASC	entertainment_awards
SELECT festival_detail.festival_name FROM nomination JOIN artwork ON nomination.artwork_id = artwork.artwork_id JOIN festival_detail ON nomination.festival_id = festival_detail.festival_id WHERE artwork.type = 'Program Talent Show'	entertainment_awards
SELECT nomination.festival_id , festival_detail.festival_name FROM nomination JOIN artwork ON nomination.artwork_id = artwork.artwork_id JOIN festival_detail ON nomination.festival_id = festival_detail.festival_id GROUP BY nomination.festival_id HAVING COUNT( * ) >= 2	entertainment_awards
SELECT nomination.festival_id , festival_detail.festival_name , COUNT( * ) FROM nomination JOIN artwork ON nomination.artwork_id = artwork.artwork_id JOIN festival_detail ON nomination.festival_id = festival_detail.festival_id GROUP BY nomination.festival_id	entertainment_awards
SELECT artwork.type , COUNT( * ) FROM artwork GROUP BY artwork.type	entertainment_awards
SELECT artwork.type FROM artwork GROUP BY artwork.type ORDER BY COUNT( * ) DESC LIMIT 1	entertainment_awards
SELECT festival_detail.year FROM festival_detail GROUP BY festival_detail.year HAVING COUNT( * ) > 1	entertainment_awards
SELECT artwork.name FROM artwork WHERE artwork.artwork_id NOT IN (SELECT nomination.artwork_id FROM nomination)	entertainment_awards
SELECT festival_detail.num_of_audience FROM festival_detail WHERE festival_detail.year = 2008 OR festival_detail.year = 2010	entertainment_awards
SELECT SUM( festival_detail.num_of_audience ) FROM festival_detail	entertainment_awards
SELECT festival_detail.year FROM festival_detail WHERE festival_detail.location = 'United States' INTERSECT SELECT festival_detail.year FROM festival_detail WHERE festival_detail.location != 'United States'	entertainment_awards
SELECT COUNT( * ) FROM premises	customers_campaigns_ecommerce
SELECT DISTINCT premises.premises_type FROM premises	customers_campaigns_ecommerce
SELECT premises.premises_type , premises.premise_details FROM premises ORDER BY premises.premises_type ASC	customers_campaigns_ecommerce
SELECT premises.premises_type , COUNT( * ) FROM premises GROUP BY premises.premises_type	customers_campaigns_ecommerce
SELECT mailshot_campaigns.product_category , COUNT( * ) FROM mailshot_campaigns GROUP BY mailshot_campaigns.product_category	customers_campaigns_ecommerce
SELECT customers.customer_name , customers.customer_phone FROM customers WHERE customers.customer_id NOT IN (SELECT mailshot_customers.customer_id FROM mailshot_customers)	customers_campaigns_ecommerce
SELECT customers.customer_name , customers.customer_phone FROM customers JOIN mailshot_customers ON customers.customer_id = mailshot_customers.customer_id WHERE mailshot_customers.outcome_code = 'No Response'	customers_campaigns_ecommerce
SELECT mailshot_customers.outcome_code , COUNT( * ) FROM mailshot_customers GROUP BY mailshot_customers.outcome_code	customers_campaigns_ecommerce
SELECT customers.customer_name FROM mailshot_customers JOIN customers ON mailshot_customers.customer_id = customers.customer_id WHERE mailshot_customers.outcome_code = 'Order' GROUP BY mailshot_customers.customer_id HAVING COUNT( * ) >= 2	customers_campaigns_ecommerce
SELECT customers.customer_name FROM mailshot_customers JOIN customers ON mailshot_customers.customer_id = customers.customer_id GROUP BY mailshot_customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_campaigns_ecommerce
SELECT customers.customer_name , customers.payment_method FROM mailshot_customers JOIN customers ON mailshot_customers.customer_id = customers.customer_id WHERE mailshot_customers.outcome_code = 'Order' INTERSECT SELECT customers.customer_name , customers.payment_method FROM mailshot_customers JOIN customers ON mailshot_customers.customer_id = customers.customer_id WHERE mailshot_customers.outcome_code = 'No Response'	customers_campaigns_ecommerce
SELECT premises.premises_type , customer_addresses.address_type_code FROM customer_addresses JOIN premises ON customer_addresses.premise_id = premises.premise_id	customers_campaigns_ecommerce
SELECT DISTINCT customer_addresses.address_type_code FROM customer_addresses	customers_campaigns_ecommerce
SELECT customer_orders.order_shipping_charges , customer_orders.customer_id FROM customer_orders WHERE customer_orders.order_status_code = 'Cancelled' OR customer_orders.order_status_code = 'Paid'	customers_campaigns_ecommerce
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.shipping_method_code = 'FedEx' AND customer_orders.order_status_code = 'Paid'	customers_campaigns_ecommerce
SELECT COUNT( * ) FROM course	college_3
SELECT COUNT( * ) FROM course	college_3
SELECT COUNT( * ) FROM course WHERE course.credits > 2	college_3
SELECT COUNT( * ) FROM course WHERE course.credits > 2	college_3
SELECT course.cname FROM course WHERE course.credits = 1	college_3
SELECT course.cname FROM course WHERE course.credits = 1	college_3
SELECT course.cname FROM course WHERE course.days = 'MTW'	college_3
SELECT course.cname FROM course WHERE course.days = 'MTW'	college_3
SELECT COUNT( * ) FROM department WHERE department.division = 'AS'	college_3
SELECT COUNT( * ) FROM department WHERE department.division = 'AS'	college_3
SELECT department.dphone FROM department WHERE department.room = 268	college_3
SELECT department.dphone FROM department WHERE department.room = 268	college_3
SELECT COUNT( DISTINCT enrolled_in.stuid ) FROM enrolled_in WHERE enrolled_in.grade = 'B'	college_3
SELECT COUNT( DISTINCT enrolled_in.stuid ) FROM enrolled_in WHERE enrolled_in.grade = 'B'	college_3
SELECT MAX( gradeconversion.gradepoint ) , MIN( gradeconversion.gradepoint ) FROM gradeconversion	college_3
SELECT MAX( gradeconversion.gradepoint ) , MIN( gradeconversion.gradepoint ) FROM gradeconversion	college_3
SELECT DISTINCT student.fname FROM student WHERE student.fname LIKE '%a%'	college_3
SELECT DISTINCT student.fname FROM student WHERE student.fname LIKE '%a%'	college_3
SELECT faculty.fname , faculty.lname FROM faculty WHERE faculty.sex = 'm' AND faculty.building = 'NEB'	college_3
SELECT faculty.fname , faculty.lname FROM faculty WHERE faculty.sex = 'm' AND faculty.building = 'NEB'	college_3
SELECT faculty.room FROM faculty WHERE faculty.rank = 'professor' AND faculty.building = 'NEB'	college_3
SELECT faculty.room FROM faculty WHERE faculty.rank = 'professors' AND faculty.building = 'NEB'	college_3
SELECT department.dname FROM department WHERE department.building = 'Mergenthaler'	college_3
SELECT department.dname FROM department WHERE department.building = 'Mergenthaler'	college_3
SELECT * FROM course ORDER BY course.credits ASC	college_3
SELECT * FROM course ORDER BY course.credits ASC	college_3
SELECT course.cname FROM course ORDER BY course.credits ASC	college_3
SELECT course.cname FROM course ORDER BY course.credits ASC	college_3
SELECT student.fname FROM student ORDER BY student.age DESC	college_3
SELECT student.fname FROM student ORDER BY student.age DESC	college_3
SELECT student.lname FROM student WHERE student.sex = 'f' ORDER BY student.age DESC	college_3
SELECT student.lname FROM student WHERE student.sex = 'f' ORDER BY student.age DESC	college_3
SELECT faculty.lname FROM faculty WHERE faculty.building = 'Barton' ORDER BY faculty.lname ASC	college_3
SELECT faculty.lname FROM faculty WHERE faculty.building = 'Barton' ORDER BY faculty.lname ASC	college_3
SELECT faculty.fname FROM faculty WHERE faculty.rank = 'Professor' ORDER BY faculty.fname ASC	college_3
SELECT faculty.fname FROM faculty WHERE faculty.rank = 'professors,' ORDER BY faculty.fname ASC	college_3
SELECT department.dname FROM department JOIN minor_in ON department.dno = minor_in.dno GROUP BY minor_in.dno ORDER BY COUNT( * ) DESC LIMIT 1	college_3
SELECT department.dname FROM department JOIN minor_in ON department.dno = minor_in.dno GROUP BY minor_in.dno ORDER BY COUNT( * ) DESC LIMIT 1	college_3
SELECT department.dname FROM department EXCEPT SELECT department.dname FROM department JOIN minor_in ON department.dno = minor_in.dno	college_3
SELECT department.dname FROM department EXCEPT SELECT department.dname FROM department JOIN minor_in ON department.dno = minor_in.dno	college_3
SELECT department.dname FROM department JOIN member_of ON department.dno = member_of.dno GROUP BY member_of.dno ORDER BY COUNT( * ) ASC LIMIT 1	college_3
SELECT department.dname FROM department JOIN member_of ON department.dno = member_of.dno GROUP BY member_of.dno ORDER BY COUNT( * ) ASC LIMIT 1	college_3
SELECT faculty.rank FROM faculty GROUP BY faculty.rank ORDER BY COUNT( * ) ASC LIMIT 1	college_3
SELECT faculty.rank FROM faculty GROUP BY faculty.rank ORDER BY COUNT( * ) ASC LIMIT 1	college_3
SELECT faculty.fname , faculty.lname FROM course JOIN faculty ON course.instructor = faculty.facid GROUP BY course.instructor ORDER BY COUNT( * ) DESC LIMIT 3	college_3
SELECT faculty.fname , faculty.lname FROM course JOIN faculty ON course.instructor = faculty.facid GROUP BY course.instructor ORDER BY COUNT( * ) DESC LIMIT 3	college_3
SELECT faculty.building FROM course JOIN faculty ON course.instructor = faculty.facid GROUP BY course.instructor ORDER BY COUNT( * ) DESC LIMIT 1	college_3
SELECT faculty.building FROM course JOIN faculty ON course.instructor = faculty.facid GROUP BY course.instructor ORDER BY COUNT( * ) DESC LIMIT 1	college_3
SELECT course.cname FROM course JOIN enrolled_in ON course.cid = enrolled_in.cid GROUP BY enrolled_in.cid HAVING COUNT( * ) >= 5	college_3
SELECT course.cname FROM course JOIN enrolled_in ON course.cid = enrolled_in.cid GROUP BY enrolled_in.cid HAVING COUNT( * ) >= 5	college_3
SELECT faculty.fname , faculty.lname FROM course JOIN faculty ON course.instructor = faculty.facid WHERE course.cname = 'null'	college_3
SELECT faculty.fname , faculty.lname FROM course JOIN faculty ON course.instructor = faculty.facid WHERE course.cname = 'COMPUTER LITERACY'	college_3
SELECT department.dname , department.room FROM course JOIN department ON course.dno = department.dno WHERE course.cname = 'INTRODUCTION TO COMPUTER SCIENCE'	college_3
SELECT department.dname , department.room FROM course JOIN department ON course.dno = department.dno WHERE course.cname = 'INTRODUCTION TO COMPUTER SCIENCE'	college_3
SELECT student.fname , student.lname , gradeconversion.gradepoint FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid	college_3
SELECT student.fname , student.lname , gradeconversion.gradepoint FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid	college_3
SELECT DISTINCT student.fname FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid WHERE gradeconversion.gradepoint >= 3.8	college_3
SELECT DISTINCT student.fname FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid WHERE gradeconversion.gradepoint >= 3.8	college_3
SELECT faculty.fname , faculty.lname FROM faculty JOIN member_of ON faculty.facid = member_of.facid WHERE member_of.dno = 520	college_3
SELECT faculty.fname , faculty.lname FROM faculty JOIN member_of ON faculty.facid = member_of.facid WHERE member_of.dno = 520	college_3
SELECT student.fname , student.lname FROM minor_in JOIN student ON minor_in.stuid = student.stuid WHERE minor_in.dno = 140	college_3
SELECT student.fname , student.lname FROM minor_in JOIN student ON minor_in.stuid = student.stuid WHERE minor_in.dno = 140	college_3
SELECT faculty.lname FROM department JOIN member_of ON department.dno = member_of.dno JOIN faculty ON faculty.facid = member_of.facid WHERE department.dname = 'computer science'	college_3
SELECT faculty.lname FROM department JOIN member_of ON department.dno = member_of.dno JOIN faculty ON faculty.facid = member_of.facid WHERE department.dname = 'computer science'	college_3
SELECT AVG( gradeconversion.gradepoint ) FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid WHERE student.lname = 'Smith'	college_3
SELECT AVG( gradeconversion.gradepoint ) FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid WHERE student.lname = 'Smith'	college_3
SELECT MAX( gradeconversion.gradepoint ) , MIN( gradeconversion.gradepoint ) FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid WHERE student.city_code = 'NYC'	college_3
SELECT MAX( gradeconversion.gradepoint ) , MIN( gradeconversion.gradepoint ) FROM enrolled_in JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade JOIN student ON enrolled_in.stuid = student.stuid WHERE student.city_code = 'NYC'	college_3
SELECT course.cname FROM course WHERE course.credits = 3 UNION SELECT course.cname FROM course WHERE course.credits = 1 AND course.hours = 4	college_3
SELECT course.cname FROM course WHERE course.credits = 3 UNION SELECT course.cname FROM course WHERE course.credits = 1 AND course.hours = 4	college_3
SELECT department.dname FROM department WHERE department.division = 'AS' UNION SELECT department.dname FROM department WHERE department.division = 'EN' AND department.building = 'NEB'	college_3
SELECT department.dname FROM department WHERE department.division = 'AS,' UNION SELECT department.dname FROM department WHERE department.division = 'EN' AND department.building = 'NEB'	college_3
SELECT student.fname FROM student WHERE student.stuid NOT IN (SELECT enrolled_in.stuid FROM enrolled_in)	college_3
SELECT student.fname FROM student WHERE student.stuid NOT IN (SELECT enrolled_in.stuid FROM enrolled_in)	college_3
SELECT product_suppliers.product_id FROM product_suppliers ORDER BY product_suppliers.total_amount_purchased DESC LIMIT 3	department_store
SELECT product_suppliers.product_id FROM product_suppliers ORDER BY product_suppliers.total_amount_purchased DESC LIMIT 3	department_store
SELECT products.product_id , products.product_type_code FROM products ORDER BY products.product_price ASC LIMIT 1	department_store
SELECT products.product_id , products.product_type_code FROM products ORDER BY products.product_price ASC LIMIT 1	department_store
SELECT COUNT( DISTINCT products.product_type_code ) FROM products	department_store
SELECT COUNT( DISTINCT products.product_type_code ) FROM products	department_store
SELECT addresses.address_details FROM addresses JOIN customer_addresses ON addresses.address_id = customer_addresses.address_id WHERE customer_addresses.customer_id = 10	department_store
SELECT addresses.address_details FROM addresses JOIN customer_addresses ON addresses.address_id = customer_addresses.address_id WHERE customer_addresses.customer_id = 10	department_store
SELECT staff.staff_id , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Department Manager'	department_store
SELECT staff.staff_id , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Department Manager'	department_store
SELECT customers.payment_method_code , COUNT( * ) FROM customers GROUP BY customers.payment_method_code	department_store
SELECT customers.payment_method_code , COUNT( * ) FROM customers GROUP BY customers.payment_method_code	department_store
SELECT order_items.product_id FROM order_items GROUP BY order_items.product_id ORDER BY COUNT( * ) DESC LIMIT 1	department_store
SELECT order_items.product_id FROM order_items GROUP BY order_items.product_id ORDER BY COUNT( * ) DESC LIMIT 1	department_store
SELECT customers.customer_name , customers.customer_phone , customers.customer_email FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id GROUP BY customer_orders.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	department_store
SELECT customers.customer_name , customers.customer_phone , customers.customer_email FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id GROUP BY customer_orders.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	department_store
SELECT products.product_type_code , AVG( products.product_price ) FROM products GROUP BY products.product_type_code	department_store
SELECT products.product_type_code , AVG( products.product_price ) FROM products GROUP BY products.product_type_code	department_store
SELECT COUNT( * ) FROM department_stores JOIN department_store_chain ON department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id WHERE department_store_chain.dept_store_chain_name = 'South'	department_store
SELECT COUNT( * ) FROM department_stores JOIN department_store_chain ON department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id WHERE department_store_chain.dept_store_chain_name = 'South'	department_store
SELECT staff.staff_name , staff_department_assignments.job_title_code FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id ORDER BY staff_department_assignments.date_assigned_to DESC LIMIT 1	department_store
SELECT staff.staff_name , staff_department_assignments.job_title_code FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id ORDER BY staff_department_assignments.date_assigned_to DESC LIMIT 1	department_store
SELECT products.product_type_code , products.product_name , products.product_price FROM product_suppliers JOIN products ON product_suppliers.product_id = products.product_id WHERE product_suppliers.supplier_id = 3	department_store
SELECT products.product_type_code , products.product_name , products.product_price FROM product_suppliers JOIN products ON product_suppliers.product_id = products.product_id WHERE product_suppliers.supplier_id = 3	department_store
SELECT DISTINCT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending' ORDER BY customer_orders.customer_id ASC	department_store
SELECT DISTINCT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending' ORDER BY customer_orders.customer_id ASC	department_store
SELECT customers.customer_name , customers.customer_address FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'New' INTERSECT SELECT customers.customer_name , customers.customer_address FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending'	department_store
SELECT customers.customer_name , customers.customer_address FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'New' INTERSECT SELECT customers.customer_name , customers.customer_address FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending'	department_store
SELECT product_suppliers.product_id FROM product_suppliers JOIN products ON product_suppliers.product_id = products.product_id WHERE product_suppliers.supplier_id = 2 AND products.product_price > (SELECT AVG( products.product_price ) FROM products)	department_store
SELECT product_suppliers.product_id FROM product_suppliers JOIN products ON product_suppliers.product_id = products.product_id WHERE product_suppliers.supplier_id = 2 AND products.product_price > (SELECT AVG( products.product_price ) FROM products)	department_store
SELECT department_stores.dept_store_id , department_stores.store_name FROM departments JOIN department_stores ON departments.dept_store_id = department_stores.dept_store_id WHERE departments.department_name = 'marketing' INTERSECT SELECT department_stores.dept_store_id , department_stores.store_name FROM departments JOIN department_stores ON departments.dept_store_id = department_stores.dept_store_id WHERE departments.department_name = 'managing'	department_store
SELECT department_stores.dept_store_id , department_stores.store_name FROM departments JOIN department_stores ON departments.dept_store_id = department_stores.dept_store_id WHERE departments.department_name = 'marketing' INTERSECT SELECT department_stores.dept_store_id , department_stores.store_name FROM departments JOIN department_stores ON departments.dept_store_id = department_stores.dept_store_id WHERE departments.department_name = 'managing'	department_store
SELECT department_stores.dept_store_chain_id FROM department_stores GROUP BY department_stores.dept_store_chain_id ORDER BY COUNT( * ) DESC LIMIT 2	department_store
SELECT department_stores.dept_store_chain_id FROM department_stores GROUP BY department_stores.dept_store_chain_id ORDER BY COUNT( * ) DESC LIMIT 2	department_store
SELECT staff_department_assignments.department_id FROM staff_department_assignments GROUP BY staff_department_assignments.department_id ORDER BY COUNT( * ) ASC LIMIT 1	department_store
SELECT staff_department_assignments.department_id FROM staff_department_assignments GROUP BY staff_department_assignments.department_id ORDER BY COUNT( * ) ASC LIMIT 1	department_store
SELECT products.product_type_code , MAX( products.product_price ) , MIN( products.product_price ) FROM products GROUP BY products.product_type_code	department_store
SELECT products.product_type_code , MAX( products.product_price ) , MIN( products.product_price ) FROM products GROUP BY products.product_type_code	department_store
SELECT products.product_type_code FROM products GROUP BY products.product_type_code HAVING AVG( products.product_price ) > (SELECT AVG( products.product_price ) FROM products)	department_store
SELECT products.product_type_code FROM products GROUP BY products.product_type_code HAVING AVG( products.product_price ) > (SELECT AVG( products.product_price ) FROM products)	department_store
SELECT staff.staff_id , staff.staff_name FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id ORDER BY staff_department_assignments.job_title_code ASC LIMIT 1	department_store
SELECT staff.staff_id , staff.staff_name FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id GROUP BY staff.staff_id ORDER BY COUNT( * ) ASC LIMIT 1	department_store
SELECT products.product_name , products.product_id FROM products WHERE products.product_price BETWEEN 600 and 700	department_store
SELECT products.product_name , products.product_id FROM products WHERE products.product_price BETWEEN 600 and 700	department_store
SELECT DISTINCT customer_orders.customer_id FROM customer_orders WHERE customer_orders.order_date > (SELECT MIN( customer_orders.order_date ) FROM customer_orders WHERE customer_orders.order_status_code = 'Cancelled')	department_store
SELECT DISTINCT customer_orders.customer_id FROM customer_orders WHERE customer_orders.order_date > (SELECT MIN( customer_orders.order_date ) FROM customer_orders WHERE customer_orders.order_status_code = 'Cancelled')	department_store
SELECT staff_department_assignments.staff_id FROM staff_department_assignments WHERE staff_department_assignments.date_assigned_to<(SELECT MAX( staff_department_assignments.date_assigned_to ) FROM staff_department_assignments WHERE staff_department_assignments.job_title_code = 'Clerical Staff')	department_store
SELECT staff_department_assignments.staff_id FROM staff_department_assignments WHERE staff_department_assignments.date_assigned_to<(SELECT MAX( staff_department_assignments.date_assigned_to ) FROM staff_department_assignments WHERE staff_department_assignments.job_title_code = 'Clerical Staff')	department_store
SELECT customers.customer_name , customers.customer_id FROM customers WHERE customers.customer_address LIKE '%TN%'	department_store
SELECT customers.customer_name , customers.customer_id FROM customers WHERE customers.customer_address LIKE '%TN%'	department_store
SELECT staff.staff_name , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.date_assigned_from LIKE '%2016%'	department_store
SELECT staff.staff_name , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.date_assigned_from LIKE '%2016%'	department_store
SELECT staff.staff_name FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id GROUP BY staff_department_assignments.staff_id HAVING COUNT( * ) > 1	department_store
SELECT staff.staff_name FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id GROUP BY staff_department_assignments.staff_id HAVING COUNT( * ) > 1	department_store
SELECT suppliers.supplier_name , suppliers.supplier_name FROM suppliers JOIN supplier_addresses ON suppliers.supplier_id = supplier_addresses.supplier_id ORDER BY addresses.address_details ASC	department_store
SELECT suppliers.supplier_name , suppliers.supplier_name FROM suppliers ORDER BY suppliers.supplier_name ASC	department_store
SELECT customers.customer_phone FROM customers UNION SELECT suppliers.supplier_name FROM suppliers	department_store
SELECT customers.customer_phone FROM customers UNION SELECT suppliers.supplier_name FROM suppliers	department_store
SELECT order_items.product_id FROM order_items GROUP BY order_items.product_id HAVING COUNT( * ) > 3 UNION SELECT product_suppliers.product_id FROM product_suppliers GROUP BY product_suppliers.product_id HAVING SUM( product_suppliers.total_amount_purchased ) > 80000	department_store
SELECT order_items.product_id FROM order_items GROUP BY order_items.product_id HAVING COUNT( * ) > 3 UNION SELECT product_suppliers.product_id FROM product_suppliers GROUP BY product_suppliers.product_id HAVING SUM( product_suppliers.total_amount_purchased ) > 80000	department_store
SELECT products.product_id , products.product_name FROM products WHERE products.product_price<600 OR products.product_price > 900	department_store
SELECT products.product_id , products.product_name FROM products WHERE products.product_price<600 OR products.product_price > 900	department_store
SELECT product_suppliers.supplier_id FROM product_suppliers WHERE AVG( product_suppliers.total_amount_purchased ) > 50000 OR AVG( product_suppliers.total_amount_purchased )<30000 GROUP BY product_suppliers.supplier_id	department_store
SELECT product_suppliers.supplier_id FROM product_suppliers WHERE AVG( product_suppliers.total_amount_purchased ) > 50000 OR AVG( product_suppliers.total_amount_purchased )<30000 GROUP BY product_suppliers.supplier_id	department_store
SELECT AVG( product_suppliers.total_amount_purchased ) , AVG( product_suppliers.total_value_purchased ) FROM product_suppliers WHERE product_suppliers.supplier_id = (SELECT product_suppliers.supplier_id FROM product_suppliers GROUP BY product_suppliers.supplier_id ORDER BY COUNT( * ) DESC LIMIT 1)	department_store
SELECT AVG( product_suppliers.total_amount_purchased ) , AVG( product_suppliers.total_value_purchased ) FROM product_suppliers WHERE product_suppliers.supplier_id = (SELECT product_suppliers.supplier_id FROM product_suppliers GROUP BY product_suppliers.supplier_id ORDER BY COUNT( * ) DESC LIMIT 1)	department_store
SELECT MAX( customers.customer_code ) , MIN( customers.customer_code ) FROM customers	department_store
SELECT MAX( customers.customer_code ) , MIN( customers.customer_code ) FROM customers	department_store
SELECT DISTINCT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_name = 'keyboard'	department_store
SELECT DISTINCT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_name = 'keyboard'	department_store
SELECT DISTINCT suppliers.supplier_name , suppliers.supplier_name FROM suppliers JOIN product_suppliers ON suppliers.supplier_id = product_suppliers.supplier_id JOIN products ON product_suppliers.product_id = products.product_id WHERE products.product_name = 'red jeans'	department_store
SELECT DISTINCT suppliers.supplier_name , suppliers.supplier_name FROM suppliers JOIN product_suppliers ON suppliers.supplier_id = product_suppliers.supplier_id JOIN products ON product_suppliers.product_id = products.product_id WHERE products.product_name = 'red jeans'	department_store
SELECT MAX( products.product_price ) , MIN( products.product_price ) , products.product_type_code FROM products GROUP BY products.product_type_code ORDER BY products.product_type_code ASC	department_store
SELECT MAX( products.product_price ) , MIN( products.product_price ) , products.product_type_code FROM products GROUP BY products.product_type_code ORDER BY products.product_type_code ASC	department_store
SELECT customer_orders.order_id , customer_orders.customer_id FROM customer_orders WHERE customer_orders.order_status_code = 'Cancelled' ORDER BY customer_orders.order_date ASC	department_store
SELECT customer_orders.order_id , customer_orders.customer_id FROM customer_orders WHERE customer_orders.order_status_code = 'Cancelled,' ORDER BY customer_orders.order_date ASC	department_store
SELECT DISTINCT products.product_name FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_id HAVING COUNT( DISTINCT customer_orders.customer_id ) >= 2	department_store
SELECT DISTINCT products.product_name FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_id HAVING COUNT( DISTINCT customer_orders.customer_id ) >= 2	department_store
SELECT DISTINCT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id GROUP BY customers.customer_id HAVING COUNT( DISTINCT order_items.product_id ) >= 3	department_store
SELECT DISTINCT customers.customer_name FROM customer_orders JOIN customers ON customer_orders.customer_id = customers.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id HAVING COUNT( DISTINCT order_items.product_id ) >= 3	department_store
SELECT staff.staff_name , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Sales Person' EXCEPT SELECT staff.staff_name , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Clerical Staff'	department_store
SELECT staff.staff_name , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Sales Person' EXCEPT SELECT staff.staff_name , staff.staff_gender FROM staff JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Clerical Staff'	department_store
SELECT customers.customer_id , customers.customer_name FROM customers WHERE customers.customer_address LIKE '%WY%' AND customers.payment_method_code != 'credit card'	department_store
SELECT customers.customer_id , customers.customer_name FROM customers WHERE customers.customer_address LIKE '%WY%' AND customers.payment_method_code != 'credit card'	department_store
SELECT AVG( products.product_price ) FROM products WHERE products.product_type_code = 'clothes'	department_store
SELECT AVG( products.product_price ) FROM products WHERE products.product_type_code = 'clothes'	department_store
SELECT products.product_name FROM products WHERE products.product_type_code = 'hardware' ORDER BY products.product_price DESC LIMIT 1	department_store
SELECT products.product_name FROM products WHERE products.product_type_code = 'hardware' ORDER BY products.product_price DESC LIMIT 1	department_store
SELECT COUNT( * ) FROM aircraft	aircraft
SELECT COUNT( * ) FROM aircraft	aircraft
SELECT aircraft.description FROM aircraft	aircraft
SELECT aircraft.description FROM aircraft	aircraft
SELECT AVG( airport.international_passengers ) FROM airport	aircraft
SELECT AVG( airport.international_passengers ) FROM airport	aircraft
SELECT airport.international_passengers , airport.domestic_passengers FROM airport WHERE airport.airport_name = 'Heathrow'	aircraft
SELECT airport.international_passengers , airport.domestic_passengers FROM airport WHERE airport.airport_name = 'London Heathrow'	aircraft
SELECT SUM( airport.domestic_passengers ) FROM airport WHERE airport.airport_name LIKE '%London%'	aircraft
SELECT SUM( airport.domestic_passengers ) FROM airport WHERE airport.airport_name LIKE '%London%'	aircraft
SELECT MAX( airport.transit_passengers ) , MIN( airport.transit_passengers ) FROM airport	aircraft
SELECT MAX( airport.transit_passengers ) , MIN( airport.transit_passengers ) FROM airport	aircraft
SELECT pilot.name FROM pilot WHERE pilot.age >= 25	aircraft
SELECT pilot.name FROM pilot WHERE pilot.age >= 25	aircraft
SELECT pilot.name FROM pilot ORDER BY pilot.name ASC	aircraft
SELECT pilot.name FROM pilot ORDER BY pilot.name ASC	aircraft
SELECT pilot.name FROM pilot WHERE pilot.age <= 30 ORDER BY pilot.name DESC	aircraft
SELECT pilot.name FROM pilot WHERE pilot.age <= 30 ORDER BY pilot.name DESC	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.airport_name = 'London Gatwick'	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.airport_name = 'London Gatwick'	aircraft
SELECT aircraft.aircraft , aircraft.description FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.total_passengers > 10000000	aircraft
SELECT aircraft.aircraft , aircraft.description FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.total_passengers > 10000000	aircraft
SELECT AVG( airport.total_passengers ) FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE aircraft.aircraft = 'Robinson R-22'	aircraft
SELECT AVG( airport.total_passengers ) FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE aircraft.aircraft = 'Robinson R-22'	aircraft
SELECT match.location , aircraft.aircraft FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft	aircraft
SELECT match.location , aircraft.aircraft FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft GROUP BY match.winning_aircraft ORDER BY COUNT( * ) DESC LIMIT 1	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft GROUP BY match.winning_aircraft ORDER BY COUNT( * ) DESC LIMIT 1	aircraft
SELECT aircraft.aircraft , COUNT( * ) FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft GROUP BY match.winning_aircraft	aircraft
SELECT aircraft.aircraft , COUNT( * ) FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft GROUP BY match.winning_aircraft	aircraft
SELECT pilot.name FROM pilot ORDER BY pilot.age DESC	aircraft
SELECT pilot.name FROM pilot ORDER BY pilot.age DESC	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft GROUP BY match.winning_aircraft HAVING COUNT( * ) >= 2	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN match ON aircraft.aircraft_id = match.winning_aircraft GROUP BY match.winning_aircraft HAVING COUNT( * ) >= 2	aircraft
SELECT aircraft.aircraft FROM aircraft WHERE aircraft.aircraft_id NOT IN (SELECT match.winning_aircraft FROM match)	aircraft
SELECT aircraft.aircraft FROM aircraft WHERE aircraft.aircraft_id NOT IN (SELECT match.winning_aircraft FROM match)	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.airport_name = 'London Heathrow' INTERSECT SELECT aircraft.aircraft FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.airport_name = 'London Gatwick'	aircraft
SELECT aircraft.aircraft FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.airport_name = 'London Heathrow' INTERSECT SELECT aircraft.aircraft FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.airport_name = 'London Heathrow and Gatwick'	aircraft
SELECT * FROM airport ORDER BY airport.international_passengers DESC LIMIT 1	aircraft
SELECT * FROM airport ORDER BY airport.international_passengers DESC LIMIT 1	aircraft
SELECT pilot.name , pilot.age FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot WHERE pilot.age<30 GROUP BY match.winning_pilot ORDER BY COUNT( * ) DESC LIMIT 1	aircraft
SELECT pilot.name , pilot.age FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot WHERE pilot.age<30 GROUP BY match.winning_pilot ORDER BY COUNT( * ) DESC LIMIT 1	aircraft
SELECT pilot.name , pilot.age FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot ORDER BY pilot.age ASC LIMIT 1	aircraft
SELECT pilot.name , pilot.age FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot ORDER BY pilot.age ASC LIMIT 1	aircraft
SELECT pilot.name FROM pilot WHERE pilot.pilot_id NOT IN (SELECT match.winning_pilot FROM match WHERE match.country = 'Australia')	aircraft
SELECT pilot.name FROM pilot WHERE pilot.pilot_id NOT IN (SELECT match.winning_pilot FROM match WHERE match.country = 'Australia')	aircraft
SELECT properties.property_id , COUNT( * ) FROM properties JOIN residents ON properties.property_id = residents.property_id GROUP BY properties.property_id	local_govt_and_lot
SELECT DISTINCT services.service_type_code FROM services JOIN organizations ON services.organization_id = organizations.organization_id WHERE organizations.organization_details = 'Denesik and Sons Party'	local_govt_and_lot
SELECT residents.resident_id , residents.other_details , COUNT( * ) FROM residents JOIN residents_services ON residents.resident_id = residents_services.resident_id GROUP BY residents.resident_id ORDER BY COUNT( * ) DESC	local_govt_and_lot
SELECT services.service_id , services.service_details , COUNT( * ) FROM services JOIN residents_services ON services.service_id = residents_services.service_id GROUP BY services.service_id ORDER BY COUNT( * ) DESC LIMIT 1	local_govt_and_lot
SELECT things.thing_id , things.type_of_thing_code , organizations.organization_details FROM things JOIN organizations ON things.organization_id = organizations.organization_id	local_govt_and_lot
SELECT customers.customer_id , customers.customer_details FROM customers JOIN customer_events ON customers.customer_id = customer_events.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) >= 3	local_govt_and_lot
SELECT customer_events.date_moved_in , customers.customer_id , customers.customer_details FROM customers JOIN customer_events ON customers.customer_id = customer_events.customer_id	local_govt_and_lot
SELECT customer_events.customer_event_id , customer_events.property_id FROM customer_events JOIN customer_event_notes ON customer_events.customer_event_id = customer_event_notes.customer_event_id GROUP BY customer_events.customer_event_id HAVING COUNT( * ) BETWEEN 1 and 3	local_govt_and_lot
SELECT DISTINCT things.thing_id , things.type_of_thing_code FROM timed_status_of_things JOIN things ON timed_status_of_things.thing_id = things.thing_id WHERE timed_status_of_things.status_of_thing_code = 'Close' OR timed_status_of_things.date_and_date<'2017-06-19 02:59:21'	local_govt_and_lot
SELECT COUNT( DISTINCT timed_locations_of_things.location_code ) FROM things JOIN timed_locations_of_things ON things.thing_id = timed_locations_of_things.thing_id WHERE things.service_details = 'Unsatisfied'	local_govt_and_lot
SELECT COUNT( DISTINCT timed_status_of_things.status_of_thing_code ) FROM timed_status_of_things	local_govt_and_lot
SELECT organizations.organization_id FROM organizations EXCEPT SELECT organizations.parent_organization_id FROM organizations	local_govt_and_lot
SELECT MAX( residents.date_moved_in ) FROM residents	local_govt_and_lot
SELECT residents.other_details FROM residents WHERE residents.other_details LIKE '%Miss%'	local_govt_and_lot
SELECT customer_events.customer_event_id , customer_events.date_moved_in , customer_events.property_id FROM customer_events	local_govt_and_lot
SELECT COUNT( * ) FROM customers WHERE customers.customer_id NOT IN (SELECT customer_events.customer_id FROM customer_events)	local_govt_and_lot
SELECT DISTINCT residents.date_moved_in FROM residents	local_govt_and_lot
SELECT COUNT( * ) FROM school	school_player
SELECT COUNT( * ) FROM school	school_player
SELECT school.location FROM school ORDER BY school.enrollment ASC	school_player
SELECT school.location FROM school ORDER BY school.enrollment ASC	school_player
SELECT school.location FROM school ORDER BY school.founded DESC	school_player
SELECT school.location FROM school ORDER BY school.founded DESC	school_player
SELECT school.enrollment FROM school WHERE school.denomination != 'Catholic'	school_player
SELECT school.enrollment FROM school WHERE school.denomination != 'Catholic'	school_player
SELECT AVG( school.enrollment ) FROM school	school_player
SELECT AVG( school.enrollment ) FROM school	school_player
SELECT player.team FROM player ORDER BY player.team ASC	school_player
SELECT player.team FROM player ORDER BY player.team ASC	school_player
SELECT COUNT( DISTINCT player.position ) FROM player	school_player
SELECT COUNT( DISTINCT player.position ) FROM player	school_player
SELECT player.team FROM player ORDER BY player.age DESC LIMIT 1	school_player
SELECT player.team FROM player ORDER BY player.age DESC LIMIT 1	school_player
SELECT player.team FROM player ORDER BY player.age DESC LIMIT 5	school_player
SELECT player.team FROM player ORDER BY player.age DESC LIMIT 5	school_player
SELECT player.team , school.location FROM player JOIN school ON player.school_id = school.school_id	school_player
SELECT player.team , school.location FROM player JOIN school ON player.school_id = school.school_id	school_player
SELECT school.location FROM player JOIN school ON player.school_id = school.school_id GROUP BY player.school_id HAVING COUNT( * ) > 1	school_player
SELECT school.location FROM player JOIN school ON player.school_id = school.school_id GROUP BY player.school_id HAVING COUNT( * ) > 1	school_player
SELECT school.denomination FROM player JOIN school ON player.school_id = school.school_id GROUP BY player.school_id ORDER BY COUNT( * ) DESC LIMIT 1	school_player
SELECT school.denomination FROM player JOIN school ON player.school_id = school.school_id GROUP BY player.school_id ORDER BY COUNT( * ) DESC LIMIT 1	school_player
SELECT school.location , school_details.nickname FROM school JOIN school_details ON school.school_id = school_details.school_id	school_player
SELECT school.location , school_details.nickname FROM school JOIN school_details ON school.school_id = school_details.school_id	school_player
SELECT school.denomination , COUNT( * ) FROM school GROUP BY school.denomination	school_player
SELECT school.denomination , COUNT( * ) FROM school GROUP BY school.denomination	school_player
SELECT school.denomination , COUNT( * ) FROM school GROUP BY school.denomination ORDER BY COUNT( * ) DESC	school_player
SELECT school.denomination , COUNT( * ) FROM school GROUP BY school.denomination ORDER BY COUNT( * ) DESC	school_player
SELECT school.school_colors FROM school ORDER BY school.enrollment DESC LIMIT 1	school_player
SELECT school.school_colors FROM school ORDER BY school.enrollment DESC LIMIT 1	school_player
SELECT school.location FROM school WHERE school.school_id NOT IN (SELECT player.school_id FROM player)	school_player
SELECT school.location FROM school WHERE school.school_id NOT IN (SELECT player.school_id FROM player)	school_player
SELECT school.denomination FROM school WHERE school.founded<1890 INTERSECT SELECT school.denomination FROM school WHERE school.founded > 1900	school_player
SELECT school.denomination FROM school WHERE school.founded<1890 INTERSECT SELECT school.denomination FROM school WHERE school.founded > 1900	school_player
SELECT school_details.nickname FROM school_details WHERE school_details.division != 'division 1'	school_player
SELECT school_details.nickname FROM school_details WHERE school_details.division != '1'	school_player
SELECT school.denomination FROM school GROUP BY school.denomination HAVING COUNT( * ) > 1	school_player
SELECT school.denomination FROM school GROUP BY school.denomination HAVING COUNT( * ) > 1	school_player
SELECT DISTINCT district.district_name FROM district ORDER BY district.city_area DESC	store_product
SELECT DISTINCT district.district_name FROM district ORDER BY district.city_area DESC	store_product
SELECT product.max_page_size FROM product GROUP BY product.max_page_size HAVING COUNT( * ) > 3	store_product
SELECT product.max_page_size FROM product GROUP BY product.max_page_size HAVING COUNT( * ) > 3	store_product
SELECT district.district_name , district.city_population FROM district WHERE district.city_population BETWEEN 200000 and 2000000	store_product
SELECT district.district_name , district.city_population FROM district WHERE district.city_population >= 200,000 AND district.city_population <= 2,000,000	store_product
SELECT district.district_name FROM district WHERE district.city_area > 10 OR district.city_population > 100000	store_product
SELECT district.district_name FROM district WHERE district.city_area > 10 OR district.city_population > 100000	store_product
SELECT district.district_name FROM district ORDER BY district.city_population DESC LIMIT 1	store_product
SELECT district.district_name FROM district ORDER BY district.city_population DESC LIMIT 1	store_product
SELECT district.district_name FROM district ORDER BY district.city_area ASC LIMIT 1	store_product
SELECT district.district_name FROM district ORDER BY district.city_area ASC LIMIT 1	store_product
SELECT SUM( district.city_population ) FROM district ORDER BY district.city_area DESC LIMIT 3	store_product
SELECT SUM( district.city_population ) FROM district ORDER BY district.city_area DESC LIMIT 3	store_product
SELECT store.type , COUNT( * ) FROM store GROUP BY store.type	store_product
SELECT store.type , COUNT( * ) FROM store GROUP BY store.type	store_product
SELECT store.store_name FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE district.district_name = 'Khanewal District'	store_product
SELECT store.store_name FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE district.district_name = 'Khanewal District'	store_product
SELECT store.store_name FROM store JOIN store_district ON store.store_id = store_district.store_id WHERE store_district.district_id = (SELECT district.district_id FROM district ORDER BY district.city_population DESC LIMIT 1)	store_product
SELECT store.store_name FROM store JOIN store_district ON store.store_id = store_district.store_id WHERE store_district.district_id = (SELECT district.district_id FROM district ORDER BY district.city_population DESC LIMIT 1)	store_product
SELECT district.headquartered_city FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE store.store_name = 'Blackville'	store_product
SELECT district.headquartered_city FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE store.store_name = 'Blackville'	store_product
SELECT district.headquartered_city , COUNT( * ) FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id GROUP BY district.headquartered_city	store_product
SELECT district.headquartered_city , COUNT( * ) FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id GROUP BY district.headquartered_city	store_product
SELECT district.headquartered_city FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id GROUP BY district.headquartered_city ORDER BY COUNT( * ) DESC LIMIT 1	store_product
SELECT district.headquartered_city FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id GROUP BY district.headquartered_city ORDER BY COUNT( * ) DESC LIMIT 1	store_product
SELECT AVG( product.pages_per_minute_color ) FROM product	store_product
SELECT AVG( product.pages_per_minute_color ) FROM product	store_product
SELECT product.product FROM product JOIN store_product ON product.product_id = store_product.product_id JOIN store ON store_product.store_id = store.store_id WHERE store.store_name = 'Miramichi'	store_product
SELECT product.product FROM product JOIN store_product ON product.product_id = store_product.product_id JOIN store ON store_product.store_id = store.store_id WHERE store.store_name = 'Miramichi'	store_product
SELECT product.product FROM product WHERE product.max_page_size = 'A4' AND product.pages_per_minute_color<5	store_product
SELECT product.product FROM product WHERE product.max_page_size = 'A4' AND product.pages_per_minute_color<5	store_product
SELECT product.product FROM product WHERE product.max_page_size = 'A4' OR product.pages_per_minute_color<5	store_product
SELECT product.product FROM product WHERE product.max_page_size = 'A4' OR product.pages_per_minute_color<5	store_product
SELECT product.product FROM product WHERE product.product LIKE '%Scanner%'	store_product
SELECT product.product FROM product WHERE product.product LIKE '%Scanner%'	store_product
SELECT product.max_page_size FROM product GROUP BY product.max_page_size ORDER BY COUNT( * ) DESC LIMIT 1	store_product
SELECT product.max_page_size FROM product GROUP BY product.max_page_size ORDER BY COUNT( * ) DESC LIMIT 1	store_product
SELECT product.product FROM product WHERE product.product != (SELECT product.max_page_size FROM product GROUP BY product.max_page_size ORDER BY COUNT( * ) DESC LIMIT 1)	store_product
SELECT product.product FROM product WHERE product.product != (SELECT product.max_page_size FROM product GROUP BY product.max_page_size ORDER BY COUNT( * ) DESC LIMIT 1)	store_product
SELECT SUM( district.city_population ) FROM district WHERE district.city_area > (SELECT AVG( district.city_area ) FROM district)	store_product
SELECT SUM( district.city_population ) FROM district WHERE district.city_area > (SELECT AVG( district.city_area ) FROM district)	store_product
SELECT district.district_name FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE store.type = 'city mall' INTERSECT SELECT district.district_name FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE store.type = 'village store'	store_product
SELECT district.district_name FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE store.type = 'mall' INTERSECT SELECT district.district_name FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE store.type = 'village store'	store_product
SELECT SUM( college.enr ) FROM college	soccer_2
SELECT SUM( college.enr ) FROM college	soccer_2
SELECT AVG( college.enr ) FROM college	soccer_2
SELECT AVG( college.enr ) FROM college	soccer_2
SELECT COUNT( * ) FROM college	soccer_2
SELECT COUNT( * ) FROM college	soccer_2
SELECT COUNT( * ) FROM player WHERE player.hs > 1000	soccer_2
SELECT COUNT( * ) FROM player WHERE player.hs > 1000	soccer_2
SELECT COUNT( * ) FROM college WHERE college.enr > 15000	soccer_2
SELECT COUNT( * ) FROM college WHERE college.enr > 15000	soccer_2
SELECT AVG( player.hs ) FROM player	soccer_2
SELECT AVG( player.hs ) FROM player	soccer_2
SELECT player.pname , player.hs FROM player WHERE player.hs<1500	soccer_2
SELECT player.pname , player.hs FROM player WHERE player.hs<1500	soccer_2
SELECT COUNT( DISTINCT tryout.cname ) FROM tryout	soccer_2
SELECT COUNT( DISTINCT tryout.cname ) FROM tryout	soccer_2
SELECT COUNT( DISTINCT tryout.ppos ) FROM tryout	soccer_2
SELECT COUNT( DISTINCT tryout.ppos ) FROM tryout	soccer_2
SELECT COUNT( * ) FROM tryout WHERE tryout.decision = 'yes'	soccer_2
SELECT COUNT( * ) FROM tryout WHERE tryout.decision = 'yes'	soccer_2
SELECT COUNT( * ) FROM tryout WHERE tryout.ppos = 'goalie'	soccer_2
SELECT COUNT( * ) FROM tryout WHERE tryout.ppos = 'goalie'	soccer_2
SELECT AVG( player.hs ) , MAX( player.hs ) , MIN( player.hs ) FROM player	soccer_2
SELECT AVG( player.hs ) , MAX( player.hs ) , MIN( player.hs ) FROM player	soccer_2
SELECT AVG( college.enr ) FROM college WHERE college.state = 'FL'	soccer_2
college , college	soccer_2
SELECT player.pname FROM player WHERE player.hs BETWEEN 500 and 1500	soccer_2
SELECT player.pname FROM player WHERE player.hs BETWEEN 500 and 1500	soccer_2
SELECT DISTINCT player.pname FROM player WHERE player.pname LIKE '%a%'	soccer_2
SELECT DISTINCT player.pname FROM player WHERE player.pname LIKE '%a%'	soccer_2
SELECT college.cname , college.enr FROM college WHERE college.enr > 10000 AND college.state = 'LA'	soccer_2
SELECT college.cname , college.enr FROM college WHERE college.state = 't' AND college.enr > 10000	soccer_2
SELECT * FROM college ORDER BY college.enr ASC	soccer_2
SELECT * FROM college ORDER BY college.enr ASC	soccer_2
SELECT college.cname FROM college WHERE college.enr > 18000 ORDER BY college.cname ASC	soccer_2
SELECT college.cname FROM college WHERE college.enr > 18000 ORDER BY college.cname ASC	soccer_2
SELECT player.pname FROM player WHERE player.ycard = 'yes' ORDER BY player.hs DESC	soccer_2
SELECT player.pname FROM player WHERE player.ycard = 'yes' ORDER BY player.hs DESC	soccer_2
SELECT DISTINCT tryout.cname FROM tryout ORDER BY tryout.cname ASC	soccer_2
SELECT DISTINCT tryout.cname FROM tryout ORDER BY tryout.cname ASC	soccer_2
SELECT tryout.ppos FROM tryout GROUP BY tryout.ppos ORDER BY COUNT( * ) DESC LIMIT 1	soccer_2
SELECT tryout.ppos FROM tryout GROUP BY tryout.ppos ORDER BY COUNT( * ) DESC LIMIT 1	soccer_2
SELECT COUNT( * ) , tryout.cname FROM tryout GROUP BY tryout.cname ORDER BY COUNT( * ) DESC	soccer_2
SELECT COUNT( * ) , tryout.cname FROM tryout GROUP BY tryout.cname ORDER BY COUNT( * ) DESC	soccer_2
SELECT MIN( player.hs ) , tryout.ppos FROM tryout JOIN player ON tryout.pid = player.pid GROUP BY tryout.ppos	soccer_2
SELECT MIN( player.hs ) , tryout.ppos FROM tryout JOIN player ON tryout.pid = player.pid GROUP BY tryout.ppos	soccer_2
SELECT college.cname FROM college ORDER BY college.enr DESC LIMIT 3	soccer_2
SELECT college.cname FROM college ORDER BY college.enr DESC LIMIT 3	soccer_2
SELECT college.cname , college.state , MIN( college.enr ) FROM college GROUP BY college.state	soccer_2
SELECT college.cname , college.state , MIN( college.enr ) FROM college GROUP BY college.state	soccer_2
SELECT DISTINCT college.state FROM college JOIN tryout ON college.cname = tryout.cname	soccer_2
SELECT DISTINCT college.state FROM college JOIN tryout ON college.cname = tryout.cname	soccer_2
SELECT DISTINCT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.decision = 'yes'	soccer_2
SELECT DISTINCT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.decision = 'yes'	soccer_2
SELECT player.pname , tryout.cname FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes'	soccer_2
SELECT player.pname , tryout.cname FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes'	soccer_2
SELECT player.pname FROM player JOIN tryout ON player.pid = tryout.pid ORDER BY player.pname ASC	soccer_2
SELECT player.pname FROM player JOIN tryout ON player.pid = tryout.pid ORDER BY player.pname ASC	soccer_2
SELECT player.pname , player.hs FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes'	soccer_2
SELECT player.pname , player.hs FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'striker'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'striker'	soccer_2
SELECT player.pname FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes' AND tryout.ppos = 'striker'	soccer_2
SELECT player.pname FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes' AND tryout.ppos = 'striker'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname JOIN player ON tryout.pid = player.pid WHERE player.pname = 'Charles'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname JOIN player ON tryout.pid = player.pid WHERE player.pname = 'Charles'	soccer_2
SELECT AVG( player.hs ) , MAX( player.hs ) FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes'	soccer_2
SELECT AVG( player.hs ) , MAX( player.hs ) FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes'	soccer_2
SELECT AVG( player.hs ) FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'no'	soccer_2
SELECT AVG( player.hs ) FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'no'	soccer_2
SELECT MAX( player.hs ) , tryout.ppos FROM player JOIN tryout ON player.pid = tryout.pid WHERE player.hs > 1000 GROUP BY tryout.ppos	soccer_2
SELECT MAX( player.hs ) , tryout.ppos FROM player JOIN tryout ON player.pid = tryout.pid WHERE player.hs > 1000 GROUP BY tryout.ppos	soccer_2
SELECT tryout.cname FROM tryout JOIN player ON tryout.pid = player.pid WHERE player.pname LIKE '%D%'	soccer_2
SELECT tryout.cname FROM tryout JOIN player ON tryout.pid = player.pid WHERE player.pname LIKE '%D%'	soccer_2
SELECT tryout.cname FROM tryout WHERE tryout.decision = 'yes' AND tryout.ppos = 'goalie'	soccer_2
SELECT tryout.cname FROM tryout WHERE tryout.decision = 'yes' AND tryout.ppos = 'goalie'	soccer_2
SELECT player.pname FROM tryout JOIN player ON tryout.pid = player.pid WHERE tryout.cname = (SELECT college.cname FROM college ORDER BY college.enr DESC LIMIT 1)	soccer_2
SELECT player.pname FROM tryout JOIN player ON tryout.pid = player.pid WHERE tryout.cname = (SELECT college.cname FROM college ORDER BY college.enr DESC LIMIT 1)	soccer_2
SELECT DISTINCT college.state , college.enr FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.decision = 'yes'	soccer_2
SELECT DISTINCT college.state , college.enr FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.decision = 'yes'	soccer_2
SELECT college.cname FROM college WHERE college.enr > 15000 AND college.state = 'LA' UNION SELECT college.cname FROM college WHERE college.enr<13000 AND college.state = 'AZ'	soccer_2
SELECT college.cname FROM college WHERE college.enr<13,000 AND college.state = 'AZ' UNION SELECT college.cname FROM college WHERE college.enr > 15,000 AND college.state = 'LA'	soccer_2
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalie' INTERSECT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid'	soccer_2
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goal' INTERSECT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'goalie' INTERSECT SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'mid'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'goalie' INTERSECT SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'mid'	soccer_2
college , tryout	soccer_2
SELECT COUNT( * ) FROM tryout WHERE tryout.ppos = 'yes' AND tryout.ppos = 'mid'	soccer_2
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid' EXCEPT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalie'	soccer_2
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid' EXCEPT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalies'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'mid' EXCEPT SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'goalie'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'mid' EXCEPT SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'goalies'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'mid' EXCEPT SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'goalie'	soccer_2
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'mid'	soccer_2
SELECT DISTINCT college.state FROM college WHERE college.enr<(SELECT MAX( college.enr ) FROM college)	soccer_2
SELECT DISTINCT college.state FROM college WHERE college.enr<(SELECT MAX( college.enr ) FROM college)	soccer_2
SELECT DISTINCT college.cname FROM college WHERE college.enr > (SELECT MIN( college.enr ) FROM college WHERE college.state = 'FL')	soccer_2
college , tryout	soccer_2
SELECT college.cname FROM college WHERE college.enr > (SELECT MAX( college.enr ) FROM college WHERE college.state = 'FL')	soccer_2
SELECT college.cname FROM college WHERE college.enr > (SELECT MAX( college.enr ) FROM college WHERE college.state = 't')	soccer_2
SELECT SUM( college.enr ) FROM college WHERE college.cname NOT IN (SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalie')	soccer_2
SELECT SUM( college.enr ) FROM college WHERE college.cname NOT IN (SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalies')	soccer_2
SELECT COUNT( DISTINCT college.state ) FROM college WHERE college.enr > (SELECT AVG( college.enr ) FROM college)	soccer_2
SELECT COUNT( DISTINCT college.state ) FROM college WHERE college.enr > (SELECT AVG( college.enr ) FROM college)	soccer_2
SELECT COUNT( DISTINCT college.state ) FROM college WHERE college.enr<(SELECT AVG( college.enr ) FROM college)	soccer_2
SELECT COUNT( DISTINCT college.state ) FROM college WHERE college.enr<(SELECT AVG( college.enr ) FROM college)	soccer_2
SELECT COUNT( * ) FROM device	device
SELECT COUNT( * ) FROM device	device
SELECT device.carrier FROM device ORDER BY device.carrier ASC	device
SELECT device.carrier FROM device ORDER BY device.carrier ASC	device
SELECT device.carrier FROM device WHERE device.software_platform != 'Android'	device
SELECT device.carrier FROM device WHERE device.software_platform != 'Android'	device
SELECT shop.shop_name FROM shop ORDER BY shop.open_year ASC	device
SELECT shop.shop_name FROM shop ORDER BY shop.open_year ASC	device
SELECT AVG( stock.quantity ) FROM stock	device
SELECT AVG( stock.quantity ) FROM stock	device
SELECT shop.shop_name , shop.location FROM shop ORDER BY shop.shop_name ASC	device
SELECT shop.shop_name , shop.location FROM shop ORDER BY shop.shop_name ASC	device
SELECT COUNT( DISTINCT device.software_platform ) FROM device	device
SELECT COUNT( DISTINCT device.software_platform ) FROM device	device
SELECT shop.open_date , shop.open_year FROM shop WHERE shop.shop_name = 'Apple'	device
SELECT shop.open_date , shop.open_year FROM shop WHERE shop.shop_name = 'Apple'	device
SELECT shop.shop_name FROM shop ORDER BY shop.open_year DESC LIMIT 1	device
SELECT shop.shop_name FROM shop ORDER BY shop.open_year DESC LIMIT 1	device
SELECT shop.shop_name , device.carrier FROM stock JOIN device ON stock.device_id = device.device_id JOIN shop ON stock.shop_id = shop.shop_id	device
SELECT shop.shop_name , device.carrier FROM stock JOIN device ON stock.device_id = device.device_id JOIN shop ON stock.shop_id = shop.shop_id	device
SELECT shop.shop_name FROM stock JOIN shop ON stock.shop_id = shop.shop_id GROUP BY stock.shop_id HAVING COUNT( * ) > 1	device
SELECT shop.shop_name FROM stock JOIN shop ON stock.shop_id = shop.shop_id GROUP BY stock.shop_id HAVING COUNT( * ) > 1	device
SELECT shop.shop_name FROM stock JOIN shop ON stock.shop_id = shop.shop_id GROUP BY stock.shop_id ORDER BY COUNT( * ) DESC LIMIT 1	device
SELECT shop.shop_name FROM stock JOIN shop ON stock.shop_id = shop.shop_id GROUP BY stock.shop_id ORDER BY COUNT( * ) DESC LIMIT 1	device
SELECT shop.shop_name FROM stock JOIN shop ON stock.shop_id = shop.shop_id GROUP BY stock.shop_id ORDER BY SUM( stock.quantity ) DESC LIMIT 1	device
SELECT shop.shop_name FROM stock JOIN shop ON stock.shop_id = shop.shop_id GROUP BY stock.shop_id ORDER BY SUM( stock.quantity ) DESC LIMIT 1	device
SELECT device.software_platform , COUNT( * ) FROM device GROUP BY device.software_platform	device
SELECT device.software_platform , COUNT( * ) FROM device GROUP BY device.software_platform	device
SELECT device.software_platform FROM device GROUP BY device.software_platform ORDER BY COUNT( * ) DESC	device
SELECT device.software_platform FROM device GROUP BY device.software_platform ORDER BY COUNT( * ) DESC	device
SELECT device.software_platform FROM device GROUP BY device.software_platform ORDER BY COUNT( * ) DESC LIMIT 1	device
SELECT device.software_platform FROM device GROUP BY device.software_platform ORDER BY COUNT( * ) DESC LIMIT 1	device
SELECT shop.shop_name FROM shop WHERE shop.shop_id NOT IN (SELECT stock.shop_id FROM stock)	device
SELECT shop.shop_name FROM shop WHERE shop.shop_id NOT IN (SELECT stock.shop_id FROM stock)	device
SELECT shop.location FROM shop WHERE shop.open_year > 2012 INTERSECT SELECT shop.location FROM shop WHERE shop.open_year<2008	device
SELECT shop.location FROM shop WHERE shop.open_year > 2012 INTERSECT SELECT shop.location FROM shop WHERE shop.open_year<2008	device
SELECT device.carrier FROM device WHERE device.device_id NOT IN (SELECT stock.device_id FROM stock)	device
SELECT device.carrier FROM device WHERE device.device_id NOT IN (SELECT stock.device_id FROM stock)	device
SELECT device.carrier FROM stock JOIN device ON stock.device_id = device.device_id GROUP BY stock.device_id HAVING COUNT( * ) > 1	device
SELECT device.carrier FROM stock JOIN device ON stock.device_id = device.device_id GROUP BY stock.device_id HAVING COUNT( * ) > 1	device
SELECT COUNT( * ) FROM bookings	cre_Drama_Workshop_Groups
SELECT COUNT( * ) FROM bookings	cre_Drama_Workshop_Groups
SELECT bookings.order_date FROM bookings	cre_Drama_Workshop_Groups
SELECT bookings.order_date FROM bookings	cre_Drama_Workshop_Groups
SELECT bookings.planned_delivery_date , bookings.actual_delivery_date FROM bookings	cre_Drama_Workshop_Groups
SELECT bookings.planned_delivery_date , bookings.actual_delivery_date FROM bookings	cre_Drama_Workshop_Groups
SELECT COUNT( * ) FROM customers	cre_Drama_Workshop_Groups
SELECT COUNT( * ) FROM customers	cre_Drama_Workshop_Groups
SELECT customers.customer_phone , customers.customer_email_address FROM customers WHERE customers.customer_name = 'Harold'	cre_Drama_Workshop_Groups
SELECT customers.customer_phone , customers.customer_email_address FROM customers WHERE customers.customer_name = 'Harold'	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_name FROM drama_workshop_groups	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_name FROM drama_workshop_groups	cre_Drama_Workshop_Groups
SELECT MIN( invoices.order_quantity ) , AVG( invoices.order_quantity ) , MAX( invoices.order_quantity ) FROM invoices	cre_Drama_Workshop_Groups
SELECT MIN( invoices.order_item_id ) , AVG( invoices.order_item_id ) , MAX( invoices.order_item_id ) FROM invoices	cre_Drama_Workshop_Groups
SELECT DISTINCT invoices.payment_method_code FROM invoices	cre_Drama_Workshop_Groups
SELECT DISTINCT invoices.payment_method_code FROM invoices	cre_Drama_Workshop_Groups
SELECT marketing_regions.marketing_region_descriptrion FROM marketing_regions WHERE marketing_regions.marketing_region_name = 'China'	cre_Drama_Workshop_Groups
SELECT marketing_regions.marketing_region_descriptrion FROM marketing_regions WHERE marketing_regions.marketing_region_name = 'China'	cre_Drama_Workshop_Groups
SELECT DISTINCT products.product_description FROM products WHERE products.product_description > (SELECT AVG( products.product_description ) FROM products)	cre_Drama_Workshop_Groups
SELECT DISTINCT products.other_product_service_details FROM products WHERE products.other_product_service_details > (SELECT AVG( products.other_product_service_details ) FROM products)	cre_Drama_Workshop_Groups
SELECT products.product_description FROM products ORDER BY products.product_description DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT products.product_description FROM products ORDER BY products.product_description DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT products.product_description FROM products ORDER BY products.product_description ASC	cre_Drama_Workshop_Groups
SELECT products.other_product_service_details FROM products ORDER BY products.other_product_service_details ASC	cre_Drama_Workshop_Groups
SELECT performers.customer_email_address FROM performers WHERE performers.customer_name = 'Ashley'	cre_Drama_Workshop_Groups
SELECT performers.customer_email_address FROM performers WHERE performers.customer_email_address = 'Ashley'	cre_Drama_Workshop_Groups
SELECT invoices.payment_method_code , COUNT( * ) FROM invoices GROUP BY invoices.payment_method_code	cre_Drama_Workshop_Groups
SELECT invoices.payment_method_code , COUNT( * ) FROM invoices GROUP BY invoices.payment_method_code	cre_Drama_Workshop_Groups
SELECT invoices.payment_method_code FROM invoices GROUP BY invoices.payment_method_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT invoices.payment_method_code FROM invoices GROUP BY invoices.payment_method_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT addresses.city_town FROM addresses JOIN stores ON addresses.address_id = stores.address_id WHERE stores.store_email_address = 'FJA Filming'	cre_Drama_Workshop_Groups
SELECT addresses.city_town FROM addresses JOIN stores ON addresses.address_id = stores.address_id WHERE stores.store_email_address = 'FJA Filming'	cre_Drama_Workshop_Groups
SELECT addresses.state_county FROM addresses JOIN stores ON addresses.address_id = stores.address_id WHERE stores.marketing_region_code = 'CA'	cre_Drama_Workshop_Groups
SELECT addresses.state_county FROM addresses JOIN stores ON addresses.address_id = stores.address_id WHERE stores.marketing_region_code = 'CA'	cre_Drama_Workshop_Groups
SELECT marketing_regions.marketing_region_descriptrion FROM marketing_regions JOIN stores ON marketing_regions.marketing_region_code = stores.marketing_region_code WHERE stores.store_name = 'Rob Dinning'	cre_Drama_Workshop_Groups
SELECT marketing_regions.marketing_region_descriptrion FROM marketing_regions JOIN stores ON marketing_regions.marketing_region_code = stores.marketing_region_code WHERE stores.store_name = 'Rob Dinning'	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code WHERE services.product_price > 100	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code WHERE services.product_price > 100	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description , services.service_type_code , COUNT( * ) FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code GROUP BY services.service_type_code	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description , services.service_type_code , COUNT( * ) FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code GROUP BY services.service_type_code	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description , ref_service_types.service_type_code FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code GROUP BY ref_service_types.service_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description , ref_service_types.service_type_code FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code GROUP BY ref_service_types.service_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_phone , drama_workshop_groups.store_email_address FROM drama_workshop_groups JOIN services ON drama_workshop_groups.workshop_group_id = services.workshop_group_id	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_phone , drama_workshop_groups.store_email_address FROM drama_workshop_groups JOIN services ON drama_workshop_groups.workshop_group_id = services.workshop_group_id	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_phone , drama_workshop_groups.store_email_address FROM drama_workshop_groups JOIN services ON drama_workshop_groups.workshop_group_id = services.workshop_group_id WHERE services.product_name = 'film'	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_phone , drama_workshop_groups.store_email_address FROM drama_workshop_groups JOIN services ON drama_workshop_groups.workshop_group_id = services.workshop_group_id WHERE services.product_name = 'film'	cre_Drama_Workshop_Groups
SELECT products.product_description , AVG( products.product_price ) FROM products GROUP BY products.product_description	cre_Drama_Workshop_Groups
SELECT products.product_name , AVG( products.product_price ) FROM products GROUP BY products.product_name	cre_Drama_Workshop_Groups
SELECT products.product_description FROM products GROUP BY products.product_description HAVING AVG( products.product_price )<1000000	cre_Drama_Workshop_Groups
SELECT products.product_description FROM products GROUP BY products.product_description HAVING AVG( products.product_price )<1000000	cre_Drama_Workshop_Groups
SELECT SUM( order_items.order_quantity ) FROM order_items JOIN products ON order_items.product_id = products.product_id WHERE products.product_name = 'photo'	cre_Drama_Workshop_Groups
SELECT SUM( order_items.order_quantity ) FROM order_items JOIN products ON order_items.product_id = products.product_id WHERE products.product_name = 'photo'	cre_Drama_Workshop_Groups
SELECT order_items.other_item_details FROM order_items JOIN products ON order_items.product_id = products.product_id WHERE products.product_price > 2000	cre_Drama_Workshop_Groups
SELECT order_items.other_item_details FROM order_items JOIN products ON order_items.product_id = products.product_id WHERE products.product_price > 2000	cre_Drama_Workshop_Groups
SELECT customer_orders.actual_delivery_date FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE order_items.order_quantity = 1	cre_Drama_Workshop_Groups
SELECT customer_orders.actual_delivery_date FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE order_items.order_quantity = 1	cre_Drama_Workshop_Groups
SELECT customer_orders.order_date FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_price > 1000	cre_Drama_Workshop_Groups
SELECT customer_orders.order_date FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_price > 1000	cre_Drama_Workshop_Groups
SELECT COUNT( DISTINCT drama_workshop_groups.currency_code ) FROM drama_workshop_groups	cre_Drama_Workshop_Groups
SELECT COUNT( DISTINCT drama_workshop_groups.currency_code ) FROM drama_workshop_groups	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_name FROM addresses JOIN drama_workshop_groups ON addresses.address_id = drama_workshop_groups.address_id WHERE addresses.city_town = 'Feliciaberg'	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_name FROM addresses JOIN drama_workshop_groups ON addresses.address_id = drama_workshop_groups.address_id WHERE addresses.city_town = 'Feliciaberg'	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_email_address FROM addresses JOIN drama_workshop_groups ON addresses.address_id = drama_workshop_groups.address_id WHERE addresses.state_county = 'Alaska'	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_email_address FROM addresses JOIN drama_workshop_groups ON addresses.address_id = drama_workshop_groups.address_id WHERE addresses.state_county = 'Alaska'	cre_Drama_Workshop_Groups
SELECT addresses.city_town , COUNT( * ) FROM addresses JOIN drama_workshop_groups ON addresses.address_id = drama_workshop_groups.address_id GROUP BY addresses.city_town	cre_Drama_Workshop_Groups
SELECT addresses.city_town , COUNT( * ) FROM addresses JOIN drama_workshop_groups ON addresses.address_id = drama_workshop_groups.address_id GROUP BY addresses.city_town	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.marketing_region_code FROM drama_workshop_groups GROUP BY drama_workshop_groups.marketing_region_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.marketing_region_code FROM drama_workshop_groups GROUP BY drama_workshop_groups.marketing_region_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT addresses.city_town FROM addresses JOIN performers ON addresses.address_id = performers.address_id EXCEPT SELECT addresses.city_town FROM addresses JOIN performers ON addresses.address_id = performers.address_id	cre_Drama_Workshop_Groups
SELECT addresses.city_town FROM addresses JOIN performers ON addresses.address_id = performers.address_id EXCEPT SELECT addresses.city_town FROM addresses JOIN performers ON addresses.address_id = performers.address_id	cre_Drama_Workshop_Groups
SELECT bookings.status_code FROM bookings GROUP BY bookings.status_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT bookings.status_code FROM bookings GROUP BY bookings.status_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_name FROM bookings JOIN drama_workshop_groups ON bookings.workshop_group_id = drama_workshop_groups.workshop_group_id WHERE bookings.status_code = 'stop'	cre_Drama_Workshop_Groups
SELECT drama_workshop_groups.store_name FROM bookings JOIN drama_workshop_groups ON bookings.workshop_group_id = drama_workshop_groups.workshop_group_id WHERE bookings.status_code = 'stop'	cre_Drama_Workshop_Groups
SELECT clients.customer_name FROM clients EXCEPT SELECT clients.customer_name FROM bookings JOIN clients ON bookings.customer_id = clients.client_id	cre_Drama_Workshop_Groups
SELECT clients.customer_name FROM clients EXCEPT SELECT clients.customer_name FROM bookings JOIN clients ON bookings.customer_id = clients.client_id	cre_Drama_Workshop_Groups
SELECT AVG( invoices.order_item_id ) FROM invoices WHERE invoices.payment_method_code = 'MasterCard'	cre_Drama_Workshop_Groups
SELECT AVG( invoices.order_item_id ) FROM invoices WHERE invoices.payment_method_code = 'MasterCard'	cre_Drama_Workshop_Groups
SELECT invoices.product_id FROM invoices GROUP BY invoices.product_id ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT invoices.product_id FROM invoices GROUP BY invoices.product_id ORDER BY COUNT( * ) DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code WHERE services.product_name = 'photo' INTERSECT SELECT ref_service_types.service_type_description FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code WHERE services.product_name = 'film'	cre_Drama_Workshop_Groups
SELECT ref_service_types.service_type_description FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code WHERE services.product_name = 'photo' INTERSECT SELECT ref_service_types.service_type_description FROM ref_service_types JOIN services ON ref_service_types.service_type_code = services.service_type_code WHERE services.product_name = 'film'	cre_Drama_Workshop_Groups
SELECT COUNT( * ) FROM band	music_2
SELECT COUNT( * ) FROM band	music_2
SELECT DISTINCT albums.label FROM albums	music_2
SELECT DISTINCT albums.label FROM albums	music_2
SELECT * FROM albums WHERE albums.year = 2012	music_2
SELECT * FROM albums WHERE albums.year = 2012	music_2
SELECT DISTINCT performance.stageposition FROM performance JOIN band ON performance.bandmate = band.id WHERE band.firstname = 'Solveig'	music_2
SELECT DISTINCT performance.stageposition FROM performance JOIN band ON performance.bandmate = band.id WHERE band.firstname = 'Solveig'	music_2
SELECT COUNT( * ) FROM songs	music_2
SELECT COUNT( * ) FROM songs	music_2
SELECT songs.title FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE band.lastname = 'Heilo'	music_2
SELECT songs.title FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE band.lastname = 'Heilo'	music_2
SELECT COUNT( * ) FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Flash'	music_2
SELECT COUNT( * ) FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Flash'	music_2
SELECT songs.title FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE band.firstname = 'Marianne'	music_2
SELECT songs.title FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE band.firstname = 'Marianne'	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Badlands'	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Badlands'	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Badlands' AND performance.stageposition = 'back'	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Badlands' AND performance.stageposition = 'back'	music_2
SELECT COUNT( DISTINCT albums.label ) FROM albums	music_2
SELECT COUNT( DISTINCT albums.label ) FROM albums	music_2
SELECT albums.label FROM albums GROUP BY albums.label ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT albums.label FROM albums GROUP BY albums.label ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid GROUP BY band.lastname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid GROUP BY band.lastname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT band.lastname FROM performance JOIN band ON performance.bandmate = band.id WHERE performance.stageposition = 'back' GROUP BY band.lastname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT band.lastname FROM performance JOIN band ON performance.bandmate = band.id WHERE performance.stageposition = 'back' GROUP BY band.lastname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT songs.title FROM songs WHERE songs.title LIKE '%the%'	music_2
SELECT songs.title FROM songs WHERE songs.title LIKE '%the%'	music_2
SELECT DISTINCT instruments.instrument FROM instruments	music_2
SELECT DISTINCT instruments.instrument FROM instruments	music_2
SELECT instruments.instrument FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid JOIN songs ON instruments.songid = songs.songid JOIN instruments ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo' AND songs.title = 'Le Pop'	music_2
SELECT instruments.instrument FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid JOIN songs ON instruments.songid = songs.songid JOIN instruments ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo' AND songs.title = 'Le Pop'	music_2
SELECT instruments.instrument FROM instruments GROUP BY instruments.instrument ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT instruments.instrument FROM instruments GROUP BY instruments.instrument ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT COUNT( * ) FROM instruments WHERE instruments.instrument = 'drums'	music_2
SELECT COUNT( * ) FROM instruments WHERE instruments.instrument = 'drums'	music_2
SELECT instruments.instrument FROM instruments JOIN songs ON instruments.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT instruments.instrument FROM instruments JOIN songs ON instruments.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT COUNT( DISTINCT instruments.instrument ) FROM instruments JOIN songs ON instruments.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT COUNT( DISTINCT instruments.instrument ) FROM instruments JOIN songs ON instruments.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT COUNT( DISTINCT instruments.instrument ) FROM instruments JOIN band ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo'	music_2
SELECT COUNT( DISTINCT instruments.instrument ) FROM instruments JOIN band ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo'	music_2
SELECT instruments.instrument FROM instruments JOIN band ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo'	music_2
SELECT instruments.instrument FROM instruments JOIN band ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo'	music_2
SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid GROUP BY vocals.songid ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid GROUP BY vocals.songid ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id WHERE band.lastname = 'Heilo' GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id WHERE band.lastname = 'Heilo' GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT COUNT( * ) FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Demon Kitty Rag'	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Demon Kitty Rag'	music_2
SELECT COUNT( DISTINCT songs.title ) FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'lead'	music_2
SELECT COUNT( DISTINCT songs.title ) FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'lead'	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid JOIN band ON vocals.bandmate = band.id WHERE band.firstname = 'Solveig' AND songs.title = 'A Bar in Amsterdam'	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid JOIN band ON vocals.bandmate = band.id WHERE band.firstname = 'Solveig' AND songs.title = 'A Bar in Amsterdam'	music_2
SELECT DISTINCT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid EXCEPT SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'lead'	music_2
SELECT DISTINCT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid EXCEPT SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'lead'	music_2
SELECT DISTINCT vocals.type FROM vocals	music_2
SELECT DISTINCT vocals.type FROM vocals	music_2
SELECT * FROM albums WHERE albums.year = 2010	music_2
SELECT * FROM albums WHERE albums.year = 2010	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Le Pop'	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Le Pop'	music_2
SELECT band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid GROUP BY band.lastname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid GROUP BY band.lastname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT instruments.instrument FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid JOIN songs ON instruments.songid = songs.songid JOIN instruments ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo' AND songs.title = 'Badlands'	music_2
SELECT instruments.instrument FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid JOIN songs ON instruments.songid = songs.songid JOIN instruments ON instruments.bandmateid = band.id WHERE band.lastname = 'Heilo' AND songs.title = 'Badlands'	music_2
SELECT COUNT( DISTINCT instruments.instrument ) FROM instruments JOIN songs ON instruments.songid = songs.songid WHERE songs.title = 'Badlands'	music_2
SELECT COUNT( DISTINCT instruments.instrument ) FROM instruments JOIN songs ON instruments.songid = songs.songid WHERE songs.title = 'Badlands'	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Badlands'	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Badlands'	music_2
SELECT COUNT( * ) FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT COUNT( * ) FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Le Pop'	music_2
SELECT COUNT( DISTINCT songs.title ) FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'shared'	music_2
SELECT COUNT( DISTINCT songs.title ) FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'shared'	music_2
SELECT DISTINCT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid EXCEPT SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'back'	music_2
SELECT DISTINCT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid EXCEPT SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'back'	music_2
SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id WHERE band.firstname = 'Solveig' GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id WHERE band.firstname = 'Solveig' GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid JOIN band ON vocals.bandmate = band.id WHERE band.lastname = 'Heilo' AND songs.title = 'Der Kapitan'	music_2
SELECT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid JOIN band ON vocals.bandmate = band.id WHERE band.lastname = 'Heilo' AND songs.title = 'Der Kapitan'	music_2
SELECT band.firstname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid GROUP BY band.firstname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT band.firstname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid GROUP BY band.firstname ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id WHERE band.firstname = 'Marianne' GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id WHERE band.firstname = 'Marianne' GROUP BY vocals.type ORDER BY COUNT( * ) DESC LIMIT 1	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Der Kapitan' AND performance.stageposition = 'back'	music_2
SELECT band.firstname , band.lastname FROM performance JOIN band ON performance.bandmate = band.id JOIN performance ON songs.songid = performance.songid WHERE songs.title = 'Der Kapitan' AND performance.stageposition = 'back'	music_2
SELECT DISTINCT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid EXCEPT SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'back'	music_2
SELECT DISTINCT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid EXCEPT SELECT songs.title FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE vocals.type = 'back'	music_2
SELECT songs.title FROM albums JOIN tracklists ON albums.aid = tracklists.albumid JOIN songs ON tracklists.songid = songs.songid WHERE albums.title = 'A Kiss Before You Go: Live in Hamburg'	music_2
SELECT songs.title FROM albums JOIN tracklists ON albums.aid = tracklists.albumid JOIN songs ON tracklists.songid = songs.songid WHERE albums.title = 'A Kiss Before You Go: Live in Hamburg'	music_2
SELECT songs.title FROM albums JOIN tracklists ON albums.aid = tracklists.albumid JOIN songs ON tracklists.songid = songs.songid WHERE albums.label = 'Universal Music Group'	music_2
SELECT songs.title FROM albums JOIN tracklists ON albums.aid = tracklists.albumid JOIN songs ON tracklists.songid = songs.songid WHERE albums.label = 'Universal Music Group'	music_2
SELECT COUNT( DISTINCT songs.title ) FROM albums JOIN tracklists ON albums.aid = tracklists.albumid JOIN songs ON tracklists.songid = songs.songid WHERE albums.type = 'studio'	music_2
SELECT COUNT( DISTINCT songs.title ) FROM albums JOIN tracklists ON albums.aid = tracklists.albumid JOIN songs ON tracklists.songid = songs.songid WHERE albums.type = 'studio'	music_2
SELECT manufacturers.founder FROM manufacturers WHERE manufacturers.name = 'Sony'	manufactory_1
SELECT manufacturers.founder FROM manufacturers WHERE manufacturers.name = 'Sony'	manufactory_1
SELECT manufacturers.headquarter FROM manufacturers WHERE manufacturers.founder = 'James'	manufactory_1
SELECT manufacturers.headquarter FROM manufacturers WHERE manufacturers.founder = 'James'	manufactory_1
SELECT manufacturers.name , manufacturers.headquarter FROM manufacturers ORDER BY manufacturers.revenue DESC	manufactory_1
SELECT manufacturers.name , manufacturers.headquarter FROM manufacturers ORDER BY manufacturers.revenue DESC	manufactory_1
SELECT AVG( manufacturers.revenue ) , MAX( manufacturers.revenue ) , SUM( manufacturers.revenue ) FROM manufacturers	manufactory_1
SELECT AVG( manufacturers.revenue ) , MAX( manufacturers.revenue ) , SUM( manufacturers.revenue ) FROM manufacturers	manufactory_1
SELECT COUNT( * ) FROM manufacturers WHERE manufacturers.founder = 'Andy'	manufactory_1
SELECT COUNT( * ) FROM manufacturers WHERE manufacturers.founder = 'Andy'	manufactory_1
SELECT SUM( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Austin'	manufactory_1
SELECT SUM( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Austin'	manufactory_1
SELECT DISTINCT manufacturers.headquarter FROM manufacturers	manufactory_1
SELECT DISTINCT manufacturers.headquarter FROM manufacturers	manufactory_1
SELECT COUNT( * ) FROM manufacturers WHERE manufacturers.headquarter = 'Tokyo' OR manufacturers.headquarter = 'Beijing'	manufactory_1
SELECT COUNT( * ) FROM manufacturers WHERE manufacturers.headquarter = 'Tokyo' OR manufacturers.headquarter = 'Beijing'	manufactory_1
SELECT manufacturers.founder FROM manufacturers WHERE manufacturers.name LIKE '%S%'	manufactory_1
SELECT manufacturers.founder FROM manufacturers WHERE manufacturers.name LIKE '%S%'	manufactory_1
SELECT manufacturers.name FROM manufacturers WHERE manufacturers.revenue BETWEEN 100 and 150	manufactory_1
SELECT manufacturers.name FROM manufacturers WHERE manufacturers.revenue BETWEEN 100 and 150	manufactory_1
SELECT SUM( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Tokyo' OR manufacturers.headquarter = 'Taiwan'	manufactory_1
SELECT SUM( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Tokyo' OR manufacturers.headquarter = 'Taiwan'	manufactory_1
SELECT products.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE manufacturers.name = 'Creative Labs' INTERSECT SELECT products.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE manufacturers.name = 'Sony'	manufactory_1
SELECT products.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE manufacturers.name = 'Creative Labs' INTERSECT SELECT products.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE manufacturers.name = 'Sony'	manufactory_1
SELECT manufacturers.name , manufacturers.headquarter , manufacturers.founder FROM manufacturers ORDER BY manufacturers.revenue DESC LIMIT 1	manufactory_1
SELECT manufacturers.name , manufacturers.headquarter , manufacturers.founder FROM manufacturers ORDER BY manufacturers.revenue DESC LIMIT 1	manufactory_1
SELECT manufacturers.name , manufacturers.headquarter , manufacturers.revenue FROM manufacturers ORDER BY manufacturers.revenue DESC	manufactory_1
SELECT manufacturers.name , manufacturers.headquarter , manufacturers.revenue FROM manufacturers ORDER BY manufacturers.revenue DESC	manufactory_1
SELECT manufacturers.name FROM manufacturers WHERE manufacturers.revenue > (SELECT AVG( manufacturers.revenue ) FROM manufacturers)	manufactory_1
SELECT manufacturers.name FROM manufacturers WHERE manufacturers.revenue > (SELECT AVG( manufacturers.revenue ) FROM manufacturers)	manufactory_1
SELECT manufacturers.name FROM manufacturers WHERE manufacturers.revenue<(SELECT MIN( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Austin')	manufactory_1
SELECT manufacturers.name FROM manufacturers WHERE manufacturers.revenue<(SELECT MIN( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Austin')	manufactory_1
SELECT SUM( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.revenue > (SELECT MIN( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Austin')	manufactory_1
SELECT SUM( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.revenue > (SELECT MIN( manufacturers.revenue ) FROM manufacturers WHERE manufacturers.headquarter = 'Austin')	manufactory_1
SELECT SUM( manufacturers.revenue ) , manufacturers.founder FROM manufacturers GROUP BY manufacturers.founder	manufactory_1
SELECT SUM( manufacturers.revenue ) , manufacturers.founder FROM manufacturers GROUP BY manufacturers.founder	manufactory_1
SELECT manufacturers.name , MAX( manufacturers.revenue ) , manufacturers.headquarter FROM manufacturers GROUP BY manufacturers.headquarter	manufactory_1
SELECT manufacturers.name , MAX( manufacturers.revenue ) , manufacturers.headquarter FROM manufacturers GROUP BY manufacturers.headquarter	manufactory_1
SELECT SUM( manufacturers.revenue ) , manufacturers.name FROM manufacturers GROUP BY manufacturers.name	manufactory_1
SELECT SUM( manufacturers.revenue ) , manufacturers.name FROM manufacturers GROUP BY manufacturers.name	manufactory_1
SELECT AVG( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT AVG( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT COUNT( DISTINCT products.name ) , manufacturers.headquarter FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.headquarter	manufactory_1
SELECT COUNT( DISTINCT products.name ) , manufacturers.headquarter FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.headquarter	manufactory_1
SELECT COUNT( DISTINCT products.name ) FROM products WHERE products.name NOT IN (SELECT products.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE manufacturers.name = 'Sony')	manufactory_1
SELECT COUNT( DISTINCT products.name ) FROM products WHERE products.name NOT IN (SELECT products.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE manufacturers.name = 'Sony')	manufactory_1
SELECT manufacturers.name FROM manufacturers EXCEPT SELECT manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE products.name = 'DVD drive'	manufactory_1
SELECT manufacturers.name FROM manufacturers EXCEPT SELECT manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code WHERE products.name = 'DVD drives'	manufactory_1
SELECT COUNT( * ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT COUNT( * ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT products.name FROM products	manufactory_1
SELECT products.name FROM products	manufactory_1
SELECT products.name , products.price FROM products	manufactory_1
SELECT products.name , products.price FROM products	manufactory_1
SELECT products.name FROM products WHERE products.price <= 200	manufactory_1
SELECT products.name FROM products WHERE products.price <= 200	manufactory_1
SELECT * FROM products WHERE products.price BETWEEN 60 and 120	manufactory_1
SELECT * FROM products WHERE products.price BETWEEN 60 and 120	manufactory_1
SELECT AVG( products.price ) FROM products	manufactory_1
SELECT AVG( products.price ) FROM products	manufactory_1
SELECT AVG( products.price ) FROM products WHERE products.manufacturer = 2	manufactory_1
SELECT AVG( products.price ) FROM products WHERE products.manufacturer = 2	manufactory_1
SELECT COUNT( * ) FROM products WHERE products.price >= 180	manufactory_1
SELECT COUNT( * ) FROM products WHERE products.price >= 180	manufactory_1
SELECT products.name , products.price FROM products WHERE products.price >= 180 ORDER BY products.price , products.name ASC	manufactory_1
SELECT products.name , products.price FROM products WHERE products.price >= 180 ORDER BY products.price , products.name ASC	manufactory_1
SELECT * FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code	manufactory_1
SELECT * FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code	manufactory_1
SELECT AVG( products.price ) , products.manufacturer FROM products GROUP BY products.manufacturer	manufactory_1
SELECT AVG( products.price ) , products.manufacturer FROM products GROUP BY products.manufacturer	manufactory_1
SELECT AVG( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT AVG( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT AVG( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name HAVING AVG( products.price ) >= 150	manufactory_1
SELECT AVG( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name HAVING AVG( products.price ) >= 150	manufactory_1
SELECT products.name , products.price FROM products ORDER BY products.price ASC LIMIT 1	manufactory_1
SELECT products.name , products.price FROM products ORDER BY products.price ASC LIMIT 1	manufactory_1
SELECT products.name , MAX( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT products.name , MAX( products.price ) , manufacturers.name FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code GROUP BY manufacturers.name	manufactory_1
SELECT products.code , products.name , MIN( products.price ) FROM products GROUP BY products.name	manufactory_1
SELECT products.code , products.name , MIN( products.price ) FROM products GROUP BY products.name	manufactory_1
SELECT problem_log.problem_log_id FROM problem_log ORDER BY problem_log.log_entry_date DESC LIMIT 1	tracking_software_problems
SELECT problem_log.problem_log_id FROM problem_log ORDER BY problem_log.log_entry_date DESC LIMIT 1	tracking_software_problems
SELECT problem_log.problem_log_id , problem_log.problem_id FROM problem_log ORDER BY problem_log.log_entry_date ASC LIMIT 1	tracking_software_problems
SELECT problem_log.problem_log_id , problem_log.problem_id FROM problem_log ORDER BY problem_log.log_entry_date ASC LIMIT 1	tracking_software_problems
SELECT problem_log.problem_log_id , problem_log.log_entry_date FROM problem_log WHERE problem_log.problem_id = 10	tracking_software_problems
SELECT problem_log.problem_log_id , problem_log.log_entry_date FROM problem_log JOIN 10, ON problem_log.problem_id = 10,	tracking_software_problems
SELECT problem_log.problem_log_id , problem_log.log_entry_description FROM problem_log	tracking_software_problems
SELECT problem_log.problem_log_id , problem_log.log_entry_description FROM problem_log	tracking_software_problems
SELECT DISTINCT staff.staff_first_name , staff.staff_last_name FROM staff JOIN problem_log ON staff.staff_id = problem_log.assigned_to_staff_id WHERE problem_log.problem_id = 1	tracking_software_problems
SELECT DISTINCT staff.staff_first_name , staff.staff_last_name FROM staff JOIN problem_log ON staff.staff_id = problem_log.assigned_to_staff_id WHERE problem_log.problem_id = 1	tracking_software_problems
SELECT DISTINCT problem_log.problem_id , problem_log.problem_log_id FROM staff JOIN problem_log ON staff.staff_id = problem_log.assigned_to_staff_id WHERE staff.staff_first_name = 'Rylan' AND staff.staff_last_name = 'Homenick'	tracking_software_problems
SELECT DISTINCT problem_log.problem_id , problem_log.problem_log_id FROM staff JOIN problem_log ON staff.staff_id = problem_log.assigned_to_staff_id WHERE staff.staff_first_name = 'Rylan' AND staff.staff_last_name = 'Homenick'	tracking_software_problems
SELECT COUNT( * ) FROM product JOIN problems ON product.product_id = problems.product_id WHERE product.product_name = 'voluptatem'	tracking_software_problems
SELECT COUNT( * ) FROM product JOIN problems ON product.product_id = problems.product_id WHERE product.product_name = 'voluptatem'	tracking_software_problems
SELECT COUNT( * ) , product.product_name FROM product JOIN problems ON product.product_id = problems.product_id GROUP BY product.product_name ORDER BY COUNT( * ) DESC LIMIT 1	tracking_software_problems
SELECT COUNT( * ) , product.product_name FROM product JOIN problems ON product.product_id = problems.product_id GROUP BY product.product_name ORDER BY COUNT( * ) DESC LIMIT 1	tracking_software_problems
SELECT problems.problem_description FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop'	tracking_software_problems
SELECT problems.problem_description FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop'	tracking_software_problems
SELECT problems.problem_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_last_name = 'Bosco'	tracking_software_problems
SELECT problems.problem_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_last_name = 'Bosco'	tracking_software_problems
SELECT problems.problem_id FROM problems WHERE problems.date_problem_reported > '1978-06-26'	tracking_software_problems
SELECT problems.problem_id FROM problems WHERE problems.date_problem_reported > '1978-06-26'	tracking_software_problems
SELECT problems.problem_id FROM problems WHERE problems.date_problem_reported<'1978-06-26'	tracking_software_problems
SELECT problems.problem_id FROM problems WHERE problems.date_problem_reported<'1978-06-26'	tracking_software_problems
SELECT COUNT( * ) , product.product_id FROM problems JOIN product ON problems.product_id = product.product_id GROUP BY product.product_id	tracking_software_problems
SELECT COUNT( * ) , product.product_id FROM problems JOIN product ON problems.product_id = product.product_id GROUP BY product.product_id	tracking_software_problems
SELECT COUNT( * ) , product.product_id FROM problems JOIN product ON problems.product_id = product.product_id WHERE problems.date_problem_reported > '1986-11-13' GROUP BY product.product_id	tracking_software_problems
SELECT COUNT( * ) , product.product_id FROM problems JOIN product ON problems.product_id = product.product_id WHERE problems.date_problem_reported > '1986-11-13' GROUP BY product.product_id	tracking_software_problems
SELECT DISTINCT product.product_name FROM product ORDER BY product.product_name ASC	tracking_software_problems
SELECT DISTINCT product.product_name FROM product ORDER BY product.product_name ASC	tracking_software_problems
SELECT DISTINCT product.product_name FROM product ORDER BY product.product_id ASC	tracking_software_problems
SELECT DISTINCT product.product_name FROM product ORDER BY product.product_id ASC	tracking_software_problems
SELECT problems.product_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Dameon' AND staff.staff_last_name = 'Frami' UNION SELECT problems.product_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Jolie' AND staff.staff_last_name = 'Weber'	tracking_software_problems
SELECT problems.product_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Dameon' AND staff.staff_last_name = 'Frami' UNION SELECT problems.product_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Jolie' AND staff.staff_last_name = 'Weber'	tracking_software_problems
SELECT problems.product_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop' AND staff.staff_last_name = 'Berge' INTERSECT SELECT problems.product_id FROM problems JOIN staff ON problems.closure_authorised_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Ashley' AND staff.staff_last_name = 'Medhurst'	tracking_software_problems
SELECT problems.product_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop' AND staff.staff_last_name = 'Berge' INTERSECT SELECT problems.product_id FROM problems JOIN staff ON problems.closure_authorised_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Ashley' AND staff.staff_last_name = 'Medhurst'	tracking_software_problems
problems , problems	tracking_software_problems
problems , problems	tracking_software_problems
SELECT problems.problem_id FROM problems JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE problems.date_problem_reported > (SELECT MAX( problems.date_problem_reported ) FROM problems WHERE staff.staff_first_name = 'Rylan')	tracking_software_problems
problems , problems	tracking_software_problems
SELECT product.product_name FROM problems JOIN product ON problems.product_id = product.product_id GROUP BY product.product_name ORDER BY COUNT( * ) DESC LIMIT 3	tracking_software_problems
SELECT product.product_name FROM problems JOIN product ON problems.product_id = product.product_id GROUP BY product.product_name ORDER BY COUNT( * ) DESC LIMIT 3	tracking_software_problems
SELECT problems.problem_id FROM problems JOIN product ON problems.product_id = product.product_id WHERE product.product_name = 'voluptatem' AND problems.date_problem_reported > '1995'	tracking_software_problems
SELECT problems.problem_id FROM problems JOIN product ON problems.product_id = product.product_id WHERE product.product_name = 'voluptatem' AND problems.date_problem_reported > '1995'	tracking_software_problems
SELECT staff.staff_first_name , staff.staff_last_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE product.product_name = 'rem' EXCEPT SELECT staff.staff_first_name , staff.staff_last_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE product.product_name = 'aut'	tracking_software_problems
SELECT staff.staff_first_name , staff.staff_last_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE product.product_name = 'rem' EXCEPT SELECT staff.staff_first_name , staff.staff_last_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE product.product_name = 'aut'	tracking_software_problems
SELECT product.product_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Lacey' AND staff.staff_last_name = 'Bosco' INTERSECT SELECT product.product_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Kenton' AND staff.staff_last_name = 'Champlin'	tracking_software_problems
SELECT product.product_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Lacey' AND staff.staff_last_name = 'Bosco' INTERSECT SELECT product.product_name FROM problems JOIN product ON problems.product_id = product.product_id JOIN staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Kenton' AND staff.staff_last_name = 'Champlin'	tracking_software_problems
SELECT COUNT( * ) FROM branch WHERE branch.membership_amount > (SELECT AVG( branch.membership_amount ) FROM branch)	shop_membership
SELECT COUNT( * ) FROM branch WHERE branch.membership_amount > (SELECT AVG( branch.membership_amount ) FROM branch)	shop_membership
SELECT branch.name , branch.address_road , branch.city FROM branch ORDER BY branch.open_year ASC	shop_membership
SELECT branch.name , branch.address_road , branch.city FROM branch ORDER BY branch.open_year ASC	shop_membership
SELECT branch.name FROM branch ORDER BY branch.membership_amount DESC LIMIT 3	shop_membership
SELECT branch.name FROM branch ORDER BY branch.membership_amount DESC LIMIT 3	shop_membership
SELECT DISTINCT branch.city FROM branch WHERE branch.membership_amount >= 100	shop_membership
SELECT DISTINCT branch.city FROM branch WHERE branch.membership_amount >= 100	shop_membership
SELECT branch.open_year FROM branch GROUP BY branch.open_year HAVING COUNT( * ) >= 2	shop_membership
SELECT branch.open_year FROM branch GROUP BY branch.open_year HAVING COUNT( * ) >= 2	shop_membership
SELECT MIN( branch.membership_amount ) , MAX( branch.membership_amount ) FROM branch WHERE branch.open_year = 2011 OR branch.city = 'London'	shop_membership
SELECT MIN( branch.membership_amount ) , MAX( branch.membership_amount ) FROM branch WHERE branch.open_year = 2011 OR branch.city = 'London'	shop_membership
SELECT branch.city , COUNT( * ) FROM branch WHERE branch.open_year<2010 GROUP BY branch.city	shop_membership
SELECT branch.city , COUNT( * ) FROM branch WHERE branch.open_year<2010 GROUP BY branch.city	shop_membership
SELECT COUNT( DISTINCT member.level ) FROM member	shop_membership
SELECT COUNT( DISTINCT member.level ) FROM member	shop_membership
SELECT member.card_number , member.name , member.hometown FROM member ORDER BY member.level DESC	shop_membership
SELECT member.card_number , member.name , member.hometown FROM member ORDER BY member.level DESC	shop_membership
SELECT member.level FROM member GROUP BY member.level ORDER BY COUNT( * ) DESC LIMIT 1	shop_membership
SELECT member.level FROM member GROUP BY member.level ORDER BY COUNT( * ) DESC LIMIT 1	shop_membership
SELECT member.name , branch.name FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id JOIN member ON membership_register_branch.member_id = member.member_id ORDER BY membership_register_branch.register_year ASC	shop_membership
SELECT member.name , branch.name FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id JOIN member ON membership_register_branch.member_id = member.member_id ORDER BY membership_register_branch.register_year ASC	shop_membership
SELECT branch.name , COUNT( * ) FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id WHERE membership_register_branch.register_year > 2015 GROUP BY branch.branch_id	shop_membership
SELECT branch.name , COUNT( * ) FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id WHERE membership_register_branch.register_year > 2015 GROUP BY branch.branch_id	shop_membership
SELECT member.name FROM member WHERE member.member_id NOT IN (SELECT membership_register_branch.member_id FROM membership_register_branch)	shop_membership
SELECT member.name FROM member WHERE member.member_id NOT IN (SELECT membership_register_branch.member_id FROM membership_register_branch)	shop_membership
SELECT branch.name , branch.city FROM branch WHERE branch.branch_id NOT IN (SELECT membership_register_branch.branch_id FROM membership_register_branch)	shop_membership
SELECT branch.name , branch.city FROM branch WHERE branch.branch_id NOT IN (SELECT membership_register_branch.branch_id FROM membership_register_branch)	shop_membership
SELECT branch.name , branch.open_year FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id WHERE membership_register_branch.register_year = 2016 GROUP BY branch.branch_id ORDER BY COUNT( * ) DESC LIMIT 1	shop_membership
SELECT branch.name , branch.open_year FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id WHERE membership_register_branch.register_year = 2016 GROUP BY branch.branch_id ORDER BY COUNT( * ) DESC LIMIT 1	shop_membership
SELECT member.name , member.hometown FROM membership_register_branch JOIN member ON membership_register_branch.member_id = member.member_id WHERE membership_register_branch.register_year = 2016	shop_membership
SELECT member.name , member.hometown FROM membership_register_branch JOIN member ON membership_register_branch.member_id = member.member_id WHERE membership_register_branch.register_year = 2016	shop_membership
SELECT branch.city FROM branch WHERE branch.open_year = 2001 AND branch.membership_amount > 100	shop_membership
SELECT branch.city FROM branch WHERE branch.open_year = 2001 AND branch.membership_amount > 100	shop_membership
SELECT branch.city FROM branch EXCEPT SELECT branch.city FROM branch WHERE branch.membership_amount > 100	shop_membership
SELECT branch.city FROM branch EXCEPT SELECT branch.city FROM branch WHERE branch.membership_amount > 100	shop_membership
SELECT SUM( purchase.total_pounds ) FROM purchase JOIN branch ON purchase.branch_id = branch.branch_id WHERE branch.city = 'London' AND purchase.year = 2018	shop_membership
SELECT SUM( purchase.total_pounds ) FROM purchase JOIN branch ON purchase.branch_id = branch.branch_id WHERE branch.city = 'London' AND purchase.year = 2018	shop_membership
SELECT COUNT( * ) FROM purchase JOIN member ON purchase.member_id = member.member_id WHERE member.level = 6	shop_membership
SELECT COUNT( * ) FROM purchase JOIN member ON purchase.member_id = member.member_id WHERE member.level = 6	shop_membership
SELECT branch.name FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id JOIN member ON membership_register_branch.member_id = member.member_id WHERE member.hometown = 'Hiram' INTERSECT SELECT branch.name FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id JOIN member ON membership_register_branch.member_id = member.member_id WHERE member.hometown = 'Hiram, Georgia'	shop_membership
SELECT branch.name FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id JOIN member ON membership_register_branch.member_id = member.member_id WHERE member.hometown = 'Hiram' INTERSECT SELECT branch.name FROM membership_register_branch JOIN branch ON membership_register_branch.branch_id = branch.branch_id JOIN member ON membership_register_branch.member_id = member.member_id WHERE member.hometown = 'Hiram, Goergia'	shop_membership
SELECT member.card_number FROM member WHERE member.hometown LIKE '%Kentucky%'	shop_membership
SELECT member.card_number FROM member WHERE member.hometown LIKE '%Kentucky%'	shop_membership
SELECT COUNT( * ) FROM student	voter_2
SELECT COUNT( * ) FROM student	voter_2
SELECT COUNT( * ) FROM voting_record	voter_2
SELECT COUNT( * ) FROM voting_record	voter_2
SELECT COUNT( DISTINCT voting_record.president_vote ) FROM voting_record	voter_2
SELECT COUNT( DISTINCT voting_record.president_vote ) FROM voting_record	voter_2
SELECT MAX( student.age ) FROM student	voter_2
SELECT MAX( student.age ) FROM student	voter_2
SELECT student.lname FROM student WHERE student.major = 50	voter_2
SELECT student.lname FROM student WHERE student.major = 50	voter_2
SELECT student.fname FROM student WHERE student.age > 22	voter_2
SELECT student.fname FROM student WHERE student.age > 22	voter_2
SELECT student.major FROM student WHERE student.sex = 'm'	voter_2
SELECT student.major FROM student WHERE student.sex = 'm'	voter_2
SELECT AVG( student.age ) FROM student WHERE student.sex = 'F'	voter_2
SELECT AVG( student.age ) FROM student WHERE student.sex = 'f'	voter_2
SELECT MAX( student.age ) , MIN( student.age ) FROM student WHERE student.major = 600	voter_2
SELECT MAX( student.age ) , MIN( student.age ) FROM student WHERE student.major = 600	voter_2
SELECT student.advisor FROM student WHERE student.city_code = 'BAL'	voter_2
SELECT student.advisor FROM student WHERE student.city_code = 'BAL'	voter_2
SELECT DISTINCT voting_record.secretary_vote FROM voting_record WHERE voting_record.election_cycle = 'fall'	voter_2
SELECT DISTINCT voting_record.secretary_vote FROM voting_record WHERE voting_record.election_cycle = 'fall'	voter_2
SELECT DISTINCT voting_record.president_vote FROM voting_record WHERE voting_record.registration_date = '08/30/2015'	voter_2
SELECT DISTINCT voting_record.president_vote FROM voting_record WHERE voting_record.registration_date = '08/30/2015'	voter_2
SELECT DISTINCT voting_record.registration_date , voting_record.election_cycle FROM voting_record	voter_2
SELECT DISTINCT voting_record.registration_date , voting_record.election_cycle FROM voting_record	voter_2
SELECT DISTINCT voting_record.president_vote , voting_record.vice_president_vote FROM voting_record	voter_2
SELECT DISTINCT voting_record.president_vote , voting_record.vice_president_vote FROM voting_record	voter_2
SELECT DISTINCT student.lname FROM student JOIN voting_record ON student.stuid = voting_record.class_president_vote	voter_2
SELECT DISTINCT student.lname FROM student JOIN voting_record ON student.stuid = voting_record.class_president_vote	voter_2
SELECT DISTINCT student.fname FROM student JOIN voting_record ON student.stuid = voting_record.class_senator_vote	voter_2
SELECT DISTINCT student.fname FROM student JOIN voting_record ON student.stuid = voting_record.class_president_vote	voter_2
SELECT DISTINCT student.age FROM student JOIN voting_record ON student.stuid = voting_record.secretary_vote WHERE voting_record.election_cycle = 'fall'	voter_2
SELECT DISTINCT student.age FROM student JOIN voting_record ON student.stuid = voting_record.secretary_vote WHERE voting_record.election_cycle = 'fall'	voter_2
SELECT DISTINCT student.advisor FROM student JOIN voting_record ON student.stuid = voting_record.treasurer_vote WHERE voting_record.election_cycle = 'spring'	voter_2
SELECT DISTINCT student.advisor FROM student JOIN voting_record ON student.stuid = voting_record.treasurer_vote WHERE voting_record.election_cycle = 'spring'	voter_2
SELECT DISTINCT student.major FROM student JOIN voting_record ON student.stuid = voting_record.treasurer_vote	voter_2
SELECT DISTINCT student.major FROM student JOIN voting_record ON student.stuid = voting_record.treasurer_vote	voter_2
SELECT DISTINCT student.fname , student.lname FROM student JOIN voting_record ON student.stuid = voting_record.president_vote WHERE student.sex = 'F'	voter_2
SELECT DISTINCT student.fname , student.lname FROM student JOIN voting_record ON student.stuid = voting_record.president_vote WHERE student.sex = 'f'	voter_2
SELECT DISTINCT student.fname , student.lname FROM student JOIN voting_record ON student.stuid = voting_record.vice_president_vote WHERE student.age = 18	voter_2
SELECT DISTINCT student.fname , student.lname FROM student JOIN voting_record ON student.stuid = voting_record.vice_president_vote WHERE student.age = 18	voter_2
SELECT COUNT( * ) FROM student JOIN voting_record ON student.stuid = voting_record.class_senator_vote WHERE student.sex = 'm' AND voting_record.election_cycle = 'fall'	voter_2
SELECT COUNT( * ) FROM student JOIN voting_record ON student.stuid = voting_record.class_senator_vote WHERE student.sex = 'm' AND voting_record.election_cycle = 'fall'	voter_2
SELECT COUNT( * ) FROM student JOIN voting_record ON student.stuid = voting_record.class_senator_vote WHERE student.city_code = 'NYC' AND voting_record.election_cycle = 'spring'	voter_2
SELECT COUNT( * ) FROM student JOIN voting_record ON student.stuid = voting_record.class_senator_vote WHERE student.city_code = 'NYC' AND voting_record.election_cycle = 'spring'	voter_2
SELECT AVG( student.age ) FROM student JOIN voting_record ON student.stuid = voting_record.secretary_vote WHERE student.city_code = 'NYC' AND voting_record.election_cycle = 'spring'	voter_2
SELECT AVG( student.age ) FROM student JOIN voting_record ON student.stuid = voting_record.secretary_vote WHERE student.city_code = 'NYC' AND voting_record.election_cycle = 'spring'	voter_2
SELECT AVG( student.age ) FROM student JOIN voting_record ON student.stuid = voting_record.secretary_vote WHERE student.sex = 'f' AND voting_record.election_cycle = 'spring'	voter_2
SELECT AVG( student.age ) FROM student JOIN voting_record ON student.stuid = voting_record.secretary_vote WHERE student.sex = 'f' AND voting_record.election_cycle = 'spring'	voter_2
SELECT DISTINCT student.fname FROM student JOIN voting_record ON student.stuid = voting_record.vice_president_vote EXCEPT SELECT DISTINCT student.fname FROM student WHERE student.city_code = 'PIT'	voter_2
SELECT DISTINCT student.fname FROM student JOIN voting_record ON student.stuid = voting_record.vice_president_vote EXCEPT SELECT DISTINCT student.fname FROM student WHERE student.city_code = 'PIT'	voter_2
SELECT DISTINCT student.lname FROM student JOIN voting_record ON student.stuid = voting_record.president_vote EXCEPT SELECT DISTINCT student.lname FROM student WHERE student.advisor = '2192'	voter_2
SELECT DISTINCT student.lname FROM student JOIN voting_record ON student.stuid = voting_record.president_vote EXCEPT SELECT DISTINCT student.lname FROM student WHERE student.advisor = '2192'	voter_2
SELECT DISTINCT student.lname FROM student JOIN voting_record ON student.stuid = voting_record.president_vote INTERSECT SELECT DISTINCT student.lname FROM student WHERE student.advisor = '8741'	voter_2
SELECT DISTINCT student.lname FROM student JOIN voting_record ON student.stuid = voting_record.president_vote INTERSECT SELECT DISTINCT student.lname FROM student WHERE student.advisor = '8741'	voter_2
SELECT student.advisor , COUNT( * ) FROM student GROUP BY student.advisor	voter_2
SELECT student.advisor , COUNT( * ) FROM student GROUP BY student.advisor	voter_2
SELECT student.advisor FROM student GROUP BY student.advisor HAVING COUNT( * ) > 2	voter_2
SELECT student.advisor FROM student GROUP BY student.advisor HAVING COUNT( * ) > 2	voter_2
SELECT student.major FROM student GROUP BY student.major HAVING COUNT( * )<3	voter_2
SELECT student.major FROM student GROUP BY student.major HAVING COUNT( * )<3	voter_2
SELECT voting_record.election_cycle , COUNT( * ) FROM voting_record GROUP BY voting_record.election_cycle	voter_2
SELECT voting_record.election_cycle , COUNT( * ) FROM voting_record GROUP BY voting_record.election_cycle	voter_2
SELECT student.major FROM student GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1	voter_2
SELECT student.major FROM student GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1	voter_2
SELECT student.major FROM student WHERE student.sex = 'f' GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1	voter_2
SELECT student.major FROM student WHERE student.sex = 'f' GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1	voter_2
SELECT student.city_code FROM student GROUP BY student.city_code ORDER BY COUNT( * ) DESC LIMIT 1	voter_2
SELECT student.city_code FROM student GROUP BY student.city_code ORDER BY COUNT( * ) DESC LIMIT 1	voter_2
SELECT student.advisor FROM student GROUP BY student.advisor HAVING COUNT( * ) > 2	voter_2
SELECT student.advisor FROM student GROUP BY student.advisor HAVING COUNT( * ) > 2	voter_2
SELECT COUNT( * ) FROM products	products_gen_characteristics
SELECT COUNT( * ) FROM products	products_gen_characteristics
SELECT COUNT( * ) FROM ref_colors	products_gen_characteristics
SELECT COUNT( * ) FROM ref_colors	products_gen_characteristics
SELECT COUNT( * ) FROM characteristics	products_gen_characteristics
SELECT COUNT( * ) FROM characteristics	products_gen_characteristics
SELECT products.product_name , products.typical_buying_price FROM products	products_gen_characteristics
SELECT products.product_name , products.typical_buying_price FROM products	products_gen_characteristics
SELECT ref_colors.color_description FROM ref_colors	products_gen_characteristics
SELECT ref_colors.color_description FROM ref_colors	products_gen_characteristics
SELECT DISTINCT characteristics.characteristic_name FROM characteristics	products_gen_characteristics
SELECT DISTINCT characteristics.characteristic_name FROM characteristics	products_gen_characteristics
SELECT products.product_name FROM products WHERE products.product_category_code = 'Spices'	products_gen_characteristics
SELECT products.product_name FROM products WHERE products.product_category_code = 'Spices'	products_gen_characteristics
SELECT products.product_name , ref_colors.color_description , products.product_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE products.product_category_code = 'Herbs'	products_gen_characteristics
SELECT products.product_name , ref_colors.color_description , products.product_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE products.product_category_code = 'Herbs'	products_gen_characteristics
SELECT COUNT( * ) FROM products WHERE products.product_category_code = 'Seeds'	products_gen_characteristics
SELECT COUNT( * ) FROM products WHERE products.product_category_code = 'Seeds'	products_gen_characteristics
SELECT COUNT( * ) FROM products WHERE products.product_category_code = 'Spices' AND products.typical_buying_price > 1000	products_gen_characteristics
SELECT COUNT( * ) FROM products WHERE products.product_category_code = 'Spices' AND products.typical_buying_price > 1000	products_gen_characteristics
SELECT products.product_category_code , products.typical_buying_price FROM products WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT products.product_category_code , products.typical_buying_price FROM products WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT products.product_category_code FROM products WHERE products.product_name = 'flax'	products_gen_characteristics
SELECT products.product_category_code FROM products WHERE products.product_name = 'flax'	products_gen_characteristics
SELECT products.product_name FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'yellow'	products_gen_characteristics
SELECT products.product_name FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'yellow'	products_gen_characteristics
SELECT ref_product_categories.product_category_description FROM ref_product_categories JOIN products ON ref_product_categories.product_category_code = products.product_category_code WHERE products.product_description LIKE '%t%'	products_gen_characteristics
SELECT ref_product_categories.product_category_description FROM ref_product_categories JOIN products ON ref_product_categories.product_category_code = products.product_category_code WHERE products.product_description LIKE '%t%'	products_gen_characteristics
SELECT ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE products.product_name = 'catnip'	products_gen_characteristics
SELECT ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE products.product_name = 'catnip'	products_gen_characteristics
SELECT products.color_code , ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE products.product_name = 'chervil'	products_gen_characteristics
SELECT products.color_code , ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE products.product_name = 'chervil'	products_gen_characteristics
SELECT products.product_id , ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code JOIN product_characteristics ON products.product_id = product_characteristics.product_id GROUP BY products.product_id HAVING COUNT( * ) >= 2	products_gen_characteristics
SELECT products.product_id , ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code JOIN product_characteristics ON products.product_id = product_characteristics.product_id GROUP BY products.product_id HAVING COUNT( * ) >= 2	products_gen_characteristics
SELECT products.product_name FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'white'	products_gen_characteristics
SELECT products.product_name FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'white'	products_gen_characteristics
SELECT products.product_name , products.typical_buying_price , products.typical_selling_price FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'yellow'	products_gen_characteristics
SELECT products.product_name , products.typical_buying_price , products.typical_selling_price FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'yellow'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id WHERE products.product_name = 'sesame'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id WHERE products.product_name = 'sesame'	products_gen_characteristics
SELECT COUNT( DISTINCT characteristics.characteristic_name ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT COUNT( DISTINCT characteristics.characteristic_name ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'sesame'	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'sesame'	products_gen_characteristics
SELECT characteristics.characteristic_name , characteristics.characteristic_data_type FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT characteristics.characteristic_name , characteristics.characteristic_data_type FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'sesame' AND characteristics.characteristic_type_code = 'Grade'	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'sesame' AND characteristics.characteristic_type_code = 'Grade'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'laurel'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'laurel'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'flax'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE products.product_name = 'flax'	products_gen_characteristics
SELECT products.product_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'red' AND characteristics.characteristic_name = 'fast'	products_gen_characteristics
SELECT products.product_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'red' AND characteristics.characteristic_name = 'fast'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'hot'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'hot'	products_gen_characteristics
SELECT DISTINCT products.product_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'warm'	products_gen_characteristics
SELECT DISTINCT products.product_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'warm'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'red' AND characteristics.characteristic_name = 'slow'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'red' AND characteristics.characteristic_name = 'slow'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'white' OR characteristics.characteristic_name = 'hot'	products_gen_characteristics
SELECT COUNT( * ) FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'white' OR characteristics.characteristic_name = 'hot'	products_gen_characteristics
SELECT ref_product_categories.unit_of_measure FROM ref_product_categories WHERE ref_product_categories.product_category_code = 'Herbs'	products_gen_characteristics
SELECT ref_product_categories.unit_of_measure FROM ref_product_categories WHERE ref_product_categories.product_category_code = 'Herb'	products_gen_characteristics
SELECT ref_product_categories.product_category_description FROM ref_product_categories WHERE ref_product_categories.product_category_code = 'Spices'	products_gen_characteristics
SELECT ref_product_categories.product_category_description FROM ref_product_categories WHERE ref_product_categories.product_category_code = 'Spices'	products_gen_characteristics
SELECT ref_product_categories.product_category_description , ref_product_categories.unit_of_measure FROM ref_product_categories WHERE ref_product_categories.product_category_code = 'Herbs'	products_gen_characteristics
SELECT ref_product_categories.product_category_description , ref_product_categories.unit_of_measure FROM ref_product_categories WHERE ref_product_categories.product_category_code = 'Herbs'	products_gen_characteristics
SELECT ref_product_categories.unit_of_measure FROM products JOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT ref_product_categories.unit_of_measure FROM products JOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code WHERE products.product_name = 'cumin'	products_gen_characteristics
SELECT ref_product_categories.unit_of_measure , ref_product_categories.product_category_code FROM products JOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code WHERE products.product_name = 'chervil'	products_gen_characteristics
SELECT ref_product_categories.unit_of_measure , ref_product_categories.product_category_code FROM products JOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code WHERE products.product_name = 'chervil'	products_gen_characteristics
SELECT products.product_name FROM products JOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'white' AND ref_product_categories.unit_of_measure != 'Handful'	products_gen_characteristics
SELECT products.product_name FROM products JOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'white' AND ref_product_categories.unit_of_measure != 'Handful'	products_gen_characteristics
SELECT ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code GROUP BY ref_colors.color_description ORDER BY COUNT( * ) DESC LIMIT 1	products_gen_characteristics
SELECT ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code GROUP BY ref_colors.color_description ORDER BY COUNT( * ) DESC LIMIT 1	products_gen_characteristics
SELECT ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code GROUP BY ref_colors.color_description ORDER BY COUNT( * ) ASC LIMIT 1	products_gen_characteristics
SELECT ref_colors.color_description FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code GROUP BY ref_colors.color_description ORDER BY COUNT( * ) ASC LIMIT 1	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id GROUP BY characteristics.characteristic_name ORDER BY COUNT( * ) DESC LIMIT 1	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id GROUP BY characteristics.characteristic_name ORDER BY COUNT( * ) DESC LIMIT 1	products_gen_characteristics
SELECT characteristics.characteristic_name , characteristics.other_characteristic_details , characteristics.characteristic_data_type FROM characteristics EXCEPT SELECT characteristics.characteristic_name , characteristics.other_characteristic_details , characteristics.characteristic_data_type FROM characteristics JOIN product_characteristics ON characteristics.characteristic_id = product_characteristics.characteristic_id	products_gen_characteristics
SELECT characteristics.characteristic_name , characteristics.other_characteristic_details , characteristics.characteristic_data_type FROM characteristics EXCEPT SELECT characteristics.characteristic_name , characteristics.other_characteristic_details , characteristics.characteristic_data_type FROM characteristics JOIN product_characteristics ON characteristics.characteristic_id = product_characteristics.characteristic_id	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id GROUP BY characteristics.characteristic_name HAVING COUNT( * ) >= 2	products_gen_characteristics
SELECT characteristics.characteristic_name FROM products JOIN product_characteristics ON products.product_id = product_characteristics.product_id JOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id GROUP BY characteristics.characteristic_name HAVING COUNT( * ) >= 2	products_gen_characteristics
SELECT COUNT( * ) FROM ref_colors WHERE ref_colors.color_code NOT IN (SELECT products.color_code FROM products)	products_gen_characteristics
SELECT COUNT( * ) FROM ref_colors WHERE ref_colors.color_code NOT IN (SELECT products.color_code FROM products)	products_gen_characteristics
SELECT COUNT( * ) FROM event	swimming
SELECT event.name FROM event ORDER BY event.year DESC	swimming
SELECT event.name FROM event ORDER BY event.year DESC LIMIT 1	swimming
SELECT COUNT( * ) FROM stadium	swimming
SELECT stadium.name FROM stadium ORDER BY stadium.capacity DESC LIMIT 1	swimming
SELECT stadium.name FROM stadium WHERE stadium.capacity<(SELECT AVG( stadium.capacity ) FROM stadium)	swimming
SELECT stadium.country FROM stadium GROUP BY stadium.country ORDER BY COUNT( * ) DESC LIMIT 1	swimming
SELECT stadium.country FROM stadium GROUP BY stadium.country HAVING COUNT( * ) <= 3	swimming
SELECT stadium.country FROM stadium WHERE stadium.capacity > 60000 INTERSECT SELECT stadium.country FROM stadium WHERE stadium.capacity<50000	swimming
SELECT COUNT( DISTINCT stadium.city ) FROM stadium WHERE stadium.opening_year<2006	swimming
SELECT stadium.country , COUNT( * ) FROM stadium GROUP BY stadium.country	swimming
SELECT stadium.country FROM stadium EXCEPT SELECT stadium.country FROM stadium WHERE stadium.opening_year > 2006	swimming
SELECT COUNT( * ) FROM stadium WHERE stadium.country != 'Russia'	swimming
SELECT swimmer.name FROM swimmer ORDER BY swimmer.meter_100 ASC	swimming
SELECT COUNT( DISTINCT swimmer.nationality ) FROM swimmer	swimming
SELECT swimmer.nationality , COUNT( * ) FROM swimmer GROUP BY swimmer.nationality HAVING COUNT( * ) > 1	swimming
SELECT swimmer.meter_200 , swimmer.meter_300 FROM swimmer WHERE swimmer.nationality = 'Australia'	swimming
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.id = record.swimmer_id WHERE record.result = 'win'	swimming
SELECT stadium.name FROM stadium JOIN event ON stadium.id = event.stadium_id GROUP BY event.stadium_id ORDER BY COUNT( * ) DESC LIMIT 1	swimming
SELECT stadium.name , stadium.capacity FROM stadium JOIN event ON stadium.id = event.stadium_id WHERE event.name = 'World Junior'	swimming
SELECT stadium.name FROM stadium WHERE stadium.id NOT IN (SELECT event.stadium_id FROM event)	swimming
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.id = record.swimmer_id GROUP BY record.swimmer_id ORDER BY COUNT( * ) DESC LIMIT 1	swimming
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.id = record.swimmer_id GROUP BY record.swimmer_id HAVING COUNT( * ) >= 2	swimming
SELECT swimmer.name , swimmer.nationality FROM swimmer JOIN record ON swimmer.id = record.swimmer_id WHERE record.result = 'win' GROUP BY record.swimmer_id HAVING COUNT( * ) > 1	swimming
SELECT swimmer.name FROM swimmer WHERE swimmer.id NOT IN (SELECT record.swimmer_id FROM record)	swimming
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.id = record.swimmer_id WHERE record.result = 'win' INTERSECT SELECT swimmer.name FROM swimmer JOIN record ON swimmer.id = record.swimmer_id WHERE record.result = 'loss'	swimming
SELECT stadium.name FROM swimmer JOIN record ON swimmer.id = record.event_id JOIN event ON record.event_id = event.id JOIN stadium ON event.stadium_id = stadium.id JOIN stadium ON stadium.id = event.stadium_id	swimming
SELECT stadium.name FROM record JOIN event ON record.event_id = event.id JOIN stadium ON stadium.id = event.stadium_id GROUP BY event.stadium_id ORDER BY COUNT( * ) DESC LIMIT 1	swimming
SELECT * FROM swimmer	swimming
SELECT AVG( stadium.capacity ) FROM stadium WHERE stadium.opening_year = 2005	swimming
SELECT COUNT( * ) FROM railway	railway
SELECT railway.builder FROM railway ORDER BY railway.builder ASC	railway
SELECT railway.wheels , railway.location FROM railway	railway
SELECT MAX( manager.level ) FROM manager WHERE manager.country != 'Australia'	railway
SELECT AVG( manager.age ) FROM manager	railway
SELECT manager.name FROM manager ORDER BY manager.level ASC	railway
SELECT train.name , train.arrival FROM train	railway
SELECT manager.name FROM manager ORDER BY manager.age DESC LIMIT 1	railway
SELECT train.name , railway.location FROM railway JOIN train ON railway.railway_id = train.railway_id	railway
SELECT railway.builder FROM railway JOIN train ON railway.railway_id = train.railway_id WHERE train.name = 'Andaman Exp'	railway
SELECT train.railway_id , railway.location FROM railway JOIN train ON railway.railway_id = train.railway_id GROUP BY train.railway_id HAVING COUNT( * ) > 1	railway
SELECT train.railway_id , railway.builder FROM railway JOIN train ON railway.railway_id = train.railway_id GROUP BY train.railway_id ORDER BY COUNT( * ) DESC LIMIT 1	railway
SELECT railway.builder , COUNT( * ) FROM railway GROUP BY railway.builder	railway
SELECT railway.builder FROM railway GROUP BY railway.builder ORDER BY COUNT( * ) DESC LIMIT 1	railway
SELECT railway.location , COUNT( * ) FROM railway GROUP BY railway.location	railway
SELECT railway.location FROM railway GROUP BY railway.location HAVING COUNT( * ) > 1	railway
SELECT railway.objectnumber FROM railway WHERE railway.railway_id NOT IN (SELECT train.railway_id FROM train)	railway
SELECT manager.country FROM manager WHERE manager.age > 50 INTERSECT SELECT manager.country FROM manager WHERE manager.age<46	railway
SELECT DISTINCT manager.country FROM manager	railway
SELECT manager.working_year_starts FROM manager ORDER BY manager.level DESC	railway
SELECT manager.country FROM manager WHERE manager.age > 50 OR manager.age<46	railway
SELECT COUNT( * ) FROM addresses WHERE addresses.country = 'USA'	customers_and_products_contacts
SELECT DISTINCT addresses.city FROM addresses	customers_and_products_contacts
SELECT addresses.state_province_county , COUNT( * ) FROM addresses GROUP BY addresses.state_province_county	customers_and_products_contacts
SELECT customers.customer_name , customers.customer_phone FROM customers WHERE customers.customer_id NOT IN (SELECT customer_address_history.customer_id FROM customer_address_history)	customers_and_products_contacts
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_products_contacts
SELECT products.product_type_code FROM products GROUP BY products.product_type_code HAVING COUNT( * ) >= 2	customers_and_products_contacts
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'completed' INTERSECT SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'part'	customers_and_products_contacts
SELECT customers.customer_name , customers.customer_phone , customers.payment_method_code FROM customers ORDER BY customers.customer_number DESC	customers_and_products_contacts
SELECT products.product_name , SUM( order_items.order_quantity ) FROM products JOIN order_items ON products.product_id = order_items.product_id GROUP BY products.product_id	customers_and_products_contacts
SELECT MIN( products.product_price ) , MAX( products.product_price ) , AVG( products.product_price ) FROM products	customers_and_products_contacts
SELECT COUNT( * ) FROM products WHERE products.product_price > (SELECT AVG( products.product_price ) FROM products)	customers_and_products_contacts
SELECT customers.customer_name , addresses.city , customer_address_history.date_from , customer_address_history.date_to FROM customer_address_history JOIN customers ON customer_address_history.customer_id = customers.customer_id JOIN addresses ON customer_address_history.address_id = addresses.address_id	customers_and_products_contacts
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customers.payment_method_code = 'Credit Card' GROUP BY customers.customer_id HAVING COUNT( * ) > 2	customers_and_products_contacts
SELECT customers.customer_name , customers.customer_phone FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON order_items.order_id = customer_orders.order_id GROUP BY customers.customer_id ORDER BY SUM( order_items.order_quantity ) DESC LIMIT 1	customers_and_products_contacts
SELECT products.product_type_code , products.product_name FROM products WHERE products.product_price > 1000 OR products.product_price<500	customers_and_products_contacts
SELECT dorm.dorm_name FROM dorm WHERE dorm.gender = 'f'	dorm_1
SELECT dorm.dorm_name FROM dorm WHERE dorm.gender = 'f'	dorm_1
SELECT dorm.dorm_name FROM dorm WHERE dorm.student_capacity > 300	dorm_1
SELECT dorm.dorm_name FROM dorm WHERE dorm.student_capacity > 300	dorm_1
SELECT COUNT( * ) FROM student WHERE student.sex = 'f' AND student.age<25	dorm_1
SELECT COUNT( * ) FROM student WHERE student.sex = 'f' AND student.age<25	dorm_1
SELECT student.fname FROM student WHERE student.age > 20	dorm_1
SELECT student.fname FROM student WHERE student.age > 20	dorm_1
SELECT student.fname FROM student WHERE student.city_code = 'PHL' AND student.age BETWEEN 20 and 25	dorm_1
SELECT student.fname FROM student WHERE student.city_code = 'PHL' AND student.age BETWEEN 20 and 25	dorm_1
SELECT COUNT( * ) FROM dorm	dorm_1
SELECT COUNT( * ) FROM dorm	dorm_1
SELECT COUNT( * ) FROM dorm_amenity	dorm_1
SELECT COUNT( * ) FROM dorm_amenity	dorm_1
SELECT SUM( dorm.student_capacity ) FROM dorm	dorm_1
SELECT SUM( dorm.student_capacity ) FROM dorm	dorm_1
SELECT COUNT( * ) FROM student	dorm_1
SELECT COUNT( * ) FROM student	dorm_1
SELECT AVG( student.age ) , student.city_code FROM student GROUP BY student.city_code	dorm_1
SELECT AVG( student.age ) , student.city_code FROM student GROUP BY student.city_code	dorm_1
SELECT AVG( dorm.student_capacity ) , SUM( dorm.student_capacity ) FROM dorm WHERE dorm.gender = 'X'	dorm_1
SELECT AVG( dorm.student_capacity ) , SUM( dorm.student_capacity ) FROM dorm WHERE dorm.gender = 'X'	dorm_1
SELECT COUNT( DISTINCT has_amenity.dormid ) FROM has_amenity	dorm_1
SELECT COUNT( DISTINCT has_amenity.dormid ) FROM has_amenity	dorm_1
SELECT dorm.dorm_name FROM dorm WHERE dorm.dormid NOT IN (SELECT has_amenity.dormid FROM has_amenity)	dorm_1
SELECT dorm.dorm_name FROM dorm WHERE dorm.dormid NOT IN (SELECT has_amenity.dormid FROM has_amenity)	dorm_1
SELECT COUNT( DISTINCT dorm.gender ) FROM dorm	dorm_1
SELECT COUNT( DISTINCT dorm.gender ) FROM dorm	dorm_1
SELECT dorm.student_capacity , dorm.gender FROM dorm WHERE dorm.dorm_name LIKE '%Donor%'	dorm_1
SELECT dorm.student_capacity , dorm.gender FROM dorm WHERE dorm.dorm_name LIKE '%Donor%'	dorm_1
SELECT dorm.dorm_name , dorm.gender FROM dorm WHERE dorm.student_capacity > 300 OR dorm.student_capacity<100	dorm_1
SELECT dorm.dorm_name , dorm.gender FROM dorm WHERE dorm.student_capacity > 300 OR dorm.student_capacity<100	dorm_1
SELECT COUNT( DISTINCT student.major ) , COUNT( DISTINCT student.city_code ) FROM student	dorm_1
SELECT COUNT( DISTINCT student.major ) , COUNT( DISTINCT student.city_code ) FROM student	dorm_1
SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge' INTERSECT SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'Study Room'	dorm_1
SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge' INTERSECT SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'Study Room'	dorm_1
SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge' EXCEPT SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'Study Room'	dorm_1
SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge' EXCEPT SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'study rooms'	dorm_1
SELECT student.lname FROM student WHERE student.sex = 'F' AND student.city_code = 'BAL' UNION SELECT student.lname FROM student WHERE student.sex = 'm' AND student.age<20	dorm_1
SELECT student.lname FROM student WHERE student.sex = 'f' AND student.city_code = 'BAL' UNION SELECT student.lname FROM student WHERE student.sex = 'm' AND student.age<20	dorm_1
SELECT dorm.dorm_name FROM dorm ORDER BY dorm.student_capacity DESC LIMIT 1	dorm_1
SELECT dorm.dorm_name FROM dorm ORDER BY dorm.student_capacity DESC LIMIT 1	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm_amenity ORDER BY dorm_amenity.amenity_name ASC	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm_amenity ORDER BY dorm_amenity.amenity_name ASC	dorm_1
SELECT student.city_code FROM student GROUP BY student.city_code ORDER BY COUNT( * ) DESC LIMIT 1	dorm_1
SELECT student.city_code FROM student GROUP BY student.city_code ORDER BY COUNT( * ) DESC LIMIT 1	dorm_1
SELECT student.fname , student.lname FROM student WHERE student.age<(SELECT AVG( student.age ) FROM student)	dorm_1
SELECT student.fname , student.lname FROM student WHERE student.age<(SELECT AVG( student.age ) FROM student)	dorm_1
SELECT student.fname , student.lname FROM student WHERE student.city_code != 'HKG' ORDER BY student.age ASC	dorm_1
SELECT student.fname , student.lname FROM student WHERE student.city_code != 'HKG' ORDER BY student.age ASC	dorm_1
SELECT dorm_amenity.amenity_name FROM has_amenity JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid JOIN dorm ON has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Anonymous Donor Hall' ORDER BY dorm_amenity.amenity_name ASC	dorm_1
SELECT dorm_amenity.amenity_name FROM has_amenity JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid JOIN dorm ON has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Anonymous Donor Hall' ORDER BY dorm_amenity.amenity_name ASC	dorm_1
SELECT COUNT( * ) , SUM( dorm.student_capacity ) , dorm.gender FROM dorm GROUP BY dorm.gender	dorm_1
SELECT COUNT( * ) , SUM( dorm.student_capacity ) , dorm.gender FROM dorm GROUP BY dorm.gender	dorm_1
SELECT AVG( student.age ) , MAX( student.age ) , student.sex FROM student GROUP BY student.sex	dorm_1
SELECT AVG( student.age ) , MAX( student.age ) , student.sex FROM student GROUP BY student.sex	dorm_1
SELECT COUNT( * ) , student.major FROM student GROUP BY student.major	dorm_1
SELECT COUNT( * ) , student.major FROM student GROUP BY student.major	dorm_1
SELECT COUNT( * ) , AVG( student.age ) , student.city_code FROM student GROUP BY student.city_code	dorm_1
SELECT COUNT( * ) , AVG( student.age ) , student.city_code FROM student GROUP BY student.city_code	dorm_1
SELECT COUNT( * ) , AVG( student.age ) , student.city_code FROM student WHERE student.sex = 'm' GROUP BY student.city_code	dorm_1
SELECT COUNT( * ) , AVG( student.age ) , student.city_code FROM student WHERE student.sex = 'm' GROUP BY student.city_code	dorm_1
SELECT COUNT( * ) , student.city_code FROM student GROUP BY student.city_code HAVING COUNT( * ) > 1	dorm_1
SELECT COUNT( * ) , student.city_code FROM student GROUP BY student.city_code HAVING COUNT( * ) > 1	dorm_1
SELECT student.fname , student.lname FROM student WHERE student.major != (SELECT student.major FROM student GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1)	dorm_1
SELECT student.fname , student.lname FROM student WHERE student.major != (SELECT student.major FROM student GROUP BY student.major ORDER BY COUNT( * ) DESC LIMIT 1)	dorm_1
SELECT COUNT( * ) , student.sex FROM student WHERE student.age > (SELECT AVG( student.age ) FROM student) GROUP BY student.sex	dorm_1
SELECT COUNT( * ) , student.sex FROM student WHERE student.age > (SELECT AVG( student.age ) FROM student) GROUP BY student.sex	dorm_1
SELECT AVG( student.age ) , dorm.dorm_name FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid GROUP BY dorm.dorm_name	dorm_1
SELECT AVG( student.age ) , dorm.dorm_name FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid GROUP BY dorm.dorm_name	dorm_1
SELECT COUNT( * ) , dorm.dormid FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid WHERE dorm.student_capacity > 100 GROUP BY dorm.dormid	dorm_1
SELECT COUNT( * ) , dorm.dormid FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid GROUP BY dorm.dormid	dorm_1
SELECT COUNT( * ) , dorm.dorm_name FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE student.age > 20 GROUP BY dorm.dorm_name	dorm_1
SELECT COUNT( * ) , dorm.dorm_name FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE student.age > 20 GROUP BY dorm.dorm_name	dorm_1
SELECT student.fname FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.dorm_name = 'Smith Hall'	dorm_1
SELECT student.fname FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.dorm_name = 'Smith Hall'	dorm_1
SELECT AVG( student.age ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.student_capacity = (SELECT MAX( dorm.student_capacity ) FROM dorm)	dorm_1
SELECT AVG( student.age ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.student_capacity = (SELECT MAX( dorm.student_capacity ) FROM dorm)	dorm_1
SELECT COUNT( * ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.gender = 'm'	dorm_1
SELECT COUNT( * ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.gender = 'm'	dorm_1
SELECT COUNT( * ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.dorm_name = 'Smith Hall' AND student.sex = 'f'	dorm_1
SELECT COUNT( * ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.dorm_name = 'Smith Hall' AND student.sex = 'f'	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm.dorm_name = 'Smith Hall'	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm.dorm_name = 'Smith Hall'	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm.dorm_name = 'Smith Hall' ORDER BY dorm_amenity.amenity_name ASC	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm.dorm_name = 'Smith Hall' ORDER BY dorm_amenity.amenity_name ASC	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm_amenity JOIN has_amenity ON dorm_amenity.amenid = has_amenity.amenid GROUP BY has_amenity.amenid ORDER BY COUNT( * ) DESC LIMIT 1	dorm_1
SELECT dorm_amenity.amenity_name FROM dorm_amenity JOIN has_amenity ON dorm_amenity.amenid = has_amenity.amenid GROUP BY has_amenity.amenid ORDER BY COUNT( * ) DESC LIMIT 1	dorm_1
dorm , dorm_amenity	dorm_1
dorm , dorm_amenity	dorm_1
SELECT dorm.dorm_name , dorm.student_capacity FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid GROUP BY has_amenity.dormid ORDER BY COUNT( * ) ASC LIMIT 1	dorm_1
SELECT dorm.dorm_name , dorm.student_capacity FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid GROUP BY has_amenity.dormid ORDER BY COUNT( * ) ASC LIMIT 1	dorm_1
SELECT dorm.dorm_name FROM dorm EXCEPT SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'	dorm_1
SELECT dorm.dorm_name FROM dorm EXCEPT SELECT dorm.dorm_name FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'	dorm_1
SELECT student.fname , student.lname FROM student JOIN lives_in ON student.stuid = lives_in.stuid WHERE lives_in.dormid NOT IN (SELECT has_amenity.dormid FROM has_amenity JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid)	dorm_1
SELECT student.fname , student.lname FROM student JOIN lives_in ON student.stuid = lives_in.stuid WHERE lives_in.dormid NOT IN (SELECT has_amenity.dormid FROM has_amenity JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid GROUP BY lives_in.dormid)	dorm_1
dorm_amenity , has_amenity	dorm_1
SELECT student.fname , student.age FROM student JOIN lives_in ON student.stuid = lives_in.stuid WHERE lives_in.dormid NOT IN (SELECT has_amenity.dormid FROM has_amenity JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid)	dorm_1
dorm , dorm	dorm_1
dorm , dorm	dorm_1
SELECT COUNT( * ) FROM customers	customer_complaints
SELECT COUNT( * ) FROM customers	customer_complaints
SELECT customers.email_address , customers.phone_number FROM customers ORDER BY customers.email_address , customers.phone_number ASC	customer_complaints
SELECT customers.email_address , customers.phone_number FROM customers ORDER BY customers.email_address , customers.phone_number ASC	customer_complaints
SELECT customers.town_city FROM customers WHERE customers.customer_type_code = 'Good Credit Rating' GROUP BY customers.town_city ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT customers.town_city FROM customers WHERE customers.customer_type_code = 'Good Credit Rating' GROUP BY customers.town_city ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT products.product_name , COUNT( * ) FROM products JOIN complaints ON products.product_id = complaints.product_id GROUP BY products.product_name	customer_complaints
SELECT products.product_name , COUNT( * ) FROM products JOIN complaints ON products.product_id = complaints.product_id GROUP BY products.product_name	customer_complaints
SELECT customers.email_address FROM customers JOIN complaints ON customers.customer_id = complaints.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT customers.email_address FROM customers JOIN complaints ON customers.customer_id = complaints.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT DISTINCT products.product_name FROM products JOIN complaints ON products.product_id = complaints.product_id GROUP BY customers.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT DISTINCT products.product_name FROM products JOIN complaints ON products.product_id = complaints.product_id GROUP BY customers.customer_id ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT customers.phone_number FROM customers JOIN complaints ON customers.customer_id = complaints.customer_id ORDER BY complaints.date_complaint_raised DESC LIMIT 1	customer_complaints
SELECT customers.phone_number FROM customers JOIN complaints ON customers.customer_id = complaints.customer_id ORDER BY complaints.date_complaint_raised DESC LIMIT 1	customer_complaints
SELECT customers.email_address , customers.phone_number FROM customers WHERE customers.customer_id NOT IN (SELECT complaints.customer_id FROM complaints)	customer_complaints
SELECT customers.email_address , customers.phone_number FROM customers WHERE customers.customer_id NOT IN (SELECT complaints.customer_id FROM complaints)	customer_complaints
SELECT customers.phone_number FROM customers UNION SELECT staff.phone_number FROM staff	customer_complaints
SELECT customers.phone_number FROM customers UNION SELECT staff.phone_number FROM staff	customer_complaints
SELECT products.product_description FROM products WHERE products.product_name = 'Chocolate'	customer_complaints
SELECT products.product_description FROM products WHERE products.product_name = 'Chocolate'	customer_complaints
SELECT products.product_name , products.product_category_code FROM products ORDER BY products.product_price DESC LIMIT 1	customer_complaints
SELECT products.product_name , products.product_category_code FROM products ORDER BY products.product_price DESC LIMIT 1	customer_complaints
SELECT products.product_price FROM products WHERE products.product_id NOT IN (SELECT complaints.product_id FROM complaints)	customer_complaints
SELECT products.product_price FROM products WHERE products.product_id NOT IN (SELECT complaints.product_id FROM complaints)	customer_complaints
SELECT AVG( products.product_price ) , products.product_category_code FROM products GROUP BY products.product_category_code	customer_complaints
SELECT AVG( products.product_price ) , products.product_category_code FROM products GROUP BY products.product_category_code	customer_complaints
SELECT staff.last_name FROM staff JOIN complaints ON staff.staff_id = complaints.staff_id JOIN products ON complaints.product_id = products.product_id ORDER BY products.product_price ASC LIMIT 1	customer_complaints
SELECT staff.last_name FROM staff JOIN complaints ON staff.staff_id = complaints.staff_id JOIN products ON complaints.product_id = products.product_id ORDER BY products.product_price ASC LIMIT 1	customer_complaints
SELECT complaints.complaint_status_code FROM complaints GROUP BY complaints.complaint_status_code HAVING COUNT( * ) > 3	customer_complaints
SELECT complaints.complaint_status_code FROM complaints GROUP BY complaints.complaint_status_code HAVING COUNT( * ) > 3	customer_complaints
SELECT staff.last_name FROM staff WHERE staff.email_address LIKE '%wrau%'	customer_complaints
SELECT staff.last_name FROM staff WHERE staff.email_address LIKE '%wrau%'	customer_complaints
SELECT COUNT( * ) FROM customers GROUP BY customers.customer_type_code ORDER BY COUNT( * ) DESC LIMIT 1	customer_complaints
SELECT COUNT( * ) FROM customers GROUP BY customers.customer_type_code ORDER BY COUNT( * ) DESC LIMIT 1	customer_complaints
SELECT staff.last_name FROM staff JOIN complaints ON staff.staff_id = complaints.staff_id ORDER BY complaints.date_complaint_raised ASC LIMIT 1	customer_complaints
SELECT staff.last_name FROM staff JOIN complaints ON staff.staff_id = complaints.staff_id ORDER BY complaints.date_complaint_raised ASC LIMIT 1	customer_complaints
SELECT COUNT( DISTINCT complaints.complaint_type_code ) FROM complaints	customer_complaints
SELECT COUNT( DISTINCT complaints.complaint_type_code ) FROM complaints	customer_complaints
SELECT customers.address_line_1 , customers.address_line_2 FROM customers WHERE customers.email_address = 'vbogisich@example.org'	customer_complaints
SELECT customers.address_line_1 , customers.address_line_2 FROM customers WHERE customers.email_address = 'vbogisich@example.org'	customer_complaints
SELECT complaints.complaint_status_code , COUNT( * ) FROM complaints WHERE complaints.complaint_type_code = 'Product Failure' GROUP BY complaints.complaint_status_code	customer_complaints
SELECT complaints.complaint_status_code , COUNT( * ) FROM complaints WHERE complaints.complaint_type_code = 'Product Failure' GROUP BY complaints.complaint_status_code	customer_complaints
SELECT staff.first_name FROM staff JOIN complaints ON staff.staff_id = complaints.staff_id GROUP BY complaints.staff_id ORDER BY COUNT( * ) ASC LIMIT 5	customer_complaints
SELECT staff.first_name FROM staff JOIN complaints ON staff.staff_id = complaints.staff_id GROUP BY complaints.staff_id ORDER BY COUNT( * ) ASC LIMIT 5	customer_complaints
SELECT customers.state FROM customers GROUP BY customers.state ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT customers.state FROM customers GROUP BY customers.state ORDER BY COUNT( * ) ASC LIMIT 1	customer_complaints
SELECT COUNT( * ) FROM submission	workshop_paper
SELECT COUNT( * ) FROM submission	workshop_paper
SELECT submission.author FROM submission ORDER BY submission.scores ASC	workshop_paper
SELECT submission.author FROM submission ORDER BY submission.scores ASC	workshop_paper
SELECT submission.author , submission.college FROM submission	workshop_paper
SELECT submission.author , submission.college FROM submission	workshop_paper
SELECT submission.author FROM submission WHERE submission.college = 'Florida' OR submission.college = 'Temple'	workshop_paper
SELECT submission.author FROM submission WHERE submission.college = 'Florida' OR submission.college = 'Temple'	workshop_paper
SELECT AVG( submission.scores ) FROM submission	workshop_paper
SELECT AVG( submission.scores ) FROM submission	workshop_paper
SELECT submission.author FROM submission ORDER BY submission.scores DESC LIMIT 1	workshop_paper
SELECT submission.author FROM submission ORDER BY submission.scores DESC LIMIT 1	workshop_paper
SELECT submission.college , COUNT( * ) FROM submission GROUP BY submission.college	workshop_paper
SELECT submission.college , COUNT( * ) FROM submission GROUP BY submission.college	workshop_paper
SELECT submission.college FROM submission GROUP BY submission.college ORDER BY COUNT( * ) DESC LIMIT 1	workshop_paper
SELECT submission.college FROM submission GROUP BY submission.college ORDER BY COUNT( * ) DESC LIMIT 1	workshop_paper
SELECT submission.college FROM submission WHERE submission.scores > 90 INTERSECT SELECT submission.college FROM submission WHERE submission.scores<80	workshop_paper
SELECT submission.college FROM submission WHERE submission.scores > 90 INTERSECT SELECT submission.college FROM submission WHERE submission.scores<80	workshop_paper
SELECT submission.author , acceptance.result FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id	workshop_paper
SELECT submission.author , acceptance.result FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id	workshop_paper
SELECT acceptance.result FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id ORDER BY submission.scores DESC LIMIT 1	workshop_paper
SELECT acceptance.result FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id ORDER BY submission.scores DESC LIMIT 1	workshop_paper
SELECT submission.author , COUNT( DISTINCT acceptance.workshop_id ) FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id GROUP BY submission.author	workshop_paper
SELECT submission.author , COUNT( DISTINCT acceptance.workshop_id ) FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id GROUP BY submission.author	workshop_paper
SELECT submission.author FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id GROUP BY submission.author HAVING COUNT( DISTINCT acceptance.workshop_id ) > 1	workshop_paper
SELECT submission.author FROM acceptance JOIN submission ON acceptance.submission_id = submission.submission_id GROUP BY submission.author HAVING COUNT( DISTINCT acceptance.workshop_id ) > 1	workshop_paper
SELECT workshop.date , workshop.venue FROM workshop ORDER BY workshop.venue ASC	workshop_paper
SELECT workshop.date , workshop.venue FROM workshop ORDER BY workshop.venue ASC	workshop_paper
SELECT submission.author FROM submission WHERE submission.submission_id NOT IN (SELECT acceptance.submission_id FROM acceptance)	workshop_paper
SELECT submission.author FROM submission WHERE submission.submission_id NOT IN (SELECT acceptance.submission_id FROM acceptance)	workshop_paper
SELECT COUNT( * ) FROM investors	tracking_share_transactions
SELECT investors.investor_details FROM investors	tracking_share_transactions
SELECT DISTINCT lots.lot_details FROM lots	tracking_share_transactions
SELECT MAX( transactions.amount_of_transaction ) FROM transactions	tracking_share_transactions
SELECT transactions.date_of_transaction , transactions.share_count FROM transactions	tracking_share_transactions
SELECT SUM( transactions.share_count ) FROM transactions	tracking_share_transactions
SELECT transactions.transaction_id FROM transactions WHERE transactions.transaction_type_code = 'PUR'	tracking_share_transactions
SELECT transactions.date_of_transaction FROM transactions WHERE transactions.transaction_type_code = 'SALE'	tracking_share_transactions
SELECT AVG( transactions.amount_of_transaction ) FROM transactions WHERE transactions.transaction_type_code = 'SALE'	tracking_share_transactions
SELECT ref_transaction_types.transaction_type_description FROM ref_transaction_types WHERE ref_transaction_types.transaction_type_code = 'PUR'	tracking_share_transactions
SELECT MIN( transactions.amount_of_transaction ) FROM transactions WHERE transactions.transaction_type_code = 'PUR' AND transactions.share_count > 50	tracking_share_transactions
SELECT MAX( transactions.share_count ) FROM transactions WHERE transactions.amount_of_transaction<10000	tracking_share_transactions
SELECT transactions.date_of_transaction FROM transactions WHERE transactions.share_count > 100 OR transactions.amount_of_transaction > 1000	tracking_share_transactions
SELECT ref_transaction_types.transaction_type_description , transactions.date_of_transaction FROM ref_transaction_types JOIN transactions ON ref_transaction_types.transaction_type_code = transactions.transaction_type_code WHERE transactions.share_count<10	tracking_share_transactions
SELECT investors.investor_details FROM investors JOIN transactions ON investors.investor_id = transactions.investor_id WHERE transactions.share_count > 100	tracking_share_transactions
SELECT COUNT( DISTINCT transactions.transaction_type_code ) FROM transactions	tracking_share_transactions
SELECT lots.lot_details , lots.investor_id FROM lots	tracking_share_transactions
SELECT lots.lot_details FROM investors JOIN lots ON investors.investor_id = lots.investor_id WHERE investors.investor_details = 'l'	tracking_share_transactions
SELECT purchases.purchase_details FROM purchases JOIN transactions ON purchases.purchase_transaction_id = transactions.transaction_id WHERE transactions.amount_of_transaction > 10000	tracking_share_transactions
SELECT sales.sales_details , transactions.date_of_transaction FROM sales JOIN transactions ON sales.sales_transaction_id = transactions.transaction_id WHERE transactions.amount_of_transaction<3000	tracking_share_transactions
SELECT lots.lot_details FROM lots JOIN transactions_lots ON lots.lot_id = transactions_lots.transaction_id JOIN transactions ON transactions_lots.transaction_id = transactions.transaction_id WHERE transactions.share_count<50	tracking_share_transactions
SELECT lots.lot_details FROM lots JOIN transactions_lots ON lots.lot_id = transactions_lots.transaction_id JOIN transactions ON transactions_lots.transaction_id = transactions.transaction_id WHERE transactions.share_count > 100 AND transactions.transaction_type_code = 'PUR'	tracking_share_transactions
SELECT transactions.transaction_type_code , AVG( transactions.amount_of_transaction ) FROM transactions GROUP BY transactions.transaction_type_code	tracking_share_transactions
SELECT transactions.transaction_type_code , MAX( transactions.share_count ) , MIN( transactions.share_count ) FROM transactions GROUP BY transactions.transaction_type_code	tracking_share_transactions
SELECT transactions.investor_id , AVG( transactions.share_count ) FROM transactions GROUP BY transactions.investor_id	tracking_share_transactions
SELECT transactions.investor_id , AVG( transactions.share_count ) FROM transactions GROUP BY transactions.investor_id ORDER BY AVG( transactions.share_count ) ASC	tracking_share_transactions
SELECT transactions.investor_id , AVG( transactions.amount_of_transaction ) FROM transactions GROUP BY transactions.investor_id	tracking_share_transactions
SELECT transactions_lots.lot_id , AVG( transactions.amount_of_transaction ) FROM transactions JOIN transactions_lots ON transactions.transaction_id = transactions_lots.transaction_id GROUP BY transactions_lots.lot_id	tracking_share_transactions
SELECT transactions_lots.lot_id , AVG( transactions.amount_of_transaction ) FROM transactions JOIN transactions_lots ON transactions.transaction_id = transactions_lots.transaction_id GROUP BY transactions_lots.lot_id ORDER BY AVG( transactions.amount_of_transaction ) ASC	tracking_share_transactions
SELECT transactions.investor_id , COUNT( * ) FROM transactions WHERE transactions.transaction_type_code = 'SALE' GROUP BY transactions.investor_id	tracking_share_transactions
SELECT transactions.investor_id , COUNT( * ) FROM transactions GROUP BY transactions.investor_id	tracking_share_transactions
SELECT transactions.transaction_type_code FROM transactions GROUP BY transactions.transaction_type_code ORDER BY COUNT( * ) ASC LIMIT 1	tracking_share_transactions
SELECT transactions.transaction_type_code FROM transactions GROUP BY transactions.transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1	tracking_share_transactions
SELECT ref_transaction_types.transaction_type_description FROM ref_transaction_types JOIN transactions ON ref_transaction_types.transaction_type_code = transactions.transaction_type_code GROUP BY ref_transaction_types.transaction_type_code ORDER BY COUNT( * ) DESC LIMIT 1	tracking_share_transactions
SELECT transactions.investor_id , investors.investor_details FROM investors JOIN transactions ON investors.investor_id = transactions.investor_id GROUP BY transactions.investor_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_share_transactions
SELECT transactions.investor_id , investors.investor_details FROM investors JOIN transactions ON investors.investor_id = transactions.investor_id GROUP BY transactions.investor_id ORDER BY COUNT( * ) DESC LIMIT 3	tracking_share_transactions
SELECT transactions.investor_id FROM investors JOIN transactions ON investors.investor_id = transactions.investor_id GROUP BY transactions.investor_id HAVING COUNT( * ) >= 2	tracking_share_transactions
SELECT transactions.investor_id , investors.investor_details FROM investors JOIN transactions ON investors.investor_id = transactions.investor_id WHERE transactions.transaction_type_code = 'SALE' GROUP BY transactions.investor_id HAVING COUNT( * ) >= 2	tracking_share_transactions
SELECT transactions.date_of_transaction FROM transactions WHERE transactions.share_count >= 100 OR transactions.amount_of_transaction >= 100	tracking_share_transactions
SELECT sales.sales_details FROM sales UNION SELECT purchases.purchase_details FROM purchases	tracking_share_transactions
SELECT lots.lot_details FROM lots EXCEPT SELECT lots.lot_details FROM lots JOIN transactions_lots ON lots.lot_id = transactions_lots.lot_id	tracking_share_transactions
SELECT COUNT( * ) FROM hotels	cre_Theme_park
SELECT COUNT( * ) FROM hotels	cre_Theme_park
SELECT hotels.price_range FROM hotels	cre_Theme_park
SELECT hotels.price_range FROM hotels	cre_Theme_park
SELECT DISTINCT locations.location_name FROM locations	cre_Theme_park
SELECT DISTINCT locations.location_name FROM locations	cre_Theme_park
SELECT staff.name , staff.other_details FROM staff	cre_Theme_park
SELECT staff.name , staff.other_details FROM staff	cre_Theme_park
SELECT visitors.tourist_details FROM visitors	cre_Theme_park
SELECT visitors.tourist_details FROM visitors	cre_Theme_park
SELECT hotels.price_range FROM hotels WHERE hotels.star_rating_code = '5'	cre_Theme_park
SELECT hotels.price_range FROM hotels WHERE hotels.star_rating_code = '5'	cre_Theme_park
SELECT AVG( hotels.price_range ) FROM hotels WHERE hotels.star_rating_code = '5' AND hotels.pets_allowed_yn = 1	cre_Theme_park
SELECT AVG( hotels.price_range ) FROM hotels WHERE hotels.star_rating_code = '5' AND hotels.pets_allowed_yn = 1	cre_Theme_park
SELECT locations.address FROM locations WHERE locations.location_name = 'UK Gallery'	cre_Theme_park
SELECT locations.address FROM locations WHERE locations.location_name = 'UK Gallery'	cre_Theme_park
SELECT locations.other_details FROM locations WHERE locations.location_name = 'UK Gallery'	cre_Theme_park
SELECT locations.other_details FROM locations WHERE locations.location_name = 'UK Gallery'	cre_Theme_park
SELECT locations.location_name FROM locations WHERE locations.location_name LIKE '%film%'	cre_Theme_park
SELECT locations.location_name FROM locations WHERE locations.location_name LIKE '%film%'	cre_Theme_park
SELECT COUNT( DISTINCT photos.name ) FROM photos	cre_Theme_park
SELECT COUNT( DISTINCT photos.name ) FROM photos	cre_Theme_park
SELECT DISTINCT visits.visit_date FROM visits	cre_Theme_park
SELECT DISTINCT visits.visit_date FROM visits	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions WHERE tourist_attractions.how_to_get_there = 'bus'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions WHERE tourist_attractions.how_to_get_there = 'bus'	cre_Theme_park
SELECT tourist_attractions.name , tourist_attractions.opening_hours FROM tourist_attractions WHERE tourist_attractions.how_to_get_there = 'bus' OR tourist_attractions.how_to_get_there = 'walk'	cre_Theme_park
SELECT tourist_attractions.name , tourist_attractions.opening_hours FROM tourist_attractions WHERE tourist_attractions.how_to_get_there = 'bus' OR tourist_attractions.how_to_get_there = 'walk'	cre_Theme_park
SELECT ref_hotel_star_ratings.star_rating_description FROM hotels JOIN ref_hotel_star_ratings ON hotels.star_rating_code = ref_hotel_star_ratings.star_rating_code WHERE hotels.price_range > 10000	cre_Theme_park
SELECT ref_hotel_star_ratings.star_rating_description FROM hotels JOIN ref_hotel_star_ratings ON hotels.star_rating_code = ref_hotel_star_ratings.star_rating_code WHERE hotels.price_range > 10000	cre_Theme_park
SELECT museums.museum_details , tourist_attractions.opening_hours FROM museums JOIN tourist_attractions ON museums.museum_id = tourist_attractions.tourist_attraction_id	cre_Theme_park
SELECT museums.museum_details , tourist_attractions.opening_hours FROM museums JOIN tourist_attractions ON museums.museum_id = tourist_attractions.tourist_attraction_id	cre_Theme_park
SELECT tourist_attractions.name FROM photos JOIN tourist_attractions ON photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id WHERE photos.name = 'game1'	cre_Theme_park
SELECT tourist_attractions.name FROM photos JOIN tourist_attractions ON photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id WHERE photos.name = 'game1'	cre_Theme_park
SELECT photos.name , photos.description FROM photos JOIN tourist_attractions ON photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.name = 'film festival'	cre_Theme_park
SELECT photos.name , photos.description FROM photos JOIN tourist_attractions ON photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.name = 'film festival'	cre_Theme_park
SELECT royal_family.royal_family_details , tourist_attractions.how_to_get_there FROM royal_family JOIN tourist_attractions ON royal_family.royal_family_id = tourist_attractions.tourist_attraction_id	cre_Theme_park
SELECT royal_family.royal_family_details , tourist_attractions.how_to_get_there FROM royal_family JOIN tourist_attractions ON royal_family.royal_family_id = tourist_attractions.tourist_attraction_id	cre_Theme_park
SELECT shops.shop_details FROM shops JOIN tourist_attractions ON shops.shop_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.how_to_get_there = 'walk'	cre_Theme_park
SELECT shops.shop_details FROM shops JOIN tourist_attractions ON shops.shop_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.how_to_get_there = 'walk'	cre_Theme_park
SELECT staff.name FROM staff JOIN tourist_attractions ON staff.tourist_attraction_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.name = 'US museum'	cre_Theme_park
SELECT staff.name FROM staff JOIN tourist_attractions ON staff.tourist_attraction_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.name = 'US museum'	cre_Theme_park
SELECT street_markets.market_details FROM street_markets JOIN tourist_attractions ON street_markets.market_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.how_to_get_there = 'walk' OR tourist_attractions.how_to_get_there = 'bus'	cre_Theme_park
SELECT street_markets.market_details FROM street_markets JOIN tourist_attractions ON street_markets.market_id = tourist_attractions.tourist_attraction_id WHERE tourist_attractions.how_to_get_there = 'walk' OR tourist_attractions.how_to_get_there = 'bus'	cre_Theme_park
SELECT visits.visit_date , visits.visit_details FROM visitors JOIN visits ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Vincent'	cre_Theme_park
SELECT visits.visit_date , visits.visit_details FROM visitors JOIN visits ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Vincent'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visits.tourist_id = visitors.tourist_id WHERE visitors.tourist_details = 'Vincent'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visits.tourist_id = visitors.tourist_id WHERE visitors.tourist_details = 'Vincent'	cre_Theme_park
SELECT tourist_attractions.name , visits.visit_date FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Vincent' OR visitors.tourist_details = 'Vivian'	cre_Theme_park
SELECT tourist_attractions.name , visits.visit_date FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Vincent' OR visitors.tourist_details = 'Vivian'	cre_Theme_park
SELECT hotels.star_rating_code , AVG( hotels.price_range ) FROM hotels GROUP BY hotels.star_rating_code	cre_Theme_park
SELECT hotels.star_rating_code , AVG( hotels.price_range ) FROM hotels GROUP BY hotels.star_rating_code	cre_Theme_park
SELECT hotels.pets_allowed_yn , AVG( hotels.price_range ) FROM hotels GROUP BY hotels.pets_allowed_yn	cre_Theme_park
SELECT hotels.pets_allowed_yn , AVG( hotels.price_range ) FROM hotels GROUP BY hotels.pets_allowed_yn	cre_Theme_park
SELECT hotels.hotel_id , hotels.star_rating_code FROM hotels ORDER BY hotels.price_range ASC	cre_Theme_park
SELECT hotels.hotel_id , hotels.star_rating_code FROM hotels ORDER BY hotels.price_range ASC	cre_Theme_park
SELECT hotels.other_hotel_details FROM hotels ORDER BY hotels.price_range DESC LIMIT 3	cre_Theme_park
SELECT hotels.other_hotel_details FROM hotels ORDER BY hotels.price_range DESC LIMIT 3	cre_Theme_park
SELECT hotels.other_hotel_details , hotels.star_rating_code FROM hotels ORDER BY hotels.price_range ASC LIMIT 3	cre_Theme_park
SELECT hotels.other_hotel_details , hotels.star_rating_code FROM hotels ORDER BY hotels.price_range ASC LIMIT 3	cre_Theme_park
SELECT tourist_attractions.how_to_get_there FROM tourist_attractions GROUP BY tourist_attractions.how_to_get_there ORDER BY COUNT( * ) DESC LIMIT 1	cre_Theme_park
SELECT tourist_attractions.how_to_get_there FROM tourist_attractions GROUP BY tourist_attractions.how_to_get_there ORDER BY COUNT( * ) DESC LIMIT 1	cre_Theme_park
SELECT ref_attraction_types.attraction_type_description , tourist_attractions.attraction_type_code FROM ref_attraction_types JOIN tourist_attractions ON ref_attraction_types.attraction_type_code = tourist_attractions.attraction_type_code GROUP BY tourist_attractions.attraction_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Theme_park
SELECT ref_attraction_types.attraction_type_description , tourist_attractions.attraction_type_code FROM ref_attraction_types JOIN tourist_attractions ON ref_attraction_types.attraction_type_code = tourist_attractions.attraction_type_code GROUP BY tourist_attractions.attraction_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Theme_park
SELECT tourist_attractions.how_to_get_there , COUNT( * ) FROM tourist_attractions GROUP BY tourist_attractions.how_to_get_there	cre_Theme_park
SELECT tourist_attractions.how_to_get_there , COUNT( * ) FROM tourist_attractions GROUP BY tourist_attractions.how_to_get_there	cre_Theme_park
SELECT tourist_attractions.name , visits.tourist_attraction_id , COUNT( * ) FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id GROUP BY visits.tourist_attraction_id	cre_Theme_park
SELECT tourist_attractions.name , visits.tourist_attraction_id , COUNT( * ) FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id GROUP BY visits.tourist_attraction_id	cre_Theme_park
SELECT tourist_attractions.name , visits.tourist_attraction_id FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id GROUP BY visits.tourist_attraction_id HAVING COUNT( * ) >= 2	cre_Theme_park
SELECT tourist_attractions.name , visits.tourist_attraction_id FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id GROUP BY visits.tourist_attraction_id HAVING COUNT( * ) >= 2	cre_Theme_park
SELECT tourist_attractions.name , tourist_attractions.tourist_attraction_id FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id GROUP BY visits.tourist_attraction_id HAVING COUNT( * ) <= 1	cre_Theme_park
SELECT tourist_attractions.name , tourist_attractions.tourist_attraction_id FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id GROUP BY visits.tourist_attraction_id HAVING COUNT( * ) <= 1	cre_Theme_park
SELECT tourist_attractions.name FROM locations JOIN tourist_attractions ON locations.location_id = tourist_attractions.location_id WHERE locations.address = '660 Shea Crescent' OR tourist_attractions.how_to_get_there = 'walk'	cre_Theme_park
SELECT tourist_attractions.name FROM locations JOIN tourist_attractions ON locations.location_id = tourist_attractions.location_id WHERE locations.address = '660 Shea Crescent' OR tourist_attractions.how_to_get_there = 'walk'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN tourist_attraction_features ON tourist_attractions.tourist_attraction_id = tourist_attraction_features.tourist_attraction_id JOIN features ON tourist_attraction_features.feature_id = features.feature_id WHERE features.feature_details = 'parking' UNION SELECT tourist_attractions.name FROM tourist_attraction_features JOIN tourist_attractions ON tourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id JOIN features ON tourist_attraction_features.feature_id = features.feature_id WHERE features.feature_details = 'shopping'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN tourist_attraction_features ON tourist_attractions.tourist_attraction_id = tourist_attraction_features.tourist_attraction_id JOIN features ON tourist_attraction_features.feature_id = features.feature_id WHERE features.feature_details = 'parking' UNION SELECT tourist_attractions.name FROM tourist_attraction_features JOIN tourist_attractions ON tourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id JOIN features ON tourist_attraction_features.feature_id = features.feature_id WHERE features.feature_details = 'shopping'	cre_Theme_park
SELECT tourist_attractions.name FROM locations JOIN tourist_attractions ON locations.location_id = tourist_attractions.location_id WHERE locations.address = '254 Ottilie Junction' OR tourist_attractions.how_to_get_there = 'bus'	cre_Theme_park
SELECT tourist_attractions.name FROM locations JOIN tourist_attractions ON locations.location_id = tourist_attractions.location_id WHERE locations.address = '254 Ottilie Junction' OR tourist_attractions.how_to_get_there = 'bus'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Vincent' INTERSECT SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Marcelle'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Vincent' INTERSECT SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Marcelle'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Alison' EXCEPT SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Rosalind'	cre_Theme_park
SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Alison' EXCEPT SELECT tourist_attractions.name FROM tourist_attractions JOIN visits ON tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id JOIN visitors ON visitors.tourist_id = visits.tourist_id WHERE visitors.tourist_details = 'Rosalind'	cre_Theme_park
SELECT COUNT( * ) FROM visitors WHERE visitors.tourist_id NOT IN (SELECT visits.tourist_id FROM visits)	cre_Theme_park
SELECT COUNT( * ) FROM visitors WHERE visitors.tourist_id NOT IN (SELECT visits.tourist_id FROM visits)	cre_Theme_park
SELECT COUNT( * ) FROM video_games	game_1
SELECT COUNT( * ) FROM video_games	game_1
SELECT COUNT( DISTINCT video_games.gtype ) FROM video_games	game_1
SELECT COUNT( DISTINCT video_games.gtype ) FROM video_games	game_1
SELECT DISTINCT video_games.gtype FROM video_games	game_1
SELECT DISTINCT video_games.gtype FROM video_games	game_1
SELECT video_games.gname , video_games.gtype FROM video_games ORDER BY video_games.gname ASC	game_1
SELECT video_games.gname , video_games.gtype FROM video_games ORDER BY video_games.gname ASC	game_1
SELECT video_games.gname FROM video_games WHERE video_games.gtype = 'Collectible card game'	game_1
SELECT video_games.gname FROM video_games WHERE video_games.gtype = (SELECT AVG( video_games.gname ) FROM video_games)	game_1
SELECT video_games.gtype FROM video_games WHERE video_games.gname = 'Call of Destiny'	game_1
SELECT video_games.gtype FROM video_games WHERE video_games.gname = 'Call of Destiny'	game_1
SELECT COUNT( * ) FROM video_games WHERE video_games.gtype = 'Massively multiplayer online game'	game_1
SELECT COUNT( * ) FROM video_games WHERE video_games.gtype = 'Massively multiplayer online game'	game_1
SELECT video_games.gtype , COUNT( * ) FROM video_games GROUP BY video_games.gtype	game_1
SELECT video_games.gtype , COUNT( * ) FROM video_games GROUP BY video_games.gtype	game_1
SELECT video_games.gtype FROM video_games GROUP BY video_games.gtype ORDER BY COUNT( * ) DESC LIMIT 1	game_1
SELECT video_games.gtype FROM video_games GROUP BY video_games.gtype ORDER BY COUNT( * ) DESC LIMIT 1	game_1
SELECT video_games.gtype FROM video_games GROUP BY video_games.gtype ORDER BY COUNT( * ) ASC LIMIT 1	game_1
SELECT video_games.gtype FROM video_games GROUP BY video_games.gtype ORDER BY COUNT( * ) ASC LIMIT 1	game_1
SELECT student.stuid FROM student WHERE student.city_code = 'CHI'	game_1
SELECT student.stuid FROM student WHERE student.city_code = 'CHI'	game_1
SELECT student.stuid FROM student WHERE student.advisor = 1121	game_1
SELECT student.stuid FROM student WHERE student.advisor = 1121	game_1
SELECT student.fname FROM student WHERE student.major = 600	game_1
SELECT student.fname FROM student WHERE student.major = 600	game_1
SELECT student.major , AVG( student.age ) , MIN( student.age ) , MAX( student.age ) FROM student GROUP BY student.major	game_1
SELECT AVG( student.age ) , MIN( student.age ) , MAX( student.age ) FROM student GROUP BY student.major	game_1
SELECT student.advisor FROM student GROUP BY student.advisor HAVING COUNT( * ) >= 2	game_1
SELECT student.advisor FROM student GROUP BY student.advisor HAVING COUNT( * ) >= 2	game_1
SELECT COUNT( DISTINCT sportsinfo.sportname ) FROM sportsinfo	game_1
SELECT COUNT( DISTINCT sportsinfo.sportname ) FROM sportsinfo	game_1
SELECT COUNT( DISTINCT sportsinfo.stuid ) FROM sportsinfo	game_1
SELECT COUNT( DISTINCT sportsinfo.stuid ) FROM sportsinfo	game_1
SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.onscholarship = 'y'	game_1
SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.onscholarship = 'y'	game_1
SELECT student.lname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE sportsinfo.onscholarship = 'y'	game_1
SELECT student.lname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE sportsinfo.onscholarship = 'y'	game_1
SELECT SUM( sportsinfo.gamesplayed ) FROM sportsinfo	game_1
SELECT SUM( sportsinfo.gamesplayed ) FROM sportsinfo	game_1
SELECT SUM( sportsinfo.gamesplayed ) FROM sportsinfo WHERE sportsinfo.sportname = 'football' AND sportsinfo.onscholarship = 'y'	game_1
SELECT SUM( sportsinfo.gamesplayed ) FROM sportsinfo WHERE sportsinfo.sportname = 'football' AND sportsinfo.onscholarship = 'y'	game_1
SELECT sportsinfo.sportname , COUNT( * ) FROM sportsinfo GROUP BY sportsinfo.sportname	game_1
SELECT sportsinfo.sportname , COUNT( * ) FROM sportsinfo GROUP BY sportsinfo.sportname	game_1
SELECT sportsinfo.stuid , COUNT( * ) , SUM( sportsinfo.gamesplayed ) FROM sportsinfo GROUP BY sportsinfo.stuid	game_1
SELECT sportsinfo.stuid , COUNT( * ) , SUM( sportsinfo.gamesplayed ) FROM sportsinfo GROUP BY sportsinfo.stuid	game_1
SELECT sportsinfo.stuid FROM sportsinfo GROUP BY sportsinfo.stuid HAVING SUM( sportsinfo.hoursperweek ) > 10	game_1
SELECT sportsinfo.stuid FROM sportsinfo GROUP BY sportsinfo.stuid HAVING SUM( sportsinfo.hoursperweek ) > 10	game_1
SELECT student.fname , student.lname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid GROUP BY sportsinfo.stuid ORDER BY COUNT( * ) DESC LIMIT 1	game_1
SELECT student.fname , student.lname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid GROUP BY sportsinfo.stuid ORDER BY COUNT( * ) DESC LIMIT 1	game_1
SELECT sportsinfo.sportname FROM sportsinfo WHERE sportsinfo.onscholarship = 'y' GROUP BY sportsinfo.sportname ORDER BY COUNT( * ) DESC LIMIT 1	game_1
SELECT sportsinfo.sportname FROM sportsinfo WHERE sportsinfo.onscholarship = 'y' GROUP BY sportsinfo.sportname ORDER BY COUNT( * ) DESC LIMIT 1	game_1
SELECT student.stuid FROM student EXCEPT SELECT sportsinfo.stuid FROM sportsinfo	game_1
SELECT student.stuid FROM student EXCEPT SELECT sportsinfo.stuid FROM sportsinfo	game_1
SELECT student.stuid FROM student WHERE student.major = 600 INTERSECT SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.onscholarship = 'y'	game_1
SELECT student.stuid FROM student WHERE student.major = 600 INTERSECT SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.onscholarship = 'y'	game_1
SELECT student.stuid FROM student WHERE student.sex = 'f' INTERSECT SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.sportname = 'football'	game_1
SELECT student.stuid FROM student WHERE student.sex = 'f' INTERSECT SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.sportname = 'football'	game_1
SELECT student.stuid FROM student WHERE student.sex = 'm' EXCEPT SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.sportname = 'football'	game_1
SELECT student.stuid FROM student WHERE student.sex = 'm' EXCEPT SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.sportname = 'football'	game_1
SELECT SUM( sportsinfo.hoursperweek ) , SUM( sportsinfo.gamesplayed ) FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE student.fname = 'David' AND student.lname = 'Shieber'	game_1
SELECT SUM( sportsinfo.hoursperweek ) , SUM( sportsinfo.gamesplayed ) FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE student.fname = 'David' AND student.lname = 'Shieber'	game_1
SELECT SUM( sportsinfo.hoursperweek ) , SUM( sportsinfo.gamesplayed ) FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE student.age<20	game_1
SELECT SUM( sportsinfo.hoursperweek ) , SUM( sportsinfo.gamesplayed ) FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE student.age<20	game_1
SELECT COUNT( DISTINCT plays_games.stuid ) FROM plays_games	game_1
SELECT COUNT( DISTINCT plays_games.stuid ) FROM plays_games	game_1
SELECT student.stuid FROM student EXCEPT SELECT plays_games.stuid FROM plays_games	game_1
SELECT student.stuid FROM student EXCEPT SELECT plays_games.stuid FROM plays_games	game_1
SELECT sportsinfo.stuid FROM sportsinfo INTERSECT SELECT plays_games.stuid FROM plays_games	game_1
SELECT sportsinfo.stuid FROM sportsinfo INTERSECT SELECT plays_games.stuid FROM plays_games	game_1
SELECT plays_games.gameid , SUM( plays_games.hours_played ) FROM plays_games GROUP BY plays_games.gameid	game_1
SELECT plays_games.gameid , SUM( plays_games.hours_played ) FROM plays_games GROUP BY plays_games.gameid	game_1
SELECT plays_games.stuid , SUM( plays_games.hours_played ) FROM plays_games GROUP BY plays_games.stuid	game_1
SELECT plays_games.stuid , SUM( plays_games.hours_played ) FROM plays_games GROUP BY plays_games.stuid	game_1
SELECT video_games.gname FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid GROUP BY plays_games.gameid ORDER BY SUM( plays_games.hours_played ) DESC LIMIT 1	game_1
SELECT video_games.gname FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid GROUP BY plays_games.gameid ORDER BY SUM( plays_games.hours_played ) DESC LIMIT 1	game_1
SELECT video_games.gname FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid GROUP BY plays_games.gameid HAVING SUM( plays_games.hours_played ) >= 1000	game_1
SELECT video_games.gname FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid GROUP BY plays_games.gameid HAVING SUM( plays_games.hours_played ) >= 1000	game_1
SELECT video_games.gname FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid JOIN plays_games ON student.stuid = plays_games.stuid WHERE student.lname = 'Smith' AND student.fname = 'Linda'	game_1
SELECT video_games.gname FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid JOIN plays_games ON student.stuid = plays_games.stuid WHERE student.lname = 'Smith' AND student.fname = 'Linda'	game_1
SELECT student.lname , student.fname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE sportsinfo.sportname = 'Football' OR sportsinfo.sportname = 'Lacrosse'	game_1
SELECT student.lname , student.fname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE sportsinfo.sportname = 'Football' OR sportsinfo.sportname = 'Lacrosse'	game_1
SELECT sportsinfo.stuid FROM sportsinfo	game_1
student.fname , student.age	game_1
SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Call of Destiny' INTERSECT SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Works of Widenius' UNION SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Call of Destiny' INTERSECT SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Works of Widenius'	game_1
SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Call of Destiny' INTERSECT SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Works of Widenius' UNION SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Call of Destiny' INTERSECT SELECT plays_games.stuid FROM plays_games JOIN video_games ON plays_games.gameid = video_games.gameid WHERE video_games.gname = 'Works of Widenius'	game_1
SELECT customers.customer_name FROM customers	customers_and_addresses
SELECT customers.customer_name FROM customers	customers_and_addresses
SELECT COUNT( * ) FROM customers	customers_and_addresses
SELECT COUNT( * ) FROM customers	customers_and_addresses
SELECT AVG( order_items.order_quantity ) FROM order_items	customers_and_addresses
SELECT AVG( order_items.order_quantity ) FROM order_items	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.payment_method = 'Cash'	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.payment_method = 'Cash'	customers_and_addresses
SELECT customers.date_became_customer FROM customers WHERE customers.customer_id BETWEEN 10 and 20	customers_and_addresses
SELECT customers.date_became_customer FROM customers WHERE customers.customer_id BETWEEN 10 and 20	customers_and_addresses
SELECT customers.payment_method FROM customers GROUP BY customers.payment_method ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_addresses
SELECT customers.payment_method FROM customers GROUP BY customers.payment_method ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.payment_method = (SELECT customers.payment_method FROM customers GROUP BY customers.payment_method ORDER BY COUNT( * ) DESC LIMIT 1)	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.payment_method = (SELECT customers.payment_method FROM customers GROUP BY customers.payment_method ORDER BY COUNT( * ) DESC LIMIT 1)	customers_and_addresses
SELECT DISTINCT customers.payment_method FROM customers	customers_and_addresses
SELECT DISTINCT customers.payment_method FROM customers	customers_and_addresses
SELECT DISTINCT products.product_details FROM products	customers_and_addresses
SELECT DISTINCT products.product_details FROM products	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.customer_name LIKE '%Alex%'	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.customer_name LIKE '%Alex%'	customers_and_addresses
SELECT products.product_details FROM products WHERE products.product_details LIKE '%Latte%' OR products.product_details LIKE '%Americano%'	customers_and_addresses
SELECT products.product_details FROM products WHERE products.product_details LIKE '%Latte%' OR products.product_details LIKE '%Americano%'	customers_and_addresses
SELECT addresses.address_content FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE customers.customer_name = 'Maudie Kertzmann'	customers_and_addresses
SELECT addresses.address_content FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE customers.customer_name = 'Maudie Kertzmann'	customers_and_addresses
SELECT COUNT( * ) FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.city = 'Lake Geovannyton'	customers_and_addresses
SELECT COUNT( * ) FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.city = 'Lake Geovannyton'	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'Colorado'	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'Colorado'	customers_and_addresses
SELECT addresses.city FROM addresses WHERE addresses.city NOT IN (SELECT DISTINCT addresses.city FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id)	customers_and_addresses
SELECT addresses.city FROM addresses WHERE addresses.city NOT IN (SELECT DISTINCT addresses.city FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id GROUP BY addresses.city)	customers_and_addresses
SELECT addresses.city FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id GROUP BY addresses.city ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_addresses
SELECT addresses.city FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id GROUP BY addresses.city ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_addresses
SELECT DISTINCT addresses.city FROM addresses	customers_and_addresses
SELECT DISTINCT addresses.city FROM addresses	customers_and_addresses
SELECT addresses.city FROM addresses WHERE addresses.zip_postcode = 255	customers_and_addresses
SELECT addresses.city FROM addresses WHERE addresses.zip_postcode = 255	customers_and_addresses
SELECT addresses.state_province_county , addresses.country FROM addresses WHERE addresses.zip_postcode LIKE '%4%'	customers_and_addresses
SELECT addresses.state_province_county , addresses.country FROM addresses WHERE addresses.zip_postcode LIKE '%4%'	customers_and_addresses
SELECT addresses.country FROM addresses GROUP BY addresses.country HAVING COUNT( addresses.address_id ) > 4	customers_and_addresses
SELECT addresses.country FROM addresses GROUP BY addresses.country HAVING COUNT( addresses.address_id ) > 4	customers_and_addresses
SELECT customer_contact_channels.channel_code FROM customer_contact_channels GROUP BY customer_contact_channels.channel_code HAVING COUNT( customer_contact_channels.customer_id )<5	customers_and_addresses
SELECT customer_contact_channels.channel_code FROM customer_contact_channels GROUP BY customer_contact_channels.channel_code HAVING COUNT( customer_contact_channels.customer_id )<5	customers_and_addresses
SELECT DISTINCT customer_contact_channels.channel_code FROM customers JOIN customer_contact_channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customers.customer_name = 'Tillman Ernser'	customers_and_addresses
SELECT DISTINCT customer_contact_channels.channel_code FROM customers JOIN customer_contact_channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customers.customer_name = 'Tillman Ernser'	customers_and_addresses
SELECT MAX( customer_contact_channels.active_to_date ) FROM customers JOIN customer_contact_channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customers.customer_name = 'Tillman Ernser'	customers_and_addresses
SELECT MAX( customer_contact_channels.active_to_date ) FROM customers JOIN customer_contact_channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customers.customer_name = 'Tillman Ernser'	customers_and_addresses
SELECT AVG( customer_contact_channels.active_to_date ) FROM customer_contact_channels	customers_and_addresses
SELECT AVG( customer_contact_channels.active_from_date ) FROM customer_contact_channels	customers_and_addresses
SELECT customer_contact_channels.channel_code , customer_contact_channels.contact_number FROM customer_contact_channels ORDER BY customer_contact_channels.active_to_date DESC LIMIT 1	customers_and_addresses
SELECT customer_contact_channels.channel_code , customer_contact_channels.contact_number FROM customer_contact_channels ORDER BY customer_contact_channels.active_to_date DESC LIMIT 1	customers_and_addresses
SELECT customers.customer_name , customer_contact_channels.active_from_date FROM customers JOIN customer_contact_channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customer_contact_channels.channel_code = 'email'	customers_and_addresses
SELECT customers.customer_name , customer_contact_channels.active_from_date FROM customers JOIN customer_contact_channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customer_contact_channels.channel_code = 'email'	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE order_items.order_quantity = (SELECT MAX( order_items.order_quantity ) FROM order_items)	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE order_items.order_quantity = (SELECT MAX( order_items.order_quantity ) FROM order_items)	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id GROUP BY customers.customer_name ORDER BY SUM( order_items.order_quantity ) DESC LIMIT 1	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id GROUP BY customers.customer_name ORDER BY SUM( order_items.order_quantity ) DESC LIMIT 1	customers_and_addresses
SELECT customers.payment_method FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id GROUP BY customers.customer_name ORDER BY SUM( order_items.order_quantity ) ASC LIMIT 1	customers_and_addresses
SELECT customers.payment_method FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id GROUP BY customers.customer_name ORDER BY SUM( order_items.order_quantity ) ASC LIMIT 1	customers_and_addresses
SELECT COUNT( DISTINCT order_items.product_id ) FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customers.customer_name = 'Rodrick Heaney'	customers_and_addresses
SELECT COUNT( DISTINCT order_items.product_id ) FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customers.customer_name = 'Rodrick Heaney'	customers_and_addresses
SELECT SUM( order_items.order_quantity ) FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customers.customer_name = 'Rodrick Heaney'	customers_and_addresses
SELECT SUM( order_items.order_quantity ) FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customers.customer_name = 'Rodrick Heaney'	customers_and_addresses
SELECT COUNT( DISTINCT customer_orders.customer_id ) FROM customer_orders WHERE customer_orders.order_status = 'Cancelled'	customers_and_addresses
SELECT COUNT( DISTINCT customer_orders.customer_id ) FROM customer_orders WHERE customer_orders.order_status = 'Cancelled'	customers_and_addresses
SELECT COUNT( * ) FROM customer_orders WHERE customer_orders.order_details = 'Second time'	customers_and_addresses
SELECT COUNT( * ) FROM customer_orders WHERE customer_orders.order_details = 'Second time'	customers_and_addresses
SELECT customers.customer_name , customer_orders.order_date FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status = 'Delivered'	customers_and_addresses
SELECT customers.customer_name , customer_orders.order_date FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status = 'Delivered'	customers_and_addresses
SELECT SUM( order_items.order_quantity ) FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customer_orders.order_status = 'Cancelled'	customers_and_addresses
SELECT SUM( order_items.order_quantity ) FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customer_orders.order_status = 'Cancelled'	customers_and_addresses
SELECT SUM( order_items.order_quantity ) FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customer_orders.order_date<'2018-03-17 07:13:53'	customers_and_addresses
SELECT SUM( order_items.order_quantity ) FROM customer_orders JOIN order_items ON customer_orders.order_id = order_items.order_id WHERE customer_orders.order_date<'2018-03-17 07:13:53'	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id ORDER BY customer_orders.order_date DESC LIMIT 1	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id ORDER BY customer_orders.order_date DESC LIMIT 1	customers_and_addresses
SELECT products.product_details FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY order_items.product_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_addresses
SELECT products.product_details FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY order_items.product_id ORDER BY COUNT( * ) DESC LIMIT 1	customers_and_addresses
SELECT products.product_details , products.product_id FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY order_items.product_id ORDER BY SUM( order_items.order_quantity ) ASC LIMIT 1	customers_and_addresses
SELECT products.product_details , products.product_id FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY order_items.product_id ORDER BY SUM( order_items.order_quantity ) ASC LIMIT 1	customers_and_addresses
SELECT addresses.address_content FROM addresses WHERE addresses.city = 'East Julianaside,' AND addresses.state_province_county = 'East Julianaside,' UNION SELECT addresses.address_content FROM addresses WHERE addresses.city = 'Gleasonmouth,' AND addresses.state_province_county = 'Arizona'	customers_and_addresses
SELECT addresses.address_content FROM addresses WHERE addresses.city = 'East Julianaside,' AND addresses.state_province_county = 'East Julianaside,' UNION SELECT addresses.address_content FROM addresses WHERE addresses.city = 'Gleasonmouth,' AND addresses.state_province_county = 'Arizona'	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.payment_method != 'Cash'	customers_and_addresses
SELECT customers.customer_name FROM customers WHERE customers.payment_method != 'Cash'	customers_and_addresses
SELECT customers.customer_name FROM customers EXCEPT SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_details = 'Latte'	customers_and_addresses
SELECT customers.customer_name FROM customers EXCEPT SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_details = 'Latte'	customers_and_addresses
SELECT customers.customer_name FROM customers EXCEPT SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id	customers_and_addresses
SELECT customers.customer_name FROM customers EXCEPT SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_details = 'Latte' INTERSECT SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_details = 'Americano'	customers_and_addresses
SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_details = 'Latte' INTERSECT SELECT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id JOIN order_items ON customer_orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_details = 'Americano'	customers_and_addresses
SELECT COUNT( * ) FROM artist	music_4
SELECT COUNT( * ) FROM artist	music_4
SELECT artist.age FROM artist	music_4
SELECT artist.age FROM artist	music_4
SELECT AVG( artist.age ) FROM artist	music_4
SELECT AVG( artist.age ) FROM artist	music_4
SELECT artist.famous_title FROM artist WHERE artist.artist = 'Triumfall'	music_4
SELECT artist.famous_title FROM artist WHERE artist.artist = 'Triumfall'	music_4
SELECT DISTINCT artist.famous_release_date FROM artist	music_4
SELECT DISTINCT artist.famous_release_date FROM artist	music_4
SELECT music_festival.date_of_ceremony , music_festival.result FROM music_festival	music_4
SELECT music_festival.date_of_ceremony , music_festival.result FROM music_festival	music_4
SELECT music_festival.category FROM music_festival WHERE music_festival.result = 'Awarded'	music_4
SELECT music_festival.category FROM music_festival WHERE music_festival.result = 'Awarded'	music_4
SELECT MAX( volume.weeks_on_top ) , MIN( volume.weeks_on_top ) FROM volume	music_4
SELECT MAX( volume.weeks_on_top ) , MIN( volume.weeks_on_top ) FROM volume	music_4
SELECT volume.song FROM volume WHERE volume.weeks_on_top > 1	music_4
SELECT volume.song FROM volume WHERE volume.weeks_on_top > 1	music_4
SELECT volume.song FROM volume ORDER BY volume.song ASC	music_4
SELECT volume.song FROM volume ORDER BY volume.song ASC	music_4
SELECT COUNT( DISTINCT volume.artist_id ) FROM volume	music_4
SELECT COUNT( DISTINCT volume.artist_id ) FROM volume	music_4
SELECT music_festival.date_of_ceremony FROM music_festival JOIN volume ON music_festival.volume = volume.volume_id WHERE volume.weeks_on_top > 2	music_4
SELECT music_festival.date_of_ceremony FROM music_festival JOIN volume ON music_festival.volume = volume.volume_id WHERE volume.weeks_on_top > 2	music_4
SELECT volume.song FROM music_festival JOIN volume ON music_festival.volume = volume.volume_id WHERE music_festival.result = 'nominated'	music_4
SELECT volume.song FROM music_festival JOIN volume ON music_festival.volume = volume.volume_id WHERE music_festival.result = (SELECT volume.song FROM volume JOIN music_festival ON volume.volume_id = music_festival.volume)	music_4
SELECT volume.issue_date FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.artist = 'Gorgoroth'	music_4
SELECT volume.issue_date FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.artist = 'Gorgoroth'	music_4
SELECT volume.song FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.age >= 32	music_4
SELECT volume.song FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.age >= 32	music_4
SELECT AVG( volume.weeks_on_top ) FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.age <= 25	music_4
SELECT AVG( volume.weeks_on_top ) FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.age <= 25	music_4
SELECT artist.famous_title FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE volume.weeks_on_top > 2	music_4
SELECT artist.famous_title FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE volume.weeks_on_top > 2	music_4
SELECT artist.famous_title , artist.age FROM artist ORDER BY artist.age DESC	music_4
SELECT artist.famous_title , artist.age FROM artist ORDER BY artist.age DESC	music_4
SELECT artist.famous_release_date FROM artist ORDER BY artist.age DESC LIMIT 1	music_4
SELECT artist.famous_release_date FROM artist ORDER BY artist.age DESC LIMIT 1	music_4
SELECT music_festival.category , COUNT( * ) FROM music_festival GROUP BY music_festival.category	music_4
SELECT music_festival.category , COUNT( * ) FROM music_festival GROUP BY music_festival.category	music_4
SELECT music_festival.result FROM music_festival GROUP BY music_festival.result ORDER BY COUNT( * ) DESC LIMIT 1	music_4
SELECT music_festival.result FROM music_festival GROUP BY music_festival.result ORDER BY COUNT( * ) DESC LIMIT 1	music_4
SELECT music_festival.category FROM music_festival GROUP BY music_festival.category HAVING COUNT( * ) > 1	music_4
SELECT music_festival.category FROM music_festival GROUP BY music_festival.category HAVING COUNT( * ) > 1	music_4
SELECT volume.song FROM volume ORDER BY volume.weeks_on_top DESC LIMIT 1	music_4
SELECT volume.song FROM volume ORDER BY volume.weeks_on_top DESC LIMIT 1	music_4
SELECT artist.famous_title FROM artist WHERE artist.artist_id NOT IN (SELECT volume.artist_id FROM volume)	music_4
SELECT artist.famous_title FROM artist WHERE artist.artist_id NOT IN (SELECT volume.artist_id FROM volume)	music_4
SELECT artist.famous_title FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE volume.weeks_on_top > 2 INTERSECT SELECT artist.famous_title FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE volume.weeks_on_top<2	music_4
SELECT artist.famous_title FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE volume.weeks_on_top > 2 INTERSECT SELECT artist.famous_title FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE volume.weeks_on_top<2	music_4
SELECT music_festival.date_of_ceremony FROM music_festival WHERE music_festival.category = 'Best Song' AND music_festival.result = 'Awarded'	music_4
SELECT music_festival.date_of_ceremony FROM music_festival WHERE music_festival.category = 'Best Song' AND music_festival.result = 'Awarded'	music_4
SELECT volume.issue_date FROM volume ORDER BY volume.weeks_on_top ASC LIMIT 1	music_4
SELECT volume.issue_date FROM volume ORDER BY volume.weeks_on_top ASC LIMIT 1	music_4
SELECT COUNT( DISTINCT volume.artist_id ) FROM volume	music_4
SELECT COUNT( DISTINCT volume.artist_id ) FROM volume	music_4
SELECT music_festival.result , COUNT( * ) FROM music_festival GROUP BY music_festival.result ORDER BY COUNT( * ) DESC	music_4
SELECT music_festival.result , COUNT( * ) FROM music_festival GROUP BY music_festival.result ORDER BY COUNT( * ) DESC	music_4
SELECT volume.issue_date FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.age <= 23	music_4
SELECT volume.issue_date FROM artist JOIN volume ON artist.artist_id = volume.artist_id WHERE artist.age <= 23	music_4
SELECT COUNT( * ) FROM roller_coaster	roller_coaster
SELECT roller_coaster.name FROM roller_coaster ORDER BY roller_coaster.length ASC	roller_coaster
SELECT roller_coaster.length , roller_coaster.height FROM roller_coaster	roller_coaster
SELECT country.name FROM country WHERE country.languages != 'German'	roller_coaster
SELECT roller_coaster.status FROM roller_coaster WHERE roller_coaster.length > 3300 OR roller_coaster.height > 100	roller_coaster
SELECT roller_coaster.speed FROM roller_coaster ORDER BY roller_coaster.length DESC LIMIT 1	roller_coaster
SELECT AVG( roller_coaster.speed ) FROM roller_coaster	roller_coaster
SELECT roller_coaster.status , COUNT( * ) FROM roller_coaster GROUP BY roller_coaster.status	roller_coaster
SELECT roller_coaster.status FROM roller_coaster GROUP BY roller_coaster.status ORDER BY COUNT( * ) DESC LIMIT 1	roller_coaster
SELECT roller_coaster.status FROM roller_coaster GROUP BY roller_coaster.status HAVING COUNT( * ) > 2	roller_coaster
SELECT roller_coaster.park FROM roller_coaster ORDER BY roller_coaster.speed DESC LIMIT 1	roller_coaster
SELECT roller_coaster.name , country.name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id	roller_coaster
SELECT country.name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id GROUP BY country.name HAVING COUNT( * ) > 1	roller_coaster
SELECT country.name , country.population FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id ORDER BY roller_coaster.height DESC LIMIT 1	roller_coaster
SELECT country.name , AVG( roller_coaster.speed ) FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id GROUP BY country.name	roller_coaster
SELECT COUNT( * ) FROM country WHERE country.country_id NOT IN (SELECT roller_coaster.country_id FROM roller_coaster WHERE roller_coaster.length > 3000)	roller_coaster
SELECT country.name , country.area , country.population FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE roller_coaster.speed > roller_coaster.speed GROUP BY country.population UNION SELECT country.name , country.area , country.population FROM country JOIN country ON country.name = country.area WHERE roller_coaster.speed > country.population GROUP BY country.population	roller_coaster
SELECT COUNT( DISTINCT captain.rank ) FROM captain	ship_1
SELECT COUNT( DISTINCT captain.rank ) FROM captain	ship_1
SELECT COUNT( * ) , captain.rank FROM captain GROUP BY captain.rank	ship_1
SELECT COUNT( * ) , captain.rank FROM captain GROUP BY captain.rank	ship_1
SELECT COUNT( * ) , captain.rank FROM captain WHERE captain.age<50 GROUP BY captain.rank	ship_1
SELECT COUNT( * ) , captain.rank FROM captain WHERE captain.age<50 GROUP BY captain.rank	ship_1
SELECT captain.name FROM captain ORDER BY captain.age DESC	ship_1
SELECT captain.name FROM captain ORDER BY captain.age DESC	ship_1
SELECT captain.name , captain.class , captain.rank FROM captain	ship_1
SELECT captain.name , captain.class , captain.rank FROM captain	ship_1
SELECT captain.rank FROM captain GROUP BY captain.rank ORDER BY COUNT( * ) DESC LIMIT 1	ship_1
SELECT captain.rank FROM captain GROUP BY captain.rank ORDER BY COUNT( * ) DESC LIMIT 1	ship_1
SELECT captain.class FROM captain GROUP BY captain.class HAVING COUNT( * ) > 2	ship_1
SELECT captain.class FROM captain GROUP BY captain.class HAVING COUNT( * ) > 2	ship_1
SELECT captain.name FROM captain WHERE captain.rank = 'Midshipman' OR captain.rank = 'Lieutenant'	ship_1
SELECT captain.name FROM captain WHERE captain.rank = 'Midshipman' OR captain.rank = 'Lieutenant'	ship_1
SELECT AVG( captain.age ) , MIN( captain.age ) , captain.class FROM captain GROUP BY captain.class	ship_1
SELECT AVG( captain.age ) , MIN( captain.age ) , captain.class FROM captain GROUP BY captain.class	ship_1
SELECT captain.rank FROM captain WHERE captain.class = 'Cutter' INTERSECT SELECT captain.rank FROM captain WHERE captain.class = 'Armed schooner'	ship_1
SELECT captain.rank FROM captain WHERE captain.class = 'Cutter' INTERSECT SELECT captain.rank FROM captain WHERE captain.class = 'Armed schooner'	ship_1
SELECT captain.rank FROM captain EXCEPT SELECT captain.rank FROM captain WHERE captain.class = 'Third-rate ship of the line'	ship_1
SELECT captain.rank FROM captain EXCEPT SELECT captain.rank FROM captain WHERE captain.class = 'Third-rate ship of the line'	ship_1
SELECT captain.name FROM captain ORDER BY captain.age ASC LIMIT 1	ship_1
SELECT captain.name FROM captain ORDER BY captain.age ASC LIMIT 1	ship_1
SELECT COUNT( * ) FROM ship	ship_1
SELECT COUNT( * ) FROM ship	ship_1
SELECT ship.name , ship.type , ship.flag FROM ship ORDER BY ship.built_year DESC LIMIT 1	ship_1
SELECT ship.name , ship.type , ship.flag FROM ship ORDER BY ship.built_year DESC LIMIT 1	ship_1
SELECT COUNT( * ) , ship.flag FROM ship GROUP BY ship.flag	ship_1
SELECT COUNT( * ) , ship.flag FROM ship GROUP BY ship.flag	ship_1
SELECT ship.flag FROM ship GROUP BY ship.flag ORDER BY COUNT( * ) DESC LIMIT 1	ship_1
SELECT ship.flag FROM ship GROUP BY ship.flag ORDER BY COUNT( * ) DESC LIMIT 1	ship_1
SELECT ship.name FROM ship ORDER BY ship.built_year , ship.class ASC	ship_1
SELECT ship.name FROM ship ORDER BY ship.built_year , ship.class ASC	ship_1
SELECT ship.type FROM ship WHERE ship.flag = 'Panama' INTERSECT SELECT ship.type FROM ship WHERE ship.flag = 'Malta'	ship_1
SELECT ship.type FROM ship WHERE ship.flag = 'Panama' INTERSECT SELECT ship.type FROM ship WHERE ship.flag = 'Malta'	ship_1
SELECT ship.built_year FROM ship GROUP BY ship.built_year ORDER BY COUNT( * ) DESC LIMIT 1	ship_1
SELECT ship.built_year FROM ship GROUP BY ship.built_year ORDER BY COUNT( * ) DESC LIMIT 1	ship_1
SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id GROUP BY captain.ship_id HAVING COUNT( * ) > 1	ship_1
SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id GROUP BY captain.ship_id HAVING COUNT( * ) > 1	ship_1
SELECT ship.name , ship.class FROM ship WHERE ship.ship_id NOT IN (SELECT captain.ship_id FROM captain)	ship_1
SELECT ship.name , ship.class FROM ship WHERE ship.ship_id NOT IN (SELECT captain.ship_id FROM captain)	ship_1
SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id ORDER BY captain.age ASC LIMIT 1	ship_1
SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id ORDER BY captain.age ASC LIMIT 1	ship_1
SELECT ship.name , ship.flag FROM ship WHERE ship.ship_id NOT IN (SELECT captain.ship_id FROM captain WHERE captain.rank = 'Midshipman')	ship_1
SELECT ship.name , ship.flag FROM ship WHERE ship.ship_id NOT IN (SELECT captain.ship_id FROM captain WHERE captain.rank = 'Midshipman')	ship_1
SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id WHERE captain.rank = 'Midshipman' INTERSECT SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id WHERE captain.rank = 'Lieutenant'	ship_1
SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id WHERE captain.rank = 'Midshipman' INTERSECT SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id WHERE captain.rank = 'Lieutenant'	ship_1
SELECT hosting_city.host_city FROM hosting_city ORDER BY hosting_city.year DESC LIMIT 1	city_record
SELECT hosting_city.host_city FROM hosting_city ORDER BY hosting_city.year DESC LIMIT 1	city_record
SELECT match.match_id FROM match WHERE match.competition = '1994 FIFA World Cup qualification'	city_record
SELECT match.match_id FROM match WHERE match.competition = '1994 FIFA World Cup qualification'	city_record
SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city WHERE hosting_city.year > 2010	city_record
SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city WHERE hosting_city.year > 2010	city_record
SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city GROUP BY hosting_city.host_city ORDER BY COUNT( * ) DESC LIMIT 1	city_record
SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city GROUP BY hosting_city.host_city ORDER BY COUNT( * ) DESC LIMIT 1	city_record
SELECT match.venue FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city JOIN match ON hosting_city.match_id = match.match_id WHERE city.city = 'Nanjing ( Jiangsu )' AND match.competition = '1994 FIFA World Cup qualification'	city_record
SELECT match.venue FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city JOIN match ON hosting_city.match_id = match.match_id WHERE city.city = 'Nanjing ( Jiangsu )' AND match.competition = '1994 FIFA World Cup qualification'	city_record
SELECT temperature.jan FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE city.city = 'Shanghai'	city_record
SELECT temperature.jan FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE city.city = 'Shanghai'	city_record
SELECT hosting_city.year FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city WHERE city.city = 'Taizhou ( Zhejiang )'	city_record
SELECT hosting_city.year FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city WHERE city.city = 'Taizhou ( Zhejiang )'	city_record
SELECT city.city FROM city ORDER BY city.regional_population DESC LIMIT 3	city_record
SELECT city.city FROM city ORDER BY city.regional_population DESC LIMIT 3	city_record
SELECT city.city , city.gdp FROM city ORDER BY city.gdp ASC LIMIT 1	city_record
SELECT city.city , city.gdp FROM city ORDER BY city.gdp ASC LIMIT 1	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id ORDER BY temperature.feb DESC LIMIT 1	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id ORDER BY temperature.feb DESC LIMIT 1	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.jul<(SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.mar)	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.jul<(SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.mar)	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.mar<temperature.jul INTERSECT SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.mar<temperature.jul INTERSECT SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.mar<temperature.dec EXCEPT SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.mar<temperature.dec EXCEPT SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.feb > temperature.jun UNION SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city	city_record
SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.feb > temperature.jun UNION SELECT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city	city_record
SELECT city.city FROM city WHERE city.regional_population > 10000000	city_record
SELECT city.city FROM city WHERE city.regional_population > 10000000	city_record
SELECT city.city FROM city WHERE city.regional_population > 8000000 OR city.regional_population<5000000	city_record
SELECT city.city FROM city WHERE city.regional_population > 8000000 OR city.regional_population<5000000	city_record
SELECT COUNT( * ) , match.competition FROM match GROUP BY match.competition	city_record
SELECT COUNT( * ) , match.competition FROM match GROUP BY match.competition	city_record
SELECT match.venue FROM match ORDER BY match.date DESC	city_record
SELECT match.venue FROM match ORDER BY match.date DESC	city_record
SELECT city.gdp FROM city ORDER BY city.regional_population DESC LIMIT 1	city_record
SELECT city.gdp FROM city ORDER BY city.regional_population DESC LIMIT 1	city_record
SELECT city.gdp , city.regional_population FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city GROUP BY hosting_city.host_city HAVING COUNT( * ) > 1	city_record
SELECT city.gdp , city.regional_population FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city GROUP BY hosting_city.host_city HAVING COUNT( * ) > 1	city_record
SELECT individuals.individual_first_name , individuals.individual_middle_name , individuals.individual_last_name FROM individuals ORDER BY individuals.individual_last_name ASC	e_government
SELECT individuals.individual_first_name , individuals.individual_middle_name , individuals.individual_last_name FROM individuals ORDER BY individuals.individual_last_name ASC	e_government
SELECT DISTINCT forms.form_type_code FROM forms	e_government
SELECT DISTINCT forms.form_type_code FROM forms	e_government
SELECT forms.form_name FROM forms JOIN party_forms ON forms.form_id = party_forms.form_id GROUP BY party_forms.form_id ORDER BY COUNT( * ) DESC LIMIT 1	e_government
SELECT forms.form_name FROM forms JOIN party_forms ON forms.form_id = party_forms.form_id GROUP BY party_forms.form_id ORDER BY COUNT( * ) DESC LIMIT 1	e_government
SELECT parties.payment_method_code , parties.party_phone FROM parties WHERE parties.party_email = 'enrico09@example.com'	e_government
SELECT parties.payment_method_code , parties.party_phone FROM parties WHERE parties.party_email = 'enrico09@example.com'	e_government
SELECT parties.party_email FROM parties JOIN party_forms ON parties.party_id = party_forms.party_id WHERE party_forms.form_id = (SELECT party_forms.form_id FROM party_forms GROUP BY party_forms.form_id ORDER BY COUNT( * ) DESC LIMIT 1)	e_government
SELECT parties.party_email FROM parties JOIN party_forms ON parties.party_id = party_forms.party_id WHERE party_forms.form_id = (SELECT party_forms.form_id FROM party_forms GROUP BY party_forms.form_id ORDER BY COUNT( * ) DESC LIMIT 1)	e_government
SELECT organizations.organization_name FROM organizations ORDER BY organizations.date_formed ASC	e_government
SELECT organizations.organization_name FROM organizations ORDER BY organizations.date_formed ASC	e_government
SELECT organizations.organization_name FROM organizations ORDER BY organizations.date_formed DESC LIMIT 1	e_government
SELECT organizations.organization_name FROM organizations ORDER BY organizations.date_formed DESC LIMIT 1	e_government
SELECT individuals.individual_last_name FROM organizations JOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id JOIN individuals ON organization_contact_individuals.individual_id = individuals.individual_id WHERE organizations.organization_name = 'Labour Party' ORDER BY organization_contact_individuals.date_contact_to DESC LIMIT 1	e_government
SELECT individuals.individual_last_name FROM organizations JOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id JOIN individuals ON organization_contact_individuals.individual_id = individuals.individual_id WHERE organizations.organization_name = 'Labour party' ORDER BY organization_contact_individuals.date_contact_to DESC LIMIT 1	e_government
SELECT individuals.individual_last_name FROM organizations JOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id JOIN individuals ON organization_contact_individuals.individual_id = individuals.individual_id WHERE organizations.uk_vat_number = (SELECT MAX( organizations.uk_vat_number ) FROM organizations) ORDER BY organization_contact_individuals.date_contact_to ASC LIMIT 1	e_government
SELECT individuals.individual_last_name FROM organizations JOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id JOIN individuals ON organization_contact_individuals.individual_id = individuals.individual_id WHERE organizations.uk_vat_number = (SELECT MAX( organizations.uk_vat_number ) FROM organizations) ORDER BY organization_contact_individuals.date_contact_to ASC LIMIT 1	e_government
SELECT COUNT( * ) FROM services	e_government
SELECT COUNT( * ) FROM services	e_government
SELECT services.service_name FROM services EXCEPT SELECT services.service_name FROM services JOIN party_services ON services.service_id = party_services.service_id	e_government
SELECT services.service_name FROM services EXCEPT SELECT services.service_name FROM services JOIN party_services ON services.service_id = party_services.service_id	e_government
SELECT addresses.town_city FROM addresses UNION SELECT addresses.state_province_county FROM addresses	e_government
SELECT addresses.town_city FROM addresses UNION SELECT addresses.state_province_county FROM addresses	e_government
SELECT COUNT( * ) FROM addresses WHERE addresses.state_province_county = 'Colorado'	e_government
SELECT COUNT( * ) FROM addresses WHERE addresses.state_province_county = 'Colorado'	e_government
SELECT parties.payment_method_code FROM parties GROUP BY parties.payment_method_code HAVING COUNT( * ) > 3	e_government
SELECT parties.payment_method_code FROM parties GROUP BY parties.payment_method_code HAVING COUNT( * ) > 3	e_government
SELECT organizations.organization_name FROM organizations WHERE organizations.organization_name LIKE '%Party%'	e_government
SELECT organizations.organization_name FROM organizations WHERE organizations.organization_name LIKE '%Party%'	e_government
SELECT COUNT( DISTINCT parties.payment_method_code ) FROM parties	e_government
SELECT COUNT( DISTINCT parties.payment_method_code ) FROM parties	e_government
SELECT parties.party_email FROM parties JOIN party_services ON parties.party_id = party_services.customer_id GROUP BY parties.party_email ORDER BY COUNT( * ) DESC LIMIT 1	e_government
SELECT parties.party_email FROM parties JOIN party_services ON parties.party_id = party_services.customer_id GROUP BY parties.party_email ORDER BY COUNT( * ) DESC LIMIT 1	e_government
SELECT addresses.state_province_county FROM addresses WHERE addresses.line_1_number_building LIKE '%6862 Kaitlyn Knolls%'	e_government
SELECT addresses.state_province_county FROM addresses WHERE addresses.line_1_number_building LIKE '%6862 Kaitlyn Knolls%'	e_government
SELECT organizations.organization_name FROM organizations JOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id GROUP BY organizations.organization_name ORDER BY COUNT( * ) DESC LIMIT 1	e_government
SELECT organizations.organization_name FROM organizations JOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id GROUP BY organizations.organization_name ORDER BY COUNT( * ) DESC LIMIT 1	e_government
SELECT DISTINCT individuals.individual_last_name FROM individuals JOIN organization_contact_individuals ON individuals.individual_id = organization_contact_individuals.individual_id	e_government
SELECT DISTINCT individuals.individual_last_name FROM individuals JOIN organization_contact_individuals ON individuals.individual_id = organization_contact_individuals.individual_id	e_government
SELECT COUNT( * ) FROM driver	school_bus
SELECT driver.name , driver.home_city , driver.age FROM driver	school_bus
SELECT driver.party , COUNT( * ) FROM driver GROUP BY driver.party	school_bus
SELECT driver.name FROM driver ORDER BY driver.age DESC	school_bus
SELECT DISTINCT driver.home_city FROM driver	school_bus
SELECT driver.home_city FROM driver GROUP BY driver.home_city ORDER BY COUNT( * ) DESC LIMIT 1	school_bus
SELECT driver.party FROM driver WHERE driver.home_city = 'Hartford' AND driver.age > 40	school_bus
SELECT driver.home_city FROM driver WHERE driver.age > 40 GROUP BY driver.home_city HAVING COUNT( * ) >= 2	school_bus
SELECT driver.home_city FROM driver EXCEPT SELECT driver.home_city FROM driver WHERE driver.age > 40	school_bus
SELECT driver.name FROM driver WHERE driver.driver_id NOT IN (SELECT school_bus.driver_id FROM school_bus)	school_bus
SELECT school.type FROM school GROUP BY school.type HAVING COUNT( * ) = 2	school_bus
SELECT school.school , driver.name FROM school_bus JOIN school ON school_bus.school_id = school.school_id JOIN driver ON school_bus.driver_id = driver.driver_id	school_bus
SELECT MAX( school_bus.years_working ) , MIN( school_bus.years_working ) , AVG( school_bus.years_working ) FROM school_bus	school_bus
SELECT school.school , school.type FROM school WHERE school.school_id NOT IN (SELECT school_bus.school_id FROM school_bus)	school_bus
SELECT school.type , COUNT( * ) FROM school_bus JOIN school ON school_bus.school_id = school.school_id GROUP BY school.type	school_bus
SELECT COUNT( * ) FROM driver WHERE driver.home_city = 'Hartford' OR driver.age<40	school_bus
SELECT driver.name FROM driver WHERE driver.home_city = 'Hartford' AND driver.age<40	school_bus
SELECT driver.name FROM driver JOIN school_bus ON driver.driver_id = school_bus.driver_id ORDER BY school_bus.years_working DESC LIMIT 1	school_bus
SELECT COUNT( * ) FROM flight WHERE flight.velocity > 200	flight_company
SELECT flight.vehicle_flight_number , flight.date , flight.pilot FROM flight ORDER BY flight.altitude ASC	flight_company
SELECT airport.id , airport.country , airport.city , airport.name FROM airport ORDER BY airport.name ASC	flight_company
SELECT MAX( operate_company.group_equity_shareholding ) FROM operate_company	flight_company
SELECT AVG( flight.velocity ) FROM flight WHERE flight.pilot = 'Thompson'	flight_company
SELECT operate_company.name , operate_company.type FROM operate_company JOIN flight ON operate_company.id = flight.company_id	flight_company
SELECT airport.name FROM airport WHERE airport.country != 'Iceland'	flight_company
SELECT DISTINCT operate_company.type FROM operate_company JOIN flight ON operate_company.id = flight.company_id WHERE flight.velocity<200	flight_company
SELECT operate_company.id , operate_company.name FROM operate_company JOIN flight ON operate_company.id = flight.company_id GROUP BY operate_company.id HAVING COUNT( * ) > 1	flight_company
SELECT airport.id , airport.name , airport.iata FROM airport JOIN flight ON airport.id = flight.airport_id GROUP BY flight.id ORDER BY COUNT( * ) DESC LIMIT 1	flight_company
SELECT DISTINCT flight.pilot FROM airport JOIN flight ON airport.id = flight.airport_id WHERE airport.country = 'United States' OR airport.name = 'Billund Airport'	flight_company
SELECT operate_company.type , COUNT( * ) FROM operate_company GROUP BY operate_company.type ORDER BY COUNT( * ) DESC LIMIT 1	flight_company
SELECT COUNT( * ) FROM airport WHERE airport.id NOT IN (SELECT flight.airport_id FROM flight WHERE flight.pilot = 'Thompson')	flight_company
SELECT flight.pilot FROM operate_company JOIN flight ON operate_company.id = flight.company_id WHERE operate_company.principal_activities = 'Cargo' INTERSECT SELECT flight.pilot FROM operate_company JOIN flight ON operate_company.id = flight.company_id WHERE operate_company.principal_activities = 'Catering services'	flight_company
SELECT airport.name FROM airport WHERE airport.name LIKE '%international%'	flight_company
SELECT airport.id , COUNT( * ) FROM operate_company JOIN flight ON operate_company.id = flight.company_id JOIN airport ON flight.airport_id = airport.id GROUP BY airport.id	flight_company
SELECT COUNT( * ) , airport.country FROM airport GROUP BY airport.country	flight_company
SELECT airport.country FROM airport GROUP BY airport.country HAVING COUNT( * ) > 2	flight_company
SELECT flight.pilot FROM flight GROUP BY flight.pilot ORDER BY COUNT( * ) DESC LIMIT 1	flight_company
SELECT COUNT( * ) FROM accounts	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM accounts	cre_Docs_and_Epenses
SELECT accounts.account_id , accounts.account_details FROM accounts	cre_Docs_and_Epenses
SELECT accounts.account_id , accounts.account_details FROM accounts	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM statements	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM statements	cre_Docs_and_Epenses
SELECT statements.statement_id , statements.statement_details FROM statements	cre_Docs_and_Epenses
SELECT statements.statement_id , statements.statement_details FROM statements	cre_Docs_and_Epenses
SELECT accounts.statement_id , statements.statement_details , accounts.account_details FROM accounts JOIN statements ON accounts.statement_id = statements.statement_id	cre_Docs_and_Epenses
SELECT accounts.statement_id , statements.statement_details , accounts.account_details FROM accounts JOIN statements ON accounts.statement_id = statements.statement_id	cre_Docs_and_Epenses
SELECT accounts.statement_id , COUNT( * ) FROM accounts GROUP BY accounts.statement_id	cre_Docs_and_Epenses
SELECT accounts.statement_id , COUNT( * ) FROM accounts GROUP BY accounts.statement_id	cre_Docs_and_Epenses
SELECT accounts.statement_id , statements.statement_details FROM accounts JOIN statements ON accounts.statement_id = statements.statement_id GROUP BY accounts.statement_id ORDER BY COUNT( * ) DESC LIMIT 1	cre_Docs_and_Epenses
SELECT accounts.statement_id , statements.statement_details FROM accounts JOIN statements ON accounts.statement_id = statements.statement_id GROUP BY accounts.statement_id ORDER BY COUNT( * ) DESC LIMIT 1	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM documents	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM documents	cre_Docs_and_Epenses
SELECT documents.document_type_code , documents.document_name , documents.document_description FROM documents WHERE documents.document_name = 'Noel CV' OR documents.document_name = 'King Book'	cre_Docs_and_Epenses
SELECT documents.document_type_code , documents.document_name , documents.document_description FROM documents WHERE documents.document_name = 'Noel CV' OR documents.document_name = 'King Book'	cre_Docs_and_Epenses
SELECT documents.document_id , documents.document_name FROM documents	cre_Docs_and_Epenses
SELECT documents.document_id , documents.document_name FROM documents	cre_Docs_and_Epenses
SELECT documents.document_name , documents.document_id FROM documents WHERE documents.document_type_code = 'BK'	cre_Docs_and_Epenses
SELECT documents.document_name , documents.document_id FROM documents WHERE documents.document_type_code = 'BK'	cre_Docs_and_Epenses
SELECT COUNT( * ) , documents.project_id FROM documents WHERE documents.document_type_code = 'BK' GROUP BY documents.project_id	cre_Docs_and_Epenses
SELECT COUNT( * ) , documents.project_id FROM documents WHERE documents.document_type_code = 'BK' GROUP BY documents.project_id	cre_Docs_and_Epenses
SELECT documents.document_name , documents.document_date FROM documents JOIN projects ON documents.project_id = projects.project_id WHERE projects.project_details = 'Graph Database project'	cre_Docs_and_Epenses
SELECT documents.document_name , documents.document_date FROM documents JOIN projects ON documents.project_id = projects.project_id WHERE projects.project_details = 'Graph Database project'	cre_Docs_and_Epenses
SELECT documents.project_id , COUNT( * ) FROM documents GROUP BY documents.project_id	cre_Docs_and_Epenses
SELECT documents.project_id , COUNT( * ) FROM documents GROUP BY documents.project_id	cre_Docs_and_Epenses
SELECT documents.project_id FROM documents GROUP BY documents.project_id ORDER BY COUNT( * ) ASC LIMIT 1	cre_Docs_and_Epenses
SELECT documents.project_id FROM documents GROUP BY documents.project_id ORDER BY COUNT( * ) ASC LIMIT 1	cre_Docs_and_Epenses
SELECT documents.project_id FROM documents GROUP BY documents.project_id HAVING COUNT( * ) >= 2	cre_Docs_and_Epenses
SELECT documents.project_id FROM documents GROUP BY documents.project_id HAVING COUNT( * ) >= 2	cre_Docs_and_Epenses
SELECT documents.document_type_code , COUNT( * ) FROM documents GROUP BY documents.document_type_code	cre_Docs_and_Epenses
SELECT documents.document_type_code , COUNT( * ) FROM documents GROUP BY documents.document_type_code	cre_Docs_and_Epenses
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Docs_and_Epenses
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Docs_and_Epenses
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING COUNT( * )<3	cre_Docs_and_Epenses
SELECT documents.document_type_code FROM documents GROUP BY documents.document_type_code HAVING COUNT( * )<3	cre_Docs_and_Epenses
SELECT statements.statement_details , documents.document_name FROM statements JOIN documents ON statements.statement_id = documents.document_id WHERE statements.statement_details = 'Private Project'	cre_Docs_and_Epenses
SELECT statements.statement_details , documents.document_name FROM statements JOIN documents ON statements.statement_id = documents.document_id WHERE statements.statement_details = 'Private Project'	cre_Docs_and_Epenses
SELECT ref_document_types.document_type_code , ref_document_types.document_type_name , ref_document_types.document_type_description FROM ref_document_types	cre_Docs_and_Epenses
SELECT ref_document_types.document_type_code , ref_document_types.document_type_name , ref_document_types.document_type_description FROM ref_document_types	cre_Docs_and_Epenses
SELECT ref_document_types.document_type_description FROM ref_document_types WHERE ref_document_types.document_type_name = 'Film'	cre_Docs_and_Epenses
SELECT ref_document_types.document_type_description FROM ref_document_types WHERE ref_document_types.document_type_name = 'Film'	cre_Docs_and_Epenses
SELECT ref_document_types.document_type_name , ref_document_types.document_type_description , documents.document_date FROM ref_document_types JOIN documents ON ref_document_types.document_type_code = documents.document_type_code	cre_Docs_and_Epenses
SELECT ref_document_types.document_type_name , ref_document_types.document_type_description , documents.document_date FROM ref_document_types JOIN documents ON ref_document_types.document_type_code = documents.document_type_code	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM projects	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM projects	cre_Docs_and_Epenses
SELECT projects.project_id , projects.project_details FROM projects	cre_Docs_and_Epenses
SELECT projects.project_id , projects.project_details FROM projects	cre_Docs_and_Epenses
SELECT projects.project_id , projects.project_details FROM projects JOIN documents ON projects.project_id = documents.project_id GROUP BY projects.project_id HAVING COUNT( * ) > 2	cre_Docs_and_Epenses
SELECT projects.project_id , projects.project_details FROM projects JOIN documents ON projects.project_id = documents.project_id GROUP BY projects.project_id HAVING COUNT( * ) > 2	cre_Docs_and_Epenses
SELECT projects.project_details FROM projects JOIN documents ON projects.project_id = documents.project_id WHERE documents.document_name = 'King Book'	cre_Docs_and_Epenses
SELECT projects.project_details FROM projects JOIN documents ON projects.project_id = documents.project_id WHERE documents.document_name = 'King Book'	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM ref_budget_codes	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM ref_budget_codes	cre_Docs_and_Epenses
SELECT ref_budget_codes.budget_type_code , ref_budget_codes.budget_type_description FROM ref_budget_codes	cre_Docs_and_Epenses
SELECT ref_budget_codes.budget_type_code , ref_budget_codes.budget_type_description FROM ref_budget_codes	cre_Docs_and_Epenses
SELECT ref_budget_codes.budget_type_description FROM ref_budget_codes WHERE ref_budget_codes.budget_type_code = 'ORG'	cre_Docs_and_Epenses
SELECT ref_budget_codes.budget_type_description FROM ref_budget_codes WHERE ref_budget_codes.budget_type_code = 'ORG'	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM documents_with_expenses	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM documents_with_expenses	cre_Docs_and_Epenses
SELECT documents_with_expenses.document_id FROM documents_with_expenses WHERE documents_with_expenses.budget_type_code = 'SF'	cre_Docs_and_Epenses
SELECT documents_with_expenses.document_id FROM documents_with_expenses WHERE documents_with_expenses.budget_type_code = 'SF'	cre_Docs_and_Epenses
SELECT ref_budget_codes.budget_type_code , ref_budget_codes.budget_type_description , documents_with_expenses.document_id FROM documents_with_expenses JOIN ref_budget_codes ON documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code	cre_Docs_and_Epenses
SELECT ref_budget_codes.budget_type_code , ref_budget_codes.budget_type_description , documents_with_expenses.document_id FROM documents_with_expenses JOIN ref_budget_codes ON documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code	cre_Docs_and_Epenses
SELECT documents_with_expenses.document_id FROM documents_with_expenses JOIN ref_budget_codes ON documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code WHERE ref_budget_codes.budget_type_description = 'Government'	cre_Docs_and_Epenses
SELECT documents_with_expenses.document_id FROM documents_with_expenses JOIN ref_budget_codes ON documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code WHERE ref_budget_codes.budget_type_description = 'Government'	cre_Docs_and_Epenses
SELECT documents_with_expenses.budget_type_code , COUNT( * ) FROM documents_with_expenses GROUP BY documents_with_expenses.budget_type_code	cre_Docs_and_Epenses
SELECT documents_with_expenses.budget_type_code , COUNT( * ) FROM documents_with_expenses GROUP BY documents_with_expenses.budget_type_code	cre_Docs_and_Epenses
SELECT documents_with_expenses.budget_type_code FROM documents_with_expenses GROUP BY documents_with_expenses.budget_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Docs_and_Epenses
SELECT documents_with_expenses.budget_type_code FROM documents_with_expenses GROUP BY documents_with_expenses.budget_type_code ORDER BY COUNT( * ) DESC LIMIT 1	cre_Docs_and_Epenses
SELECT documents.document_id FROM documents EXCEPT SELECT documents_with_expenses.document_id FROM documents_with_expenses	cre_Docs_and_Epenses
SELECT documents.document_id FROM documents EXCEPT SELECT documents_with_expenses.document_id FROM documents_with_expenses	cre_Docs_and_Epenses
SELECT documents.document_id FROM documents WHERE documents.document_type_code = 'CV' EXCEPT SELECT documents_with_expenses.document_id FROM documents_with_expenses	cre_Docs_and_Epenses
SELECT documents.document_id FROM documents WHERE documents.document_type_code = 'CV' EXCEPT SELECT documents_with_expenses.document_id FROM documents_with_expenses	cre_Docs_and_Epenses
SELECT documents.document_id FROM documents JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id WHERE documents.document_name LIKE '%s%'	cre_Docs_and_Epenses
SELECT documents.document_id FROM documents JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id WHERE documents.document_name LIKE '%s%'	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM documents WHERE documents.document_id NOT IN (SELECT documents_with_expenses.document_id FROM documents_with_expenses)	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM documents WHERE documents.document_id NOT IN (SELECT documents_with_expenses.document_id FROM documents_with_expenses)	cre_Docs_and_Epenses
SELECT documents.document_date FROM documents JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id WHERE documents_with_expenses.budget_type_code = 'GV' INTERSECT SELECT documents.document_date FROM documents JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id WHERE documents_with_expenses.budget_type_code = 'SF'	cre_Docs_and_Epenses
SELECT documents.document_date FROM documents JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id WHERE documents_with_expenses.budget_type_code = 'GV' INTERSECT SELECT documents.document_date FROM documents JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id WHERE documents_with_expenses.budget_type_code = 'SF'	cre_Docs_and_Epenses
SELECT MAX( accounts.account_details ) FROM accounts UNION SELECT accounts.account_details FROM accounts WHERE accounts.account_details LIKE '%5%'	cre_Docs_and_Epenses
SELECT MAX( accounts.account_details ) FROM accounts UNION SELECT accounts.account_details FROM accounts WHERE accounts.account_details LIKE '%5%'	cre_Docs_and_Epenses
SELECT COUNT( * ) FROM scientists	scientist_1
SELECT COUNT( * ) FROM scientists	scientist_1
SELECT SUM( projects.hours ) FROM projects	scientist_1
SELECT SUM( projects.hours ) FROM projects	scientist_1
SELECT COUNT( DISTINCT assignedto.scientist ) FROM assignedto	scientist_1
SELECT COUNT( DISTINCT assignedto.scientist ) FROM assignedto	scientist_1
SELECT COUNT( DISTINCT projects.name ) FROM projects	scientist_1
SELECT COUNT( DISTINCT projects.name ) FROM projects	scientist_1
SELECT AVG( projects.hours ) FROM projects	scientist_1
SELECT AVG( projects.hours ) FROM projects	scientist_1
SELECT projects.name FROM projects ORDER BY projects.hours DESC LIMIT 1	scientist_1
SELECT projects.name FROM projects ORDER BY projects.hours DESC LIMIT 1	scientist_1
SELECT projects.name FROM projects WHERE projects.hours > (SELECT AVG( projects.hours ) FROM projects)	scientist_1
SELECT projects.name FROM projects WHERE projects.hours > (SELECT AVG( projects.hours ) FROM projects)	scientist_1
SELECT projects.name , projects.hours FROM projects JOIN assignedto ON projects.code = assignedto.project GROUP BY assignedto.project ORDER BY COUNT( * ) DESC LIMIT 1	scientist_1
SELECT projects.name , projects.hours FROM projects JOIN assignedto ON projects.code = assignedto.project GROUP BY assignedto.project ORDER BY COUNT( * ) DESC LIMIT 1	scientist_1
SELECT projects.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE scientists.name LIKE '%Smith%'	scientist_1
SELECT projects.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE scientists.name LIKE '%Smith%'	scientist_1
SELECT SUM( projects.hours ) FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE scientists.name = 'Michael Rogers' OR scientists.name = 'Carol Smith'	scientist_1
SELECT SUM( projects.hours ) FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE scientists.name = 'Michael Rogers' OR scientists.name = 'Carol Smith'	scientist_1
SELECT projects.name FROM projects WHERE projects.hours BETWEEN 100 and 300	scientist_1
SELECT projects.name FROM projects WHERE projects.hours BETWEEN 100 and 300	scientist_1
SELECT scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.name = 'Matter of Time' INTERSECT SELECT scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.name = 'A Puzzling Parallax'	scientist_1
SELECT scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.name = 'Matter of Time' INTERSECT SELECT scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.name = 'A Puzzling Pattern'	scientist_1
SELECT scientists.name FROM scientists ORDER BY scientists.name ASC	scientist_1
SELECT scientists.name FROM scientists ORDER BY scientists.name ASC	scientist_1
SELECT COUNT( * ) , projects.name FROM projects JOIN assignedto ON projects.code = assignedto.project GROUP BY projects.name	scientist_1
SELECT COUNT( * ) , projects.name FROM projects JOIN assignedto ON projects.code = assignedto.project GROUP BY projects.name	scientist_1
SELECT COUNT( * ) , projects.name FROM projects JOIN assignedto ON projects.code = assignedto.project WHERE projects.hours > 300 GROUP BY projects.name	scientist_1
SELECT COUNT( * ) , projects.name FROM projects JOIN assignedto ON projects.code = assignedto.project WHERE projects.hours > 300 GROUP BY projects.name	scientist_1
SELECT COUNT( * ) , scientists.name FROM scientists JOIN assignedto ON scientists.ssn = assignedto.scientist GROUP BY scientists.name	scientist_1
SELECT COUNT( * ) , scientists.name FROM scientists JOIN assignedto ON scientists.ssn = assignedto.scientist GROUP BY scientists.name	scientist_1
SELECT scientists.ssn , scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.hours = (SELECT MAX( projects.hours ) FROM projects)	scientist_1
SELECT scientists.ssn , scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.hours = (SELECT MAX( projects.hours ) FROM projects)	scientist_1
SELECT scientists.name FROM assignedto JOIN scientists ON assignedto.scientist = scientists.ssn	scientist_1
SELECT scientists.name FROM assignedto JOIN scientists ON assignedto.scientist = scientists.ssn	scientist_1
SELECT projects.name FROM projects WHERE projects.code NOT IN (SELECT assignedto.project FROM assignedto)	scientist_1
SELECT projects.name FROM projects WHERE projects.code NOT IN (SELECT assignedto.project FROM assignedto)	scientist_1
SELECT scientists.name FROM scientists WHERE scientists.ssn NOT IN (SELECT assignedto.scientist FROM assignedto)	scientist_1
SELECT scientists.name FROM scientists WHERE scientists.ssn NOT IN (SELECT assignedto.scientist FROM assignedto)	scientist_1
SELECT COUNT( * ) FROM scientists WHERE scientists.ssn NOT IN (SELECT assignedto.scientist FROM assignedto)	scientist_1
SELECT COUNT( * ) FROM scientists WHERE scientists.ssn NOT IN (SELECT assignedto.scientist FROM assignedto)	scientist_1
SELECT scientists.name FROM scientists EXCEPT SELECT scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.hours = (SELECT MAX( projects.hours ) FROM projects)	scientist_1
SELECT scientists.name FROM scientists EXCEPT SELECT scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.hours = (SELECT MAX( projects.hours ) FROM projects)	scientist_1
SELECT scientists.name , projects.name , projects.hours FROM scientists JOIN assignedto ON scientists.ssn = assignedto.scientist JOIN projects ON assignedto.project = projects.code ORDER BY projects.name , scientists.name ASC	scientist_1
SELECT scientists.name , projects.name , projects.hours FROM scientists JOIN assignedto ON scientists.ssn = assignedto.scientist JOIN projects ON assignedto.project = projects.code ORDER BY projects.name , scientists.name ASC	scientist_1
SELECT projects.name , scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.hours = (SELECT MIN( projects.hours ) FROM projects)	scientist_1
SELECT projects.name , scientists.name FROM assignedto JOIN projects ON assignedto.project = projects.code JOIN scientists ON assignedto.scientist = scientists.ssn WHERE projects.hours = (SELECT MIN( projects.hours ) FROM projects)	scientist_1
SELECT wine.name FROM wine ORDER BY wine.score ASC LIMIT 1	wine_1
SELECT wine.name FROM wine ORDER BY wine.score ASC LIMIT 1	wine_1
SELECT wine.winery FROM wine ORDER BY wine.score ASC LIMIT 1	wine_1
SELECT wine.winery FROM wine ORDER BY wine.score ASC LIMIT 1	wine_1
SELECT wine.name FROM wine WHERE wine.year = '2008'	wine_1
SELECT wine.name FROM wine WHERE wine.year = '2008'	wine_1
SELECT wine.grape , wine.appelation FROM wine	wine_1
SELECT wine.grape , wine.appelation FROM wine	wine_1
SELECT wine.name , wine.score FROM wine	wine_1
SELECT wine.name , wine.score FROM wine	wine_1
SELECT appellations.area , appellations.county FROM appellations	wine_1
SELECT appellations.area , appellations.county FROM appellations	wine_1
SELECT wine.price FROM wine WHERE wine.year<2010	wine_1
SELECT wine.price FROM wine WHERE wine.year<2010	wine_1
SELECT wine.name FROM wine WHERE wine.score > 90	wine_1
SELECT wine.name FROM wine WHERE wine.score > 90	wine_1
SELECT DISTINCT wine.name FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'red'	wine_1
SELECT DISTINCT wine.name FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'red'	wine_1
SELECT DISTINCT wine.name FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.area = 'North Coast'	wine_1
SELECT DISTINCT wine.name FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.area = 'North Coast'	wine_1
SELECT COUNT( * ) FROM wine WHERE wine.winery = 'Robert Biale'	wine_1
SELECT COUNT( * ) FROM wine WHERE wine.winery = 'Robert Biale'	wine_1
SELECT COUNT( * ) FROM appellations WHERE appellations.county = 'Napa'	wine_1
SELECT COUNT( * ) FROM appellations WHERE appellations.county = 'Napa'	wine_1
SELECT AVG( wine.price ) FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.county = 'Sonoma'	wine_1
SELECT AVG( wine.price ) FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.county = 'Sonoma'	wine_1
SELECT wine.name , wine.score FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'white'	wine_1
SELECT wine.name , wine.score FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'white'	wine_1
SELECT MAX( wine.price ) FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.area = 'Central Coast' AND wine.year<2005	wine_1
SELECT MAX( wine.price ) FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.area = 'Central Coast' AND wine.year<2005	wine_1
SELECT DISTINCT grapes.grape FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'white' AND wine.score > 90	wine_1
SELECT DISTINCT grapes.grape FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'white' AND wine.score > 90	wine_1
SELECT wine.name FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'Red' AND wine.price > 50	wine_1
SELECT wine.name FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'red' AND wine.price > 50	wine_1
SELECT wine.name FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.county = 'Monterey' AND wine.price<50	wine_1
SELECT wine.name FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.county = 'Monterey' AND wine.price<50	wine_1
SELECT COUNT( * ) , wine.grape FROM wine GROUP BY wine.grape	wine_1
SELECT COUNT( * ) , wine.grape FROM wine GROUP BY wine.grape	wine_1
SELECT AVG( wine.price ) , wine.year FROM wine GROUP BY wine.year	wine_1
SELECT AVG( wine.price ) , wine.year FROM wine GROUP BY wine.year	wine_1
SELECT DISTINCT wine.name FROM wine WHERE wine.price > (SELECT MIN( wine.price ) FROM wine WHERE wine.winery = 'John Anthony')	wine_1
SELECT DISTINCT wine.name FROM wine WHERE wine.price > (SELECT MIN( wine.price ) FROM wine WHERE wine.winery = 'John Anthony')	wine_1
SELECT DISTINCT wine.name FROM wine ORDER BY wine.name ASC	wine_1
SELECT DISTINCT wine.name FROM wine ORDER BY wine.name ASC	wine_1
SELECT DISTINCT wine.name FROM wine ORDER BY wine.price ASC	wine_1
SELECT DISTINCT wine.name FROM wine ORDER BY wine.price ASC	wine_1
SELECT appellations.area FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE wine.year<2010 GROUP BY wine.appelation ORDER BY COUNT( * ) DESC LIMIT 1	wine_1
SELECT appellations.area FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE wine.year<2010 GROUP BY wine.appelation ORDER BY COUNT( * ) DESC LIMIT 1	wine_1
SELECT grapes.color FROM grapes JOIN wine ON grapes.grape = wine.grape GROUP BY wine.grape ORDER BY AVG( wine.price ) DESC LIMIT 1	wine_1
SELECT grapes.color FROM grapes JOIN wine ON grapes.grape = wine.grape GROUP BY wine.grape ORDER BY AVG( wine.price ) DESC LIMIT 1	wine_1
SELECT DISTINCT wine.name FROM wine WHERE wine.year<2000 OR wine.year > 2010	wine_1
SELECT DISTINCT wine.name FROM wine WHERE wine.year<2000 OR wine.year > 2010	wine_1
SELECT DISTINCT wine.winery FROM wine WHERE wine.price BETWEEN 50 and 100	wine_1
SELECT DISTINCT wine.winery FROM wine WHERE wine.price BETWEEN 50 and 100	wine_1
SELECT AVG( wine.price ) , AVG( wine.cases ) FROM wine WHERE wine.year = 2009 AND wine.grape = 'Zinfandel'	wine_1
SELECT AVG( wine.price ) , AVG( wine.cases ) FROM wine WHERE wine.year = 2009 AND wine.grape = 'Zinfandel'	wine_1
SELECT MAX( wine.price ) , MAX( wine.score ) FROM wine WHERE wine.appelation = 'St. Helena'	wine_1
SELECT MAX( wine.price ) , MAX( wine.score ) FROM wine WHERE wine.appelation = 'St. Helena'	wine_1
SELECT MAX( wine.price ) , MAX( wine.score ) , wine.year FROM wine GROUP BY wine.year	wine_1
SELECT MAX( wine.price ) , MAX( wine.score ) , wine.year FROM wine GROUP BY wine.year	wine_1
SELECT AVG( wine.price ) , AVG( wine.score ) , wine.appelation FROM wine GROUP BY wine.appelation	wine_1
SELECT AVG( wine.price ) , AVG( wine.score ) , wine.appelation FROM wine GROUP BY wine.appelation	wine_1
SELECT wine.winery FROM wine GROUP BY wine.winery HAVING COUNT( * ) >= 4	wine_1
SELECT wine.winery FROM wine GROUP BY wine.winery HAVING COUNT( * ) >= 4	wine_1
SELECT appellations.county FROM appellations JOIN wine ON appellations.appelation = wine.appelation GROUP BY wine.appelation HAVING COUNT( * ) <= 3	wine_1
SELECT appellations.county FROM appellations JOIN wine ON appellations.appelation = wine.appelation GROUP BY wine.appelation HAVING COUNT( * ) <= 3	wine_1
SELECT wine.name FROM wine WHERE wine.year<(SELECT MIN( wine.year ) FROM wine WHERE wine.winery = 'Brander')	wine_1
SELECT wine.name FROM wine WHERE wine.year<(SELECT MIN( wine.year ) FROM wine WHERE wine.winery = 'Brander')	wine_1
SELECT wine.name FROM wine WHERE wine.price > (SELECT MAX( wine.price ) FROM wine WHERE wine.year = 2006)	wine_1
SELECT wine.name FROM wine WHERE wine.price > (SELECT MAX( wine.price ) FROM wine WHERE wine.year = 2006)	wine_1
SELECT wine.winery FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'white' GROUP BY wine.winery ORDER BY COUNT( * ) DESC LIMIT 3	wine_1
SELECT wine.winery FROM grapes JOIN wine ON grapes.grape = wine.grape WHERE grapes.color = 'white' GROUP BY wine.winery ORDER BY COUNT( * ) DESC LIMIT 3	wine_1
SELECT wine.grape , wine.winery , wine.year FROM wine WHERE wine.price > 100 ORDER BY wine.year ASC	wine_1
SELECT wine.grape , wine.winery , wine.year FROM wine WHERE wine.price > 100 ORDER BY wine.year ASC	wine_1
SELECT wine.grape , wine.appelation , wine.name FROM wine WHERE wine.score > 93 ORDER BY wine.name ASC	wine_1
SELECT wine.grape , wine.appelation , wine.name FROM wine WHERE wine.score > 93 ORDER BY wine.name ASC	wine_1
SELECT wine.appelation FROM wine WHERE wine.year > 2008 EXCEPT SELECT appellations.appelation FROM appellations WHERE appellations.area = 'Central Coast'	wine_1
SELECT wine.appelation FROM wine WHERE wine.year > 2008 EXCEPT SELECT appellations.appelation FROM appellations WHERE appellations.area = 'Central Coast'	wine_1
SELECT AVG( wine.price ) FROM wine WHERE wine.appelation NOT IN (SELECT appellations.appelation FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.county = 'Sonoma')	wine_1
SELECT AVG( wine.price ) FROM wine WHERE wine.appelation NOT IN (SELECT appellations.appelation FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE appellations.county = 'Sonoma')	wine_1
SELECT appellations.county FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE wine.score > 90 GROUP BY appellations.county ORDER BY COUNT( * ) DESC LIMIT 1	wine_1
SELECT appellations.county FROM appellations JOIN wine ON appellations.appelation = wine.appelation WHERE wine.score > 90 GROUP BY appellations.county ORDER BY COUNT( * ) DESC LIMIT 1	wine_1
SELECT COUNT( * ) FROM station	train_station
SELECT station.name , station.location , station.number_of_platforms FROM station	train_station
SELECT DISTINCT station.location FROM station	train_station
SELECT station.name , station.total_passengers FROM station WHERE station.location != 'London'	train_station
SELECT station.name , station.main_services FROM station ORDER BY station.total_passengers DESC LIMIT 3	train_station
SELECT AVG( station.total_passengers ) , MAX( station.total_passengers ) FROM station WHERE station.location = 'London' OR station.location = 'Glasgow'	train_station
SELECT station.location , SUM( station.number_of_platforms ) , SUM( station.total_passengers ) FROM station GROUP BY station.location	train_station
SELECT DISTINCT station.location FROM station WHERE station.number_of_platforms >= 15 AND station.total_passengers > 25	train_station
SELECT station.location FROM station EXCEPT SELECT station.location FROM station WHERE station.number_of_platforms >= 15	train_station
SELECT station.location FROM station GROUP BY station.location ORDER BY COUNT( * ) DESC LIMIT 1	train_station
SELECT train.name , train.time , train.service FROM train	train_station
SELECT COUNT( * ) FROM train	train_station
SELECT train.name , train.service FROM train ORDER BY train.time ASC	train_station
SELECT station.name , COUNT( * ) FROM train_station JOIN station ON train_station.station_id = station.station_id GROUP BY train_station.station_id	train_station
SELECT station.name , train.name FROM train_station JOIN station ON train_station.station_id = station.station_id JOIN train_station ON train.train_id = train_station.train_id	train_station
SELECT train.name , train.time FROM train_station JOIN station ON train_station.station_id = station.station_id JOIN train_station ON train.train_id = train_station.train_id WHERE station.location = 'London' ORDER BY train.time DESC	train_station
SELECT station.name FROM train_station JOIN station ON train_station.station_id = station.station_id GROUP BY train_station.station_id ORDER BY COUNT( * ) DESC LIMIT 1	train_station
SELECT station.name FROM train_station JOIN station ON train_station.station_id = station.station_id GROUP BY train_station.station_id HAVING COUNT( * ) >= 2	train_station
SELECT station.location FROM station GROUP BY station.location HAVING COUNT( * ) = 1	train_station
SELECT station.name FROM station WHERE station.station_id NOT IN (SELECT train_station.station_id FROM train_station)	train_station
SELECT station.name FROM train_station JOIN station ON train_station.station_id = station.station_id JOIN train_station ON train.train_id = train_station.train_id WHERE train.name = 'Ananthapuri Express' INTERSECT SELECT station.name FROM train_station JOIN station ON train_station.station_id = station.station_id JOIN train_station ON train.train_id = train_station.train_id WHERE train.name = 'Guruvayur Express'	train_station
station , station	train_station
SELECT station.name , station.location FROM station ORDER BY station.annual_entry_exit , station.annual_interchanges ASC	train_station
SELECT vehicles.vehicle_id FROM vehicles	driving_school
SELECT vehicles.vehicle_id FROM vehicles	driving_school
SELECT COUNT( * ) FROM vehicles	driving_school
SELECT COUNT( * ) FROM vehicles	driving_school
SELECT vehicles.vehicle_details FROM vehicles WHERE vehicles.vehicle_id = 1	driving_school
SELECT vehicles.vehicle_details FROM vehicles WHERE vehicles.vehicle_id = 1	driving_school
SELECT staff.first_name , staff.middle_name , staff.last_name FROM staff	driving_school
SELECT staff.first_name , staff.middle_name , staff.last_name FROM staff	driving_school
SELECT staff.date_of_birth FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT staff.date_of_birth FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT staff.date_joined_staff FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT staff.date_joined_staff FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT staff.date_left_staff FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT staff.date_left_staff FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT COUNT( * ) FROM staff WHERE staff.first_name = 'Ludie'	driving_school
SELECT COUNT( * ) FROM staff WHERE staff.first_name = 'Ludie'	driving_school
SELECT staff.nickname FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT staff.nickname FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT COUNT( * ) FROM staff	driving_school
SELECT COUNT( * ) FROM staff	driving_school
SELECT addresses.city FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT addresses.city FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT addresses.country , addresses.state_province_county FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT addresses.country , addresses.state_province_county FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT SUM( lessons.lesson_time ) FROM lessons JOIN customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Rylan' AND customers.last_name = 'Goodwin'	driving_school
SELECT SUM( lessons.lesson_time ) FROM lessons JOIN customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Rylan' AND customers.last_name = 'Goodwin'	driving_school
SELECT addresses.zip_postcode FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT addresses.zip_postcode FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT COUNT( * ) FROM addresses WHERE addresses.state_province_county = 'Georgia'	driving_school
SELECT COUNT( * ) FROM addresses WHERE addresses.state_province_county = 'Georgia'	driving_school
SELECT staff.first_name , staff.last_name FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE addresses.city = 'Damianfort'	driving_school
SELECT staff.first_name , staff.last_name FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE addresses.city = 'Damianfort'	driving_school
SELECT addresses.city , COUNT( * ) FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id GROUP BY addresses.city ORDER BY COUNT( * ) DESC LIMIT 1	driving_school
SELECT addresses.city , COUNT( * ) FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id GROUP BY addresses.city ORDER BY COUNT( * ) DESC LIMIT 1	driving_school
2 >= 2	driving_school
* >= 2	driving_school
SELECT customers.first_name , customers.last_name FROM customers	driving_school
SELECT customers.first_name , customers.last_name FROM customers	driving_school
SELECT customers.email_address , customers.date_of_birth FROM customers WHERE customers.first_name = 'Carole'	driving_school
SELECT customers.email_address , customers.date_of_birth FROM customers WHERE customers.first_name = 'Carole'	driving_school
SELECT customers.phone_number , customers.email_address FROM customers WHERE customers.amount_outstanding > 2000	driving_school
SELECT customers.phone_number , customers.email_address FROM customers WHERE customers.amount_outstanding > 2000	driving_school
SELECT customers.customer_status_code , customers.cell_mobile_phone_number , customers.email_address FROM customers WHERE customers.first_name = 'Marina' OR customers.last_name = 'Kohler'	driving_school
SELECT customers.customer_status_code , customers.cell_mobile_phone_number , customers.email_address FROM customers WHERE customers.first_name = 'Marina' OR customers.last_name = 'Kohler'	driving_school
SELECT customers.date_of_birth FROM customers WHERE customers.customer_status_code = 'Good Customer'	driving_school
SELECT customers.date_of_birth FROM customers WHERE customers.customer_status_code = 'Good Customer'	driving_school
SELECT customers.date_became_customer FROM customers WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT customers.date_became_customer FROM customers WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT COUNT( * ) FROM customers	driving_school
SELECT COUNT( * ) FROM customers	driving_school
SELECT customers.customer_status_code , COUNT( * ) FROM customers GROUP BY customers.customer_status_code	driving_school
SELECT customers.customer_status_code , COUNT( * ) FROM customers GROUP BY customers.customer_status_code	driving_school
SELECT customers.customer_status_code FROM customers GROUP BY customers.customer_status_code ORDER BY COUNT( * ) ASC LIMIT 1	driving_school
SELECT customers.customer_status_code FROM customers GROUP BY customers.customer_status_code ORDER BY COUNT( * ) ASC LIMIT 1	driving_school
SELECT COUNT( * ) FROM lessons JOIN customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Rylan' AND customers.last_name = 'Goodwin' AND lessons.lesson_status_code = 'completed'	driving_school
SELECT COUNT( * ) FROM lessons JOIN customers ON lessons.customer_id = customers.customer_id WHERE lessons.lesson_date = 'lessons.lesson_status_code' AND customers.last_name = 'Goodwin'	driving_school
SELECT MAX( customers.amount_outstanding ) , MIN( customers.amount_outstanding ) , AVG( customers.amount_outstanding ) FROM customers	driving_school
SELECT MAX( customers.amount_outstanding ) , MIN( customers.amount_outstanding ) , AVG( customers.amount_outstanding ) FROM customers	driving_school
SELECT customers.first_name , customers.last_name FROM customers WHERE customers.amount_outstanding BETWEEN 1000 and 3000	driving_school
SELECT customers.first_name , customers.last_name FROM customers WHERE customers.amount_outstanding BETWEEN 1000 and 3000	driving_school
SELECT customers.first_name , customers.last_name FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE addresses.city = 'Lockmanfurt'	driving_school
SELECT customers.first_name , customers.last_name FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE addresses.city = 'Lockmanfurt'	driving_school
SELECT addresses.country FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT addresses.country FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT addresses.zip_postcode FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT addresses.zip_postcode FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT addresses.city FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id GROUP BY addresses.city ORDER BY COUNT( * ) DESC LIMIT 1	driving_school
SELECT addresses.city FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id GROUP BY addresses.city ORDER BY COUNT( * ) DESC LIMIT 1	driving_school
SELECT SUM( customer_payments.amount_payment ) FROM customer_payments JOIN customers ON customer_payments.customer_id = customers.customer_id WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT SUM( customer_payments.amount_payment ) FROM customer_payments JOIN customers ON customer_payments.customer_id = customers.customer_id WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard'	driving_school
SELECT COUNT( * ) FROM customers WHERE customers.customer_id NOT IN (SELECT customer_payments.customer_id FROM customer_payments)	driving_school
SELECT COUNT( * ) FROM customers WHERE customers.customer_id NOT IN (SELECT customer_payments.customer_id FROM customer_payments)	driving_school
SELECT customers.first_name , customers.last_name FROM customer_payments JOIN customers ON customer_payments.customer_id = customers.customer_id GROUP BY customer_payments.customer_id HAVING COUNT( * ) > 2	driving_school
SELECT customers.first_name , customers.last_name FROM customer_payments JOIN customers ON customer_payments.customer_id = customers.customer_id GROUP BY customer_payments.customer_id HAVING COUNT( * ) > 2	driving_school
SELECT customer_payments.payment_method_code , COUNT( * ) FROM customer_payments GROUP BY customer_payments.payment_method_code	driving_school
SELECT customer_payments.payment_method_code , COUNT( * ) FROM customer_payments GROUP BY customer_payments.payment_method_code	driving_school
SELECT COUNT( * ) FROM lessons WHERE lessons.lesson_status_code = 'cancelled'	driving_school
SELECT COUNT( * ) FROM lessons WHERE lessons.lesson_status_code = 'cancelled'	driving_school
SELECT lessons.lesson_id FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa,' AND staff.last_name = 'Sawayn' AND staff.nickname LIKE '%s%'	driving_school
SELECT lessons.lesson_id FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn' AND staff.nickname LIKE '%s%'	driving_school
SELECT COUNT( * ) FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name LIKE '%a%'	driving_school
SELECT COUNT( * ) FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name LIKE '%a%'	driving_school
SELECT SUM( lessons.lesson_time ) FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT SUM( lessons.lesson_time ) FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT AVG( lessons.price ) FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT AVG( lessons.price ) FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn'	driving_school
SELECT COUNT( * ) FROM lessons JOIN customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Ray'	driving_school
SELECT COUNT( * ) FROM lessons JOIN customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Ray'	driving_school
SELECT customers.last_name FROM customers INTERSECT SELECT staff.last_name FROM staff	driving_school
SELECT customers.last_name FROM customers INTERSECT SELECT staff.last_name FROM staff	driving_school
SELECT staff.first_name FROM staff EXCEPT SELECT staff.first_name FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id	driving_school
SELECT staff.first_name FROM staff EXCEPT SELECT staff.first_name FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id	driving_school
SELECT vehicles.vehicle_id , vehicles.vehicle_details FROM vehicles JOIN lessons ON vehicles.vehicle_id = lessons.vehicle_id GROUP BY vehicles.vehicle_id ORDER BY COUNT( * ) DESC LIMIT 1	driving_school
SELECT COUNT( * ) FROM faculty	activity_1
SELECT COUNT( * ) FROM faculty	activity_1
SELECT DISTINCT faculty.rank FROM faculty	activity_1
SELECT DISTINCT faculty.rank FROM faculty	activity_1
SELECT DISTINCT faculty.building FROM faculty	activity_1
SELECT DISTINCT faculty.building FROM faculty	activity_1
SELECT faculty.rank , faculty.fname , faculty.lname FROM faculty	activity_1
SELECT faculty.rank , faculty.fname , faculty.lname FROM faculty	activity_1
SELECT faculty.fname , faculty.lname , faculty.phone FROM faculty WHERE faculty.sex = 'f'	activity_1
SELECT faculty.fname , faculty.lname , faculty.phone FROM faculty WHERE faculty.sex = 'f'	activity_1
SELECT faculty.facid FROM faculty WHERE faculty.sex = 'm'	activity_1
SELECT faculty.facid FROM faculty WHERE faculty.sex = 'm'	activity_1
SELECT COUNT( * ) FROM faculty WHERE faculty.sex = 'f' AND faculty.rank = 'Professors'	activity_1
SELECT COUNT( * ) FROM faculty WHERE faculty.sex = 'f' AND faculty.rank = 'Professors'	activity_1
SELECT faculty.phone , faculty.room , faculty.building FROM faculty WHERE faculty.fname = 'Jerry' AND faculty.lname = 'Prince'	activity_1
SELECT faculty.phone , faculty.room , faculty.building FROM faculty WHERE faculty.fname = 'Jerry' AND faculty.lname = 'Prince'	activity_1
SELECT COUNT( * ) FROM faculty WHERE faculty.rank = 'Professors' AND faculty.building = 'NEB'	activity_1
SELECT COUNT( * ) FROM faculty WHERE faculty.rank = 'Professors' AND faculty.building = 'NEB'	activity_1
SELECT faculty.fname , faculty.lname FROM faculty WHERE faculty.rank = 'instructors'	activity_1
SELECT faculty.fname , faculty.lname FROM faculty WHERE faculty.rank = 'instructors'	activity_1
SELECT faculty.building , COUNT( * ) FROM faculty GROUP BY faculty.building	activity_1
SELECT faculty.building , COUNT( * ) FROM faculty GROUP BY faculty.building	activity_1
SELECT faculty.building FROM faculty GROUP BY faculty.building ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT faculty.building FROM faculty GROUP BY faculty.building ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT faculty.building FROM faculty WHERE faculty.rank = 'professors' GROUP BY faculty.building HAVING COUNT( * ) >= 10	activity_1
SELECT faculty.building FROM faculty WHERE faculty.rank = 'professors' GROUP BY faculty.building HAVING COUNT( DISTINCT * ) = 2	activity_1
SELECT faculty.rank , COUNT( * ) FROM faculty GROUP BY faculty.rank	activity_1
SELECT faculty.rank , COUNT( * ) FROM faculty GROUP BY faculty.rank	activity_1
SELECT faculty.rank , faculty.sex , COUNT( * ) FROM faculty GROUP BY faculty.rank , faculty.sex	activity_1
SELECT faculty.rank , faculty.sex , COUNT( * ) FROM faculty GROUP BY faculty.rank , faculty.sex	activity_1
SELECT faculty.rank FROM faculty GROUP BY faculty.rank ORDER BY COUNT( * ) ASC LIMIT 1	activity_1
SELECT faculty.rank FROM faculty GROUP BY faculty.rank ORDER BY COUNT( * ) ASC LIMIT 1	activity_1
SELECT faculty.sex , COUNT( * ) FROM faculty WHERE faculty.rank = 'm' GROUP BY faculty.sex	activity_1
SELECT faculty.sex , COUNT( * ) FROM faculty WHERE faculty.rank = 'assistant professors' ORDER BY faculty.sex ASC	activity_1
SELECT faculty.fname , faculty.lname FROM faculty JOIN student ON faculty.facid = student.advisor WHERE student.fname = 'Linda' AND student.lname = 'Smith'	activity_1
SELECT faculty.fname , faculty.lname FROM faculty JOIN student ON faculty.facid = student.advisor WHERE student.fname = 'Linda' AND student.lname = 'Smith'	activity_1
SELECT student.stuid FROM faculty JOIN student ON faculty.facid = student.advisor WHERE faculty.rank = 'professors'	activity_1
SELECT student.stuid FROM faculty JOIN student ON faculty.facid = student.advisor WHERE faculty.rank = 'professors'	activity_1
SELECT student.fname , student.lname FROM faculty JOIN student ON faculty.facid = student.advisor WHERE faculty.fname = 'Michael' AND faculty.lname = 'Goodrich'	activity_1
SELECT student.fname , student.lname FROM faculty JOIN student ON faculty.facid = student.advisor WHERE faculty.fname = 'Michael' AND faculty.lname = 'Goodrich'	activity_1
SELECT faculty.facid , COUNT( * ) FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.facid	activity_1
SELECT faculty.facid , COUNT( * ) FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.facid	activity_1
SELECT faculty.rank , COUNT( * ) FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.rank	activity_1
SELECT faculty.rank , COUNT( * ) FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.rank	activity_1
SELECT faculty.fname , faculty.lname FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.facid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT faculty.fname , faculty.lname FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.facid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT faculty.facid FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.facid HAVING COUNT( * ) >= 2	activity_1
SELECT faculty.facid FROM faculty JOIN student ON faculty.facid = student.advisor GROUP BY faculty.facid HAVING COUNT( * ) >= 2	activity_1
SELECT faculty.facid FROM faculty EXCEPT SELECT student.advisor FROM student	activity_1
SELECT faculty.facid FROM faculty EXCEPT SELECT student.advisor FROM student	activity_1
SELECT activity.activity_name FROM activity	activity_1
SELECT activity.activity_name FROM activity	activity_1
SELECT COUNT( * ) FROM activity	activity_1
SELECT COUNT( * ) FROM activity	activity_1
SELECT COUNT( DISTINCT faculty_participates_in.facid ) FROM faculty_participates_in	activity_1
SELECT COUNT( DISTINCT faculty_participates_in.facid ) FROM faculty_participates_in	activity_1
SELECT faculty.facid FROM faculty EXCEPT SELECT faculty_participates_in.facid FROM faculty_participates_in	activity_1
SELECT faculty.facid FROM faculty EXCEPT SELECT faculty_participates_in.facid FROM faculty_participates_in	activity_1
SELECT faculty_participates_in.facid FROM faculty_participates_in INTERSECT SELECT student.advisor FROM student	activity_1
SELECT faculty_participates_in.facid FROM faculty_participates_in INTERSECT SELECT student.advisor FROM student	activity_1
SELECT COUNT( * ) FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid WHERE faculty.fname = 'Mark' AND faculty.lname = 'Giuliano'	activity_1
SELECT COUNT( * ) FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid WHERE faculty.fname = 'Mark' AND faculty.lname = 'Giuliano'	activity_1
SELECT activity.activity_name FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN activity ON activity.actid = faculty_participates_in.actid WHERE faculty.fname = 'Mark' AND faculty.lname = 'Giuliano'	activity_1
SELECT activity.activity_name FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN activity ON activity.actid = faculty_participates_in.actid WHERE faculty.fname = 'Mark' AND faculty.lname = 'Giuliano'	activity_1
SELECT faculty.fname , faculty.lname , COUNT( * ) , faculty.facid FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid GROUP BY faculty.facid	activity_1
SELECT faculty.fname , faculty.lname , COUNT( * ) , faculty.facid FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid GROUP BY faculty.facid	activity_1
SELECT activity.activity_name , COUNT( * ) FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid GROUP BY activity.actid	activity_1
SELECT activity.activity_name , COUNT( * ) FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid GROUP BY activity.actid	activity_1
SELECT faculty.fname , faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid GROUP BY faculty.facid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT faculty.fname , faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid GROUP BY faculty.facid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid GROUP BY activity.actid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid GROUP BY activity.actid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT student.stuid FROM student EXCEPT SELECT participates_in.stuid FROM participates_in	activity_1
SELECT student.stuid FROM student EXCEPT SELECT participates_in.stuid FROM participates_in	activity_1
SELECT participates_in.stuid FROM participates_in INTERSECT SELECT student.stuid FROM student WHERE student.age<20	activity_1
SELECT participates_in.stuid FROM participates_in INTERSECT SELECT student.stuid FROM student WHERE student.age<20	activity_1
SELECT student.fname , student.lname FROM student JOIN participates_in ON student.stuid = participates_in.stuid GROUP BY student.stuid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT student.fname , student.lname FROM student JOIN participates_in ON student.stuid = participates_in.stuid GROUP BY student.stuid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT activity.activity_name FROM activity JOIN participates_in ON activity.actid = participates_in.actid GROUP BY activity.actid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT activity.activity_name FROM activity JOIN participates_in ON activity.actid = participates_in.actid GROUP BY activity.actid ORDER BY COUNT( * ) DESC LIMIT 1	activity_1
SELECT DISTINCT faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN faculty_participates_in ON faculty_participates_in.actid = faculty_participates_in.actid WHERE activity.activity_name = 'Canoeing' OR activity.activity_name = 'Kayaking'	activity_1
SELECT DISTINCT faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN faculty_participates_in ON faculty_participates_in.actid = faculty_participates_in.actid WHERE activity.activity_name = 'Canoeing' OR activity.activity_name = 'Kayaking'	activity_1
activity.actid = faculty_participates_in.actid	activity_1
SELECT faculty.lname FROM faculty WHERE faculty.rank = 'professors' EXCEPT SELECT DISTINCT faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN faculty_participates_in ON faculty_participates_in.actid = faculty_participates_in.actid WHERE activity.activity_name = 'Canoeing' OR activity.activity_name = 'Kayaking'	activity_1
SELECT faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN faculty_participates_in ON faculty_participates_in.actid = faculty_participates_in.actid WHERE activity.activity_name = 'Canoeing' INTERSECT SELECT faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN faculty_participates_in ON faculty_participates_in.actid = faculty_participates_in.actid WHERE activity.activity_name = 'Kayaking'	activity_1
SELECT faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN faculty_participates_in ON faculty_participates_in.actid = faculty_participates_in.actid WHERE activity.activity_name = 'Canoeing' INTERSECT SELECT faculty.lname FROM faculty JOIN faculty_participates_in ON faculty.facid = faculty_participates_in.facid JOIN faculty_participates_in ON faculty_participates_in.actid = faculty_participates_in.actid WHERE activity.activity_name = 'Kayaking'	activity_1
SELECT participates_in.stuid FROM activity JOIN activity ON activity.actid = activity.actid WHERE activity.activity_name = 'Canoeing' INTERSECT SELECT participates_in.stuid FROM activity JOIN activity ON activity.actid = activity.actid WHERE activity.activity_name = 'Kayaking'	activity_1
SELECT participates_in.stuid FROM activity JOIN activity ON activity.actid = activity.actid WHERE activity.activity_name = 'Canoeing' INTERSECT SELECT participates_in.stuid FROM activity JOIN activity ON activity.actid = activity.actid WHERE activity.activity_name = 'Kayaking'	activity_1
SELECT airports.name FROM airports WHERE airports.city = 'Goroka'	flight_4
SELECT airports.name FROM airports WHERE airports.city = 'Goroka'	flight_4
SELECT airports.name , airports.city , airports.country , airports.elevation FROM airports WHERE airports.city = 'New York'	flight_4
SELECT airports.name , airports.city , airports.country , airports.elevation FROM airports WHERE airports.city = 'New York'	flight_4
SELECT COUNT( * ) FROM airlines	flight_4
SELECT COUNT( * ) FROM airlines	flight_4
SELECT COUNT( * ) FROM airlines WHERE airlines.country = 'Russia'	flight_4
SELECT COUNT( * ) FROM airlines WHERE airlines.country = 'Russia'	flight_4
SELECT MAX( airports.elevation ) FROM airports WHERE airports.country = 'Iceland'	flight_4
SELECT MAX( airports.elevation ) FROM airports WHERE airports.country = 'Iceland'	flight_4
SELECT airports.name FROM airports WHERE airports.country = 'Cuba' OR airports.country = 'Argentina'	flight_4
SELECT airports.name FROM airports WHERE airports.country = 'Cuba' OR airports.country = 'Argentina'	flight_4
SELECT airlines.country FROM airlines WHERE airlines.name LIKE '%Orbit%'	flight_4
SELECT airlines.country FROM airlines WHERE airlines.name LIKE '%Orbit%'	flight_4
SELECT airports.name FROM airports WHERE airports.elevation >= -50 AND airports.elevation <= 50	flight_4
SELECT airports.name FROM airports WHERE airports.elevation >= -50 AND airports.elevation <= 50	flight_4
SELECT airports.country FROM airports ORDER BY airports.elevation DESC LIMIT 1	flight_4
SELECT airports.country FROM airports ORDER BY airports.elevation DESC LIMIT 1	flight_4
SELECT COUNT( * ) FROM airports WHERE airports.name LIKE '%International%'	flight_4
SELECT COUNT( * ) FROM airports WHERE airports.name LIKE '%Inter%'	flight_4
SELECT COUNT( DISTINCT airports.city ) FROM airports WHERE airports.country = 'Greenland'	flight_4
SELECT COUNT( DISTINCT airports.city ) FROM airports WHERE airports.country = 'Greenland'	flight_4
SELECT COUNT( * ) FROM airlines JOIN routes ON airlines.alid = routes.alid WHERE airlines.name = 'American Airlines'	flight_4
SELECT COUNT( * ) FROM airlines JOIN routes ON airlines.alid = routes.alid WHERE airlines.name = 'American Airlines'	flight_4
SELECT COUNT( * ) FROM airports JOIN routes ON airports.apid = routes.dst_apid WHERE airports.country = 'Canada'	flight_4
SELECT COUNT( * ) FROM airports JOIN routes ON airports.apid = routes.dst_apid WHERE airports.country = 'end in a Canadian'	flight_4
SELECT airports.name , airports.city , airports.country FROM airports ORDER BY airports.elevation ASC LIMIT 1	flight_4
SELECT airports.name , airports.city , airports.country FROM airports ORDER BY airports.elevation ASC LIMIT 1	flight_4
SELECT airports.name , airports.city , airports.country FROM airports ORDER BY airports.elevation DESC LIMIT 1	flight_4
SELECT airports.name , airports.city , airports.country FROM airports ORDER BY airports.elevation DESC LIMIT 1	flight_4
SELECT airports.name , airports.city , routes.dst_apid FROM airports JOIN routes ON airports.apid = routes.dst_apid GROUP BY routes.dst_apid ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airports.name , airports.city , routes.dst_apid FROM airports JOIN routes ON airports.apid = routes.dst_apid GROUP BY routes.dst_apid ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airlines.name , routes.alid FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY routes.alid ORDER BY COUNT( * ) DESC LIMIT 10	flight_4
SELECT airlines.name , routes.alid FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY routes.alid ORDER BY COUNT( * ) DESC LIMIT 10	flight_4
SELECT airports.name , airports.city , routes.src_apid FROM airports JOIN routes ON airports.apid = routes.src_apid GROUP BY routes.src_apid ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airports.name , airports.city , routes.src_apid FROM airports JOIN routes ON airports.apid = routes.src_apid GROUP BY routes.src_apid ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT COUNT( DISTINCT routes.dst_apid ) FROM airlines JOIN routes ON airlines.alid = routes.alid WHERE airlines.name = 'American Airlines'	flight_4
SELECT COUNT( DISTINCT routes.dst_apid ) FROM airlines JOIN routes ON airlines.alid = routes.alid WHERE airlines.name = 'American Airlines'	flight_4
SELECT airlines.country FROM airlines GROUP BY airlines.country ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airlines.country FROM airlines GROUP BY airlines.country ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airlines.country FROM airlines WHERE airlines.active = 'y' GROUP BY airlines.country ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airlines.country FROM airlines WHERE airlines.active = 'y' GROUP BY airlines.country ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airlines.country , COUNT( * ) FROM airlines GROUP BY airlines.country ORDER BY COUNT( * ) DESC	flight_4
SELECT airlines.country , COUNT( * ) FROM airlines GROUP BY airlines.country ORDER BY COUNT( * ) DESC	flight_4
SELECT COUNT( * ) , airports.country FROM airports GROUP BY airports.country ORDER BY COUNT( * ) DESC	flight_4
SELECT COUNT( * ) , airports.country FROM airports GROUP BY airports.country ORDER BY COUNT( * ) DESC	flight_4
SELECT COUNT( * ) , airports.city FROM airports WHERE airports.country = 'United States' GROUP BY airports.city ORDER BY COUNT( * ) DESC	flight_4
SELECT COUNT( * ) , airports.city FROM airports WHERE airports.country = 'yes' GROUP BY airports.city ORDER BY COUNT( * ) DESC	flight_4
SELECT airports.city FROM airports WHERE airports.country = 'United States' GROUP BY airports.city HAVING COUNT( * ) > 3	flight_4
SELECT airports.city FROM airports WHERE airports.country = 'United States' GROUP BY airports.city HAVING COUNT( * ) > 3	flight_4
SELECT COUNT( * ) FROM airports WHERE airports.city NOT IN (SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT( * ) > 3)	flight_4
SELECT COUNT( * ) FROM airports WHERE airports.city NOT IN (SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT( * ) > 3)	flight_4
SELECT airports.city , COUNT( * ) FROM airports GROUP BY airports.city HAVING COUNT( * ) > 1	flight_4
SELECT airports.city , COUNT( * ) FROM airports GROUP BY airports.city HAVING COUNT( * ) > 1	flight_4
SELECT airports.city FROM airports GROUP BY airports.city ORDER BY COUNT( * ) ASC HAVING COUNT( * ) > 2	flight_4
SELECT airports.city FROM airports GROUP BY airports.city ORDER BY COUNT( * ) ASC HAVING COUNT( * ) > 2	flight_4
SELECT COUNT( * ) , airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid GROUP BY airports.name	flight_4
SELECT COUNT( * ) , airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid GROUP BY airports.name	flight_4
SELECT COUNT( * ) , airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid GROUP BY airports.name ORDER BY COUNT( * ) DESC	flight_4
SELECT COUNT( * ) , airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid GROUP BY airports.name ORDER BY COUNT( * ) DESC	flight_4
SELECT AVG( airports.elevation ) , airports.country FROM airports GROUP BY airports.country	flight_4
SELECT AVG( airports.elevation ) , airports.country FROM airports GROUP BY airports.country	flight_4
SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT( * ) = 2	flight_4
SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT( * ) = 2	flight_4
SELECT airlines.country , airlines.name , COUNT( * ) FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.country , airlines.name	flight_4
SELECT airlines.country , airlines.name , COUNT( * ) FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.country , airlines.name	flight_4
SELECT COUNT( * ) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = 'Italy'	flight_4
SELECT COUNT( * ) FROM routes JOIN airports ON routes.dst_apid = airports.apid HAVING COUNT( DISTINCT routes.src_apid ) = airports.country	flight_4
SELECT COUNT( * ) FROM routes JOIN airports ON routes.dst_apid = airports.apid JOIN airlines ON routes.alid = airlines.alid WHERE airports.country = 'Italy' AND airlines.name = 'American Airlines'	flight_4
SELECT COUNT( * ) FROM routes JOIN airports ON routes.dst_apid = airports.apid JOIN airlines ON routes.alid = airlines.alid WHERE airports.country = 'Italy' AND airlines.name = 'American Airlines'	flight_4
SELECT COUNT( * ) FROM airports JOIN routes ON airports.apid = routes.dst_apid WHERE airports.name = 'John F Kennedy International Airport'	flight_4
SELECT COUNT( * ) FROM airports JOIN routes ON airports.apid = routes.dst_apid WHERE airports.name = 'John F Kennedy International Airport'	flight_4
SELECT COUNT( * ) FROM routes WHERE routes.dst_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'Canada') AND routes.src_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'United States')	flight_4
SELECT COUNT( * ) FROM routes WHERE routes.dst_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'Canada') AND routes.src_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'Canada')	flight_4
SELECT routes.rid FROM routes WHERE routes.dst_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'United States') AND routes.src_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'United States')	flight_4
SELECT routes.rid FROM routes WHERE routes.dst_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'United States') AND routes.src_apid IN (SELECT airports.apid FROM airports WHERE airports.country = 'United States')	flight_4
SELECT airlines.name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.name ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airlines.name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.name ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid WHERE airports.country = 'China' GROUP BY airports.name ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid WHERE airports.country = 'China' GROUP BY airports.name ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.dst_apid WHERE airports.country = 'China' GROUP BY airports.name ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.dst_apid WHERE airports.country = 'China' GROUP BY airports.name ORDER BY COUNT( * ) DESC LIMIT 1	flight_4
SELECT orders.order_id FROM orders ORDER BY orders.date_order_placed DESC LIMIT 1	tracking_orders
SELECT orders.order_id FROM orders ORDER BY orders.date_order_placed DESC LIMIT 1	tracking_orders
SELECT orders.order_id , orders.customer_id FROM orders ORDER BY orders.date_order_placed ASC LIMIT 1	tracking_orders
SELECT orders.order_id , orders.customer_id FROM orders ORDER BY orders.date_order_placed ASC LIMIT 1	tracking_orders
SELECT shipments.order_id FROM shipments WHERE shipments.shipment_tracking_number = '3452'	tracking_orders
SELECT shipments.order_id FROM shipments WHERE shipments.shipment_tracking_number = '3452'	tracking_orders
SELECT order_items.order_item_id FROM order_items WHERE order_items.product_id = 11	tracking_orders
SELECT order_items.order_item_id FROM order_items WHERE order_items.product_id = 11	tracking_orders
SELECT DISTINCT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Packing'	tracking_orders
SELECT DISTINCT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Packing'	tracking_orders
SELECT DISTINCT customers.customer_details FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'	tracking_orders
SELECT DISTINCT customers.customer_details FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT customers.customer_id FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT customers.customer_id FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT orders.order_id , orders.order_status FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.customer_name = 'Jeramie'	tracking_orders
SELECT orders.order_id , orders.order_status FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.customer_name = 'Jeramie'	tracking_orders
SELECT orders.date_order_placed FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.customer_name = 'Jeramie'	tracking_orders
SELECT orders.date_order_placed FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE customers.customer_name = 'Jeramie'	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.date_order_placed >= '2009-01-01' AND orders.date_order_placed <= '2010-01-01'	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.date_order_placed >= '2009-01-01' AND orders.date_order_placed <= '2010-01-01'	tracking_orders
SELECT DISTINCT order_items.product_id FROM orders JOIN order_items ON orders.order_id = order_items.order_id WHERE orders.date_order_placed >= '1975-01-01' AND orders.date_order_placed <= '1976-01-01'	tracking_orders
SELECT DISTINCT order_items.product_id FROM orders JOIN order_items ON orders.order_id = order_items.order_id WHERE orders.date_order_placed >= '1975-01-01' AND orders.date_order_placed <= '1976-01-01'	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road' INTERSECT SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road' INTERSECT SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'	tracking_orders
SELECT customers.customer_id FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road' INTERSECT SELECT customers.customer_id FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'	tracking_orders
SELECT customers.customer_id FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road' INTERSECT SELECT customers.customer_id FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'	tracking_orders
SELECT orders.date_order_placed FROM orders JOIN shipments ON orders.order_id = shipments.order_id WHERE shipments.shipment_tracking_number = 3452	tracking_orders
SELECT orders.date_order_placed FROM orders JOIN shipments ON orders.order_id = shipments.order_id WHERE shipments.shipment_tracking_number = 3452	tracking_orders
SELECT orders.date_order_placed FROM orders JOIN shipments ON orders.order_id = shipments.order_id WHERE shipments.invoice_number = 10	tracking_orders
SELECT orders.date_order_placed FROM orders JOIN shipments ON orders.order_id = shipments.order_id WHERE shipments.invoice_number = 10	tracking_orders
SELECT COUNT( * ) , products.product_id FROM orders JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_id	tracking_orders
SELECT COUNT( * ) , products.product_id FROM orders JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_id	tracking_orders
SELECT products.product_name , COUNT( * ) FROM orders JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_id	tracking_orders
SELECT products.product_name , COUNT( * ) FROM orders JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_id	tracking_orders
SELECT shipments.order_id FROM shipments WHERE shipments.shipment_date > '2000-01-01'	tracking_orders
SELECT shipments.order_id FROM shipments WHERE shipments.shipment_date > '2000-01-01'	tracking_orders
SELECT shipments.order_id FROM shipments WHERE shipments.shipment_date = (SELECT MAX( shipments.shipment_date ) FROM shipments)	tracking_orders
SELECT shipments.order_id FROM shipments WHERE shipments.shipment_date = (SELECT MAX( shipments.shipment_date ) FROM shipments)	tracking_orders
SELECT DISTINCT products.product_name FROM products ORDER BY products.product_name ASC	tracking_orders
SELECT DISTINCT products.product_name FROM products ORDER BY products.product_name ASC	tracking_orders
SELECT DISTINCT orders.order_id FROM orders ORDER BY orders.date_order_placed ASC	tracking_orders
SELECT DISTINCT orders.order_id FROM orders ORDER BY orders.date_order_placed ASC	tracking_orders
SELECT orders.order_id FROM orders JOIN order_items ON orders.order_id = order_items.order_id GROUP BY orders.order_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT orders.order_id FROM orders JOIN order_items ON orders.order_id = order_items.order_id GROUP BY orders.order_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id ORDER BY COUNT( * ) DESC LIMIT 1	tracking_orders
SELECT invoices.invoice_number FROM invoices WHERE invoices.invoice_date<'1989-09-03' OR invoices.invoice_date > '2007-12-25'	tracking_orders
SELECT invoices.invoice_number FROM invoices WHERE invoices.invoice_date<'1989-09-03' OR invoices.invoice_date > '2007-12-25'	tracking_orders
SELECT DISTINCT invoices.invoice_details FROM invoices WHERE invoices.invoice_date<'1989-09-03' OR invoices.invoice_date > '2007-12-25'	tracking_orders
SELECT DISTINCT invoices.invoice_details FROM invoices WHERE invoices.invoice_date<'1989-09-03' OR invoices.invoice_date > '2007-12-25'	tracking_orders
SELECT customers.customer_name , COUNT( * ) FROM orders JOIN customers ON orders.customer_id = customers.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) >= 2	tracking_orders
SELECT customers.customer_name , COUNT( * ) FROM orders JOIN customers ON orders.customer_id = customers.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) >= 2	tracking_orders
SELECT customers.customer_name FROM orders JOIN customers ON orders.customer_id = customers.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) <= 2	tracking_orders
SELECT customers.customer_name FROM orders JOIN customers ON orders.customer_id = customers.customer_id GROUP BY customers.customer_id HAVING COUNT( * ) <= 2	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_name = 'food' GROUP BY customers.customer_id HAVING COUNT( * ) >= 1	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE products.product_name = 'food' GROUP BY customers.customer_id HAVING COUNT( * ) >= 1	tracking_orders
customers , order_items	tracking_orders
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN order_items ON orders.order_id = order_items.order_id JOIN products ON order_items.product_id = products.product_id WHERE order_items.order_item_status = 'Cancel' AND products.product_name = 'food'	tracking_orders
SELECT COUNT( * ) FROM architect WHERE architect.gender = 'female'	architecture
SELECT architect.name , architect.nationality , architect.id FROM architect WHERE architect.gender = 'male' ORDER BY architect.name ASC	architecture
SELECT MAX( bridge.length_meters ) , architect.name FROM bridge JOIN architect ON bridge.architect_id = architect.id	architecture
SELECT AVG( bridge.length_feet ) FROM bridge	architecture
SELECT mill.name , mill.built_year FROM mill WHERE mill.type = 'Grondzeiler'	architecture
SELECT DISTINCT architect.name , architect.nationality FROM architect JOIN mill ON architect.id = mill.architect_id	architecture
SELECT mill.name FROM mill WHERE mill.location != 'Donceel'	architecture
SELECT DISTINCT mill.type FROM mill JOIN architect ON mill.architect_id = architect.id WHERE architect.nationality = 'American' OR architect.nationality = 'Canadian'	architecture
SELECT architect.id , architect.name FROM architect JOIN bridge ON architect.id = bridge.architect_id GROUP BY architect.id HAVING COUNT( * ) >= 3	architecture
SELECT architect.id , architect.name , architect.nationality FROM architect JOIN mill ON architect.id = mill.architect_id GROUP BY architect.id ORDER BY COUNT( * ) DESC LIMIT 1	architecture
SELECT architect.id , architect.name , architect.gender FROM architect JOIN mill ON architect.id = mill.architect_id GROUP BY architect.id HAVING COUNT( * ) = 2 UNION SELECT architect.id , architect.name , architect.gender FROM architect JOIN mill ON architect.id = mill.architect_id GROUP BY architect.id HAVING COUNT( * ) = 1	architecture
SELECT bridge.location FROM bridge WHERE bridge.name = 'Kolob Arch' OR bridge.name = 'Rainbow Bridge'	architecture
SELECT mill.name FROM mill WHERE mill.name LIKE '%Moulin%'	architecture
SELECT DISTINCT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id JOIN bridge ON bridge.architect_id = architect.id WHERE bridge.length_meters > 80	architecture
SELECT mill.type , COUNT( * ) FROM mill GROUP BY mill.type ORDER BY COUNT( * ) DESC LIMIT 1	architecture
SELECT COUNT( * ) FROM architect WHERE architect.id NOT IN (SELECT mill.architect_id FROM mill WHERE mill.built_year<1850)	architecture
SELECT bridge.name FROM bridge JOIN architect ON bridge.architect_id = architect.id WHERE architect.nationality = 'american' ORDER BY bridge.length_feet ASC	architecture
SELECT COUNT( * ) FROM book_club	culture_company
SELECT COUNT( * ) FROM book_club	culture_company
SELECT book_club.book_title , book_club.author_or_editor FROM book_club WHERE book_club.year > 1989	culture_company
SELECT book_club.book_title , book_club.author_or_editor FROM book_club WHERE book_club.year > 1989	culture_company
SELECT DISTINCT book_club.publisher FROM book_club	culture_company
SELECT DISTINCT book_club.publisher FROM book_club	culture_company
SELECT book_club.year , book_club.book_title , book_club.publisher FROM book_club ORDER BY book_club.year DESC	culture_company
SELECT book_club.year , book_club.book_title , book_club.publisher FROM book_club ORDER BY book_club.year DESC	culture_company
SELECT book_club.publisher , COUNT( * ) FROM book_club GROUP BY book_club.publisher	culture_company
SELECT book_club.publisher , COUNT( * ) FROM book_club GROUP BY book_club.publisher	culture_company
SELECT book_club.publisher FROM book_club GROUP BY book_club.publisher ORDER BY COUNT( * ) DESC LIMIT 1	culture_company
SELECT book_club.publisher FROM book_club GROUP BY book_club.publisher ORDER BY COUNT( * ) DESC LIMIT 1	culture_company
SELECT book_club.category , COUNT( * ) FROM book_club GROUP BY book_club.category	culture_company
SELECT book_club.category , COUNT( * ) FROM book_club GROUP BY book_club.category	culture_company
SELECT book_club.category FROM book_club WHERE book_club.year > 1989 GROUP BY book_club.category HAVING COUNT( * ) >= 2	culture_company
SELECT book_club.category FROM book_club WHERE book_club.year > 1989 GROUP BY book_club.category HAVING COUNT( * ) >= 2	culture_company
SELECT book_club.publisher FROM book_club WHERE book_club.year = 1989 INTERSECT SELECT book_club.publisher FROM book_club WHERE book_club.year = 1990	culture_company
SELECT book_club.publisher FROM book_club WHERE book_club.year = 1989 INTERSECT SELECT book_club.publisher FROM book_club WHERE book_club.year = 1990	culture_company
SELECT book_club.publisher FROM book_club EXCEPT SELECT book_club.publisher FROM book_club WHERE book_club.year = 1989	culture_company
SELECT book_club.publisher FROM book_club EXCEPT SELECT book_club.publisher FROM book_club WHERE book_club.year = 1989	culture_company
SELECT movie.title , movie.year , movie.director FROM movie ORDER BY movie.budget_million ASC	culture_company
SELECT movie.title , movie.year , movie.director FROM movie ORDER BY movie.budget_million ASC	culture_company
SELECT COUNT( DISTINCT movie.director ) FROM movie	culture_company
SELECT COUNT( DISTINCT movie.director ) FROM movie	culture_company
SELECT movie.title , movie.director FROM movie WHERE movie.year <= 2000 ORDER BY movie.gross_worldwide DESC LIMIT 1	culture_company
SELECT movie.title , movie.director FROM movie WHERE movie.year <= 2000 ORDER BY movie.gross_worldwide DESC LIMIT 1	culture_company
SELECT movie.director FROM movie WHERE movie.year = 2000 INTERSECT SELECT movie.director FROM movie WHERE movie.year = 1999	culture_company
SELECT movie.director FROM movie WHERE movie.year = 2000 INTERSECT SELECT movie.director FROM movie WHERE movie.year = 1999	culture_company
SELECT movie.director FROM movie WHERE movie.year = 1999 OR movie.year = 2000	culture_company
SELECT movie.director FROM movie WHERE movie.year = 1999 OR movie.year = 2000	culture_company
SELECT AVG( movie.budget_million ) , MAX( movie.budget_million ) , MIN( movie.budget_million ) FROM movie WHERE movie.year<2000	culture_company
SELECT AVG( movie.budget_million ) , MAX( movie.budget_million ) , MIN( movie.budget_million ) FROM movie WHERE movie.year<2000	culture_company
SELECT culture_company.company_name FROM culture_company JOIN book_club ON culture_company.book_club_id = book_club.book_club_id WHERE book_club.publisher = 'Alyson'	culture_company
SELECT culture_company.company_name FROM culture_company JOIN book_club ON culture_company.book_club_id = book_club.book_club_id WHERE book_club.publisher = 'Alyson'	culture_company
SELECT movie.title , book_club.book_title FROM movie JOIN culture_company ON movie.movie_id = culture_company.movie_id JOIN book_club ON book_club.book_club_id = culture_company.book_club_id WHERE culture_company.incorporated_in = 'China'	culture_company
SELECT movie.title , book_club.book_title FROM movie JOIN culture_company ON movie.movie_id = culture_company.movie_id JOIN book_club ON book_club.book_club_id = culture_company.book_club_id WHERE culture_company.incorporated_in = 'China'	culture_company
SELECT culture_company.company_name FROM movie JOIN culture_company ON movie.movie_id = culture_company.movie_id WHERE movie.year = 1999	culture_company
SELECT culture_company.company_name FROM movie JOIN culture_company ON movie.movie_id = culture_company.movie_id WHERE movie.year = 1999	culture_company
